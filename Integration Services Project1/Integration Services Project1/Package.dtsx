<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/2/2017 8:18:31 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="WORK-PC"
  DTS:CreatorName="WORK-PC\Vladislavs"
  DTS:DTSID="{CF44C419-A0C9-4240-AE25-3D5EC5A8E7F2}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="2057"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="156"
  DTS:VersionGUID="{73558D9B-51EA-4AED-AED0-12FE291D8441}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[file length id FFCM]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{a240238e-2a31-400b-953e-68476e6d866b}"
      DTS:ObjectName="file length id FFCM">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::LogFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter="_x000D__x000A_"
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="default">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="one"
              DTS:DTSID="{54C20BBE-D06B-40E1-BE50-A466289E3297}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="two"
              DTS:DTSID="{4502CEC8-72E0-4CFB-B559-C7E285648DDE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="12"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="three"
              DTS:DTSID="{A7C302AB-279E-48F1-8BC5-61D3F15D475B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="11"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="four"
              DTS:DTSID="{7E988E14-3490-4080-950F-6A4981181230}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="29"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="a"
              DTS:DTSID="{999D5470-1773-4FF0-8625-3BC97041F4D3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="52"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="b"
              DTS:DTSID="{0F199512-00C8-4C96-8AD6-95EAF91196F9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="12"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="c"
              DTS:DTSID="{0B93747C-DAC1-41B5-BFF1-EE72D84F7CAB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="6"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="d"
              DTS:DTSID="{D8676D85-9A3B-4E20-AE38-B69E4820D76D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="15"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="e"
              DTS:DTSID="{2954DED5-E310-410E-B12E-6D70EE6900D6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="f"
              DTS:DTSID="{40FE6163-9F02-472F-AD8D-086650B6638A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="g"
              DTS:DTSID="{E2196B7D-7CF4-4AA5-BF8C-95313CA660A2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="h"
              DTS:DTSID="{E1070909-0DAC-475C-ABDF-C618BEA9F678}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="i"
              DTS:DTSID="{63AD261A-539E-4F14-AB94-9A1E107CC30E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="j"
              DTS:DTSID="{564DA519-9C4A-420A-8A87-2C2DE3ADD228}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="last"
              DTS:DTSID="{F5B03454-9D44-4C3F-8151-019B8E22F86A}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[junk]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{CC11A089-7439-4231-8ED9-03B444A79601}"
      DTS:ObjectName="junk">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::LogFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter="_x000D__x000A_"
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="default">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="date"
              DTS:DTSID="{CB71F7EB-338B-4765-9181-E5ECEEDC5EA1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="time"
              DTS:DTSID="{2853B557-620C-46F9-B794-D68FAA35D26C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="12"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="host_ip"
              DTS:DTSID="{F247E872-F6BE-44FD-B03A-12BB52D0CBAD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="11"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="method"
              DTS:DTSID="{AE9AC936-72C4-43F0-BB03-7747197409C9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="29"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="request_uri"
              DTS:DTSID="{7FD08F65-9F59-435B-8E51-0464D07E0553}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="52"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="junk"
              DTS:DTSID="{B154BEDD-169B-4BB3-A6D7-E840D8AD49B8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="12"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="port"
              DTS:DTSID="{07D9D954-B9BD-4F60-B9D1-6C08AF51C43E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="6"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="junk1"
              DTS:DTSID="{B9C011C4-DAAF-4D8A-BB8A-148E9E170BFD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="15"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="user_ip"
              DTS:DTSID="{4A0E2492-519E-41B9-8FBC-006A27B20DA7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="user_browser"
              DTS:DTSID="{AB5517B5-A3E2-4492-A155-17B7F9395BFD}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[long_file FFCM]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{c39e59b5-aa7b-4957-9077-24af59b8f398}"
      DTS:ObjectName="long_file FFCM">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::LogFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter="_x000D__x000A_"
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="default">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="one"
              DTS:DTSID="{4097147A-3AED-43F9-9AB0-124D9329DC38}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="two"
              DTS:DTSID="{0610C52A-87AF-4728-AE90-A06BE74A3EAC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="12"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="three"
              DTS:DTSID="{717F9E05-60D5-4247-82C3-896D16C2ECB9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="11"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="four"
              DTS:DTSID="{079ADCFC-4126-4C2B-B62C-CF67305CECF4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="29"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="a"
              DTS:DTSID="{2B037881-4CBE-4FE0-B09E-910240C2C6CA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="52"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="b"
              DTS:DTSID="{633BEBBF-7FFD-4EFC-AD36-CE94B8CCD454}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="12"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="c"
              DTS:DTSID="{74D25C16-7D37-49FF-A369-9E399AA89F66}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="6"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="d"
              DTS:DTSID="{03AFBB22-8932-4199-A6EB-014E9816FB78}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="15"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="e"
              DTS:DTSID="{170216A2-E4E5-4501-A78B-7295DDA7CB74}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="f"
              DTS:DTSID="{ED15DEB5-EA00-4B81-BD91-E128B41ECA53}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="g"
              DTS:DTSID="{8C3FEFDF-D2CB-4958-9EED-2683631434E0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="h"
              DTS:DTSID="{672BDE07-785E-40AD-B70A-A73F746BFFEB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="i"
              DTS:DTSID="{D0D794CE-FF0C-4D63-9FC8-A7F33434B043}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="j"
              DTS:DTSID="{9C6CF2FA-6DD0-4609-9E85-1BCBE302AD93}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="k"
              DTS:DTSID="{B996AC2F-8893-47E5-8813-1ADD5F7336FE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="q"
              DTS:DTSID="{CA7B5698-EAC8-43D5-A176-D5D8EF7B2E82}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="w"
              DTS:DTSID="{97239943-7FD2-4945-B085-774B5E17F0A5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="r"
              DTS:DTSID="{BAB971DF-8CA1-47F2-9D0B-ACE34A8F6E7D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="last"
              DTS:DTSID="{74118D6D-FA78-4369-B183-50893381B423}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[long_log_file FFCM]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{162e6ec7-0687-4f1e-b150-158c934fc4ce}"
      DTS:ObjectName="long_log_file FFCM">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::log_filename_long]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter="_x000D__x000A_"
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="log_filename_long">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="date"
              DTS:DTSID="{8B0BDF3F-4BF2-4B84-B2AE-62321DA2DF50}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="time"
              DTS:DTSID="{3821D65A-08B2-4803-B9B2-94B1BA35EAB5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="host_ip"
              DTS:DTSID="{61CCD5FD-6156-4D6F-A6A8-D7CD7A09ED30}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="method"
              DTS:DTSID="{A05ACD67-07D1-491A-8CB8-67D7B99C42E2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="request_uri"
              DTS:DTSID="{FCF77063-D3F5-469C-928B-8D54AC76FB05}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="junk"
              DTS:DTSID="{406E60FA-8C99-4C96-89B0-5ED72D74C97E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="port"
              DTS:DTSID="{BE163EE8-7C41-4074-A722-29D00F8F1332}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="junk1"
              DTS:DTSID="{9591F3C3-BE71-4668-8F22-66128F4C870B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="user_ip"
              DTS:DTSID="{1A1AD725-01FC-4D4C-A7E6-59C8F375D1DF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="user_browser"
              DTS:DTSID="{F3796B59-85A9-4D16-BAB7-296B1449EA72}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="cookie"
              DTS:DTSID="{FAEC91FD-FF10-479E-8E68-76AE0451CCB5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="referrer"
              DTS:DTSID="{4F871725-7460-4166-B4E6-76B64A201B11}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="response_code"
              DTS:DTSID="{6B8A0CCD-696D-43B1-A882-43C040BD5F2C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="substatus"
              DTS:DTSID="{3572552B-C76F-40A2-9F9F-01892057D9CF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="win32_status"
              DTS:DTSID="{F3F1FA5A-AB85-421C-AC4D-E479A4420896}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="sc_bytes"
              DTS:DTSID="{A2D9CB07-DFFB-4063-8C44-0F9BBDE6DE9D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="cs_bytes"
              DTS:DTSID="{6AE26CF2-F940-4534-B37D-E1C8CFF74076}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="time_taken"
              DTS:DTSID="{C4D783DE-18C7-44B7-927F-31F40EFF5977}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[short_file FFCM]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{550d7c76-a316-45fb-856d-3ddb875a50d6}"
      DTS:ObjectName="short_file FFCM">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::LogFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter="_x000D__x000A_"
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="default">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="one"
              DTS:DTSID="{F4CD2BDE-DEE4-4080-B106-783CA3C06D75}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="two"
              DTS:DTSID="{0DA3A450-9428-491D-A76D-871CF244E1BD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="12"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="three"
              DTS:DTSID="{3874C058-1142-407C-BA60-28E8465BF692}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="11"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="four"
              DTS:DTSID="{A68DA30D-1DA6-4EE6-B8B8-1BB9F10C3905}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="29"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="a"
              DTS:DTSID="{A703B224-7462-4B4D-921D-F6104FEC58C2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="52"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="b"
              DTS:DTSID="{C49B7F34-B885-4C0F-94F4-8619FA8A4BBE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="12"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="c"
              DTS:DTSID="{F264EB01-3060-4FFD-95F4-5DFFFE2602CE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="6"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="d"
              DTS:DTSID="{DF00D535-9672-40D5-AB6C-4853155B36D5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="15"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="e"
              DTS:DTSID="{FFB62016-64BD-4A0A-B688-2CEB0CA068EE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="f"
              DTS:DTSID="{250067C8-5D67-4247-A36F-353E20DCBD04}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="g"
              DTS:DTSID="{CCE3C89F-CFCC-46A6-970C-BA3392B52701}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="h"
              DTS:DTSID="{0CF19C95-AD03-4455-90F2-25CAEE3CC5D3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="i"
              DTS:DTSID="{9B4B7B91-4459-4197-BEFC-8CA6F99F8E3C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="j"
              DTS:DTSID="{E09EA16B-05F8-4FD3-951A-201BBB3927C6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="k"
              DTS:DTSID="{EF047931-CFA1-49D0-9DF7-87405866E550}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 0"
              DTS:DTSID="{FA213104-04C9-45CD-9003-71C367F0A6FE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 1"
              DTS:DTSID="{65D2CA4F-39E4-4EB5-8A61-4BA425A77CAC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 2"
              DTS:DTSID="{CAD371B2-7594-4BCD-AD5E-1E391969EBFB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="last"
              DTS:DTSID="{A8CFD608-9F48-4C8E-BB77-77C9E1FD5A34}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[short_log_file FFCM]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{92bc7e0d-a1ba-4916-bb51-e249bc65bffd}"
      DTS:ObjectName="short_log_file FFCM">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::log_filename_short]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter="_x000D__x000A_"
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="log_filename_short">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="date"
              DTS:DTSID="{E67188D9-09F8-4D58-A47E-7EE77F19142F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="time"
              DTS:DTSID="{7040BA92-9ED3-4E47-89C9-4E8F9985ADBE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="host_ip"
              DTS:DTSID="{65FF2AFC-23B9-49B0-A65B-608BDB092538}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="method"
              DTS:DTSID="{32578818-D0BF-4AF0-926B-8460FADFFE37}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="request_uri"
              DTS:DTSID="{5D6B9B9D-8CAB-4FFE-8C22-91F33F36EADE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="junk"
              DTS:DTSID="{8A2F486F-5059-462A-8869-6DB1D6377E39}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="port"
              DTS:DTSID="{FC2D76A8-E441-4AA3-94C3-D7773F50047F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="junk1"
              DTS:DTSID="{D96B614B-E469-4484-88C7-C2645883F46B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="user_ip"
              DTS:DTSID="{0B40679A-F449-45A9-8E7D-467784D3DD84}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="user_browser"
              DTS:DTSID="{22EA8194-11E4-49F9-BE80-57873994BEA9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="response_code"
              DTS:DTSID="{FF86E3F1-4926-43FF-8EE7-20E638E24FDD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="substatus"
              DTS:DTSID="{634E0DA1-50D1-46E6-BFDF-91415BC1E211}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0020_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="win32status"
              DTS:DTSID="{A05CF693-5D8A-4F93-A9BA-16EC60CFEEC4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="time_taken"
              DTS:DTSID="{E56C40A0-6E1B-48E9-B537-A3FBCA2AD56A}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{277C4403-3FE0-4485-A2C2-31FC37CEFCA6}"
      DTS:ObjectName="WORK-PC\VIGNATJEVS_SQL.db_business_intelligence">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=WORK-PC\VIGNATJEVS_SQL;Initial Catalog=db_business_intelligence;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8CE06090-919B-4748-8BF0-10A90E6BC107}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="city">
      <DTS:VariableValue
        DTS:DataType="8">city</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{12799357-9ED8-47FB-AA38-6098E754847E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="country">
      <DTS:VariableValue
        DTS:DataType="8">country</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B4143000-8119-41B3-805B-0E12313CC4DA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="county">
      <DTS:VariableValue
        DTS:DataType="8">county</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B6A97776-71A6-46F5-8970-B0E590FA40E8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="file_extension">
      <DTS:VariableValue
        DTS:DataType="8">file_extension</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{674B0445-46A5-47E3-B9FB-3EA53D3B67EA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="file_path">
      <DTS:VariableValue
        DTS:DataType="8">file_path</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9232C079-04B3-4D08-B519-B563E01123B5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="file_type">
      <DTS:VariableValue
        DTS:DataType="8">file_type</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{81C39091-B397-4A33-A726-5BF6E5D37091}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="is_page">
      <DTS:VariableValue
        DTS:DataType="8">is_page</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B3CB1906-BD67-42B1-849F-85D7D7884879}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LogFile">
      <DTS:VariableValue
        DTS:DataType="8">default</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BB7A63A7-CAF6-4607-8CF2-85788DC0E9E2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="logFileID">
      <DTS:VariableValue
        DTS:DataType="8">logfile_id</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{060D4042-66FA-4B45-AEDB-507F9E804462}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="logFileID_filename">
      <DTS:VariableValue
        DTS:DataType="8">logfile_id_filename</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B4850DE2-D1F4-4DA2-AA48-699BB4468D1E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="log_filename_long">
      <DTS:VariableValue
        DTS:DataType="8">log_filename_long</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BC2E8D2F-2F39-415A-9C14-06AE3B44712A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="log_filename_short">
      <DTS:VariableValue
        DTS:DataType="8">log_filename_short</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\assign geodata for distinct(save api usage)"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{A0A0A971-6802-44F9-A424-058EADB5BFAB}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="assign geodata for distinct(save api usage)"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\assign geodata for distinct(save api usage)\destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Dest1]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\assign geodata for distinct(save api usage)\destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                  connectionManagerRefId="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\assign geodata for distinct(save api usage)\destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\assign geodata for distinct(save api usage)\destination.Inputs[OLE DB Destination Input].ExternalColumns[date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="date" />
                    <externalMetadataColumn
                      refId="Package\assign geodata for distinct(save api usage)\destination.Inputs[OLE DB Destination Input].ExternalColumns[time]"
                      dataType="dbTimeStamp"
                      name="time" />
                    <externalMetadataColumn
                      refId="Package\assign geodata for distinct(save api usage)\destination.Inputs[OLE DB Destination Input].ExternalColumns[host_ip]"
                      codePage="1252"
                      dataType="str"
                      length="12"
                      name="host_ip" />
                    <externalMetadataColumn
                      refId="Package\assign geodata for distinct(save api usage)\destination.Inputs[OLE DB Destination Input].ExternalColumns[method]"
                      codePage="1252"
                      dataType="str"
                      length="11"
                      name="method" />
                    <externalMetadataColumn
                      refId="Package\assign geodata for distinct(save api usage)\destination.Inputs[OLE DB Destination Input].ExternalColumns[request_uri]"
                      codePage="1252"
                      dataType="str"
                      length="29"
                      name="request_uri" />
                    <externalMetadataColumn
                      refId="Package\assign geodata for distinct(save api usage)\destination.Inputs[OLE DB Destination Input].ExternalColumns[port]"
                      codePage="1252"
                      dataType="str"
                      length="12"
                      name="port" />
                    <externalMetadataColumn
                      refId="Package\assign geodata for distinct(save api usage)\destination.Inputs[OLE DB Destination Input].ExternalColumns[user_ip]"
                      codePage="1252"
                      dataType="str"
                      length="15"
                      name="user_ip" />
                    <externalMetadataColumn
                      refId="Package\assign geodata for distinct(save api usage)\destination.Inputs[OLE DB Destination Input].ExternalColumns[user_browser]"
                      codePage="1252"
                      dataType="str"
                      length="94"
                      name="user_browser" />
                    <externalMetadataColumn
                      refId="Package\assign geodata for distinct(save api usage)\destination.Inputs[OLE DB Destination Input].ExternalColumns[response_code]"
                      codePage="1252"
                      dataType="str"
                      length="14"
                      name="response_code" />
                    <externalMetadataColumn
                      refId="Package\assign geodata for distinct(save api usage)\destination.Inputs[OLE DB Destination Input].ExternalColumns[substatus]"
                      codePage="1252"
                      dataType="str"
                      length="9"
                      name="substatus" />
                    <externalMetadataColumn
                      refId="Package\assign geodata for distinct(save api usage)\destination.Inputs[OLE DB Destination Input].ExternalColumns[win32status]"
                      codePage="1252"
                      dataType="str"
                      length="12"
                      name="win32status" />
                    <externalMetadataColumn
                      refId="Package\assign geodata for distinct(save api usage)\destination.Inputs[OLE DB Destination Input].ExternalColumns[time_taken]"
                      codePage="1252"
                      dataType="str"
                      length="15"
                      name="time_taken" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\assign geodata for distinct(save api usage)\destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\assign geodata for distinct(save api usage)\destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\assign geodata for distinct(save api usage)\destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\assign geodata for distinct(save api usage)\destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\assign geodata for distinct(save api usage)\destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\assign geodata for distinct(save api usage)\destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\assign geodata for distinct(save api usage)\getType"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="getType"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\assign geodata for distinct(save api usage)\getType.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\assign geodata for distinct(save api usage)\getType.Inputs[Conditional Split Input].Columns[user_browser]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="94"
                      cachedName="user_browser"
                      lineageId="Package\assign geodata for distinct(save api usage)\468:invalid" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\assign geodata for distinct(save api usage)\getType.Outputs[mozilla]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="mozilla"
                  synchronousInputId="Package\assign geodata for distinct(save api usage)\getType.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[LEFT](#{Package\assign geodata for distinct(save api usage)\468:invalid},7) == "Mozilla"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">LEFT(user_browser,7) == "Mozilla"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\assign geodata for distinct(save api usage)\getType.Outputs[yandex]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="yandex"
                  synchronousInputId="Package\assign geodata for distinct(save api usage)\getType.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[LEFT](#{Package\assign geodata for distinct(save api usage)\468:invalid},7) == "Yandex"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">LEFT(user_browser,7) == "Yandex"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\assign geodata for distinct(save api usage)\getType.Outputs[google_bot]"
                  description="Output 3 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="google_bot"
                  synchronousInputId="Package\assign geodata for distinct(save api usage)\getType.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[LEFT](#{Package\assign geodata for distinct(save api usage)\468:invalid},9) == "Googlebot"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">LEFT(user_browser,9) == "Googlebot"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">2</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\assign geodata for distinct(save api usage)\getType.Outputs[panscient_bot]"
                  description="Output 4 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="panscient_bot"
                  synchronousInputId="Package\assign geodata for distinct(save api usage)\getType.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[LEFT](#{Package\assign geodata for distinct(save api usage)\468:invalid},13) == "panscient.com"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">LEFT(user_browser,13) == "panscient.com"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">3</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\assign geodata for distinct(save api usage)\getType.Outputs[msn_bot]"
                  description="Output 5 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="msn_bot"
                  synchronousInputId="Package\assign geodata for distinct(save api usage)\getType.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[LEFT](#{Package\assign geodata for distinct(save api usage)\468:invalid},6) == "msnbot"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">LEFT(user_browser,6) == "msnbot"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">4</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\assign geodata for distinct(save api usage)\getType.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\assign geodata for distinct(save api usage)\getType.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\assign geodata for distinct(save api usage)\getType.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\assign geodata for distinct(save api usage)\getType.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\assign geodata for distinct(save api usage)\getType.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\assign geodata for distinct(save api usage)\getType.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\assign geodata for distinct(save api usage)\getType.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\assign geodata for distinct(save api usage)\getType.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\assign geodata for distinct(save api usage)\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[client dimension]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                  connectionManagerRefId="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].Columns[client_ip]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[client_ip]"
                      length="15"
                      lineageId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].Columns[client_ip]"
                      name="client_ip"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].Columns[city]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[city]"
                      length="4"
                      lineageId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].Columns[city]"
                      name="city"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].Columns[county]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[county]"
                      length="7"
                      lineageId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].Columns[county]"
                      name="county"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].Columns[country]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[country]"
                      length="6"
                      lineageId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].Columns[country]"
                      name="country"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].Columns[session]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[session]"
                      length="94"
                      lineageId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].Columns[session]"
                      name="session"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].Columns[os]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[os]"
                      length="94"
                      lineageId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].Columns[os]"
                      name="os"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].Columns[browser]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[browser]"
                      length="94"
                      lineageId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].Columns[browser]"
                      name="browser"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[client_ip]"
                      dataType="wstr"
                      length="15"
                      name="client_ip" />
                    <externalMetadataColumn
                      refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[city]"
                      dataType="wstr"
                      length="4"
                      name="city" />
                    <externalMetadataColumn
                      refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[county]"
                      dataType="wstr"
                      length="7"
                      name="county" />
                    <externalMetadataColumn
                      refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[country]"
                      dataType="wstr"
                      length="6"
                      name="country" />
                    <externalMetadataColumn
                      refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[session]"
                      dataType="wstr"
                      length="94"
                      name="session" />
                    <externalMetadataColumn
                      refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[os]"
                      dataType="wstr"
                      length="94"
                      name="os" />
                    <externalMetadataColumn
                      refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[browser]"
                      dataType="wstr"
                      length="94"
                      name="browser" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[client_ip]"
                      dataType="wstr"
                      length="15"
                      lineageId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[client_ip]"
                      name="client_ip" />
                    <outputColumn
                      refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[city]"
                      dataType="wstr"
                      length="4"
                      lineageId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[city]"
                      name="city" />
                    <outputColumn
                      refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[county]"
                      dataType="wstr"
                      length="7"
                      lineageId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[county]"
                      name="county" />
                    <outputColumn
                      refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[country]"
                      dataType="wstr"
                      length="6"
                      lineageId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[country]"
                      name="country" />
                    <outputColumn
                      refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[session]"
                      dataType="wstr"
                      length="94"
                      lineageId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[session]"
                      name="session" />
                    <outputColumn
                      refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[os]"
                      dataType="wstr"
                      length="94"
                      lineageId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[os]"
                      name="os" />
                    <outputColumn
                      refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[browser]"
                      dataType="wstr"
                      length="94"
                      lineageId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[browser]"
                      name="browser" />
                    <outputColumn
                      refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\assign geodata for distinct(save api usage)\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="9">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_4de2eabc2e774baf8f3e1985735c4677</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE"></property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\assign geodata for distinct(save api usage)\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\assign geodata for distinct(save api usage)\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\assign geodata for distinct(save api usage)\Script Component.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\assign geodata for distinct(save api usage).Paths[mozilla]"
              endId="Package\assign geodata for distinct(save api usage)\Script Component.Inputs[Input 0]"
              name="mozilla"
              startId="Package\assign geodata for distinct(save api usage)\getType.Outputs[mozilla]" />
            <path
              refId="Package\assign geodata for distinct(save api usage).Paths[OLE DB Source Output]"
              endId="Package\assign geodata for distinct(save api usage)\getType.Inputs[Conditional Split Input]"
              name="OLE DB Source Output"
              startId="Package\assign geodata for distinct(save api usage)\OLE DB Source.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\calculate counts for measurable data"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{7f0a6fb0-2aab-45d0-8c84-dd5ca614c035}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="calculate counts for measurable data"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\calculate counts for measurable data\destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Dest1]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\calculate counts for measurable data\destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                  connectionManagerRefId="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\calculate counts for measurable data\destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\calculate counts for measurable data\destination.Inputs[OLE DB Destination Input].ExternalColumns[date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="date" />
                    <externalMetadataColumn
                      refId="Package\calculate counts for measurable data\destination.Inputs[OLE DB Destination Input].ExternalColumns[time]"
                      dataType="dbTimeStamp"
                      name="time" />
                    <externalMetadataColumn
                      refId="Package\calculate counts for measurable data\destination.Inputs[OLE DB Destination Input].ExternalColumns[host_ip]"
                      codePage="1252"
                      dataType="str"
                      length="12"
                      name="host_ip" />
                    <externalMetadataColumn
                      refId="Package\calculate counts for measurable data\destination.Inputs[OLE DB Destination Input].ExternalColumns[method]"
                      codePage="1252"
                      dataType="str"
                      length="11"
                      name="method" />
                    <externalMetadataColumn
                      refId="Package\calculate counts for measurable data\destination.Inputs[OLE DB Destination Input].ExternalColumns[request_uri]"
                      codePage="1252"
                      dataType="str"
                      length="29"
                      name="request_uri" />
                    <externalMetadataColumn
                      refId="Package\calculate counts for measurable data\destination.Inputs[OLE DB Destination Input].ExternalColumns[port]"
                      codePage="1252"
                      dataType="str"
                      length="12"
                      name="port" />
                    <externalMetadataColumn
                      refId="Package\calculate counts for measurable data\destination.Inputs[OLE DB Destination Input].ExternalColumns[user_ip]"
                      codePage="1252"
                      dataType="str"
                      length="15"
                      name="user_ip" />
                    <externalMetadataColumn
                      refId="Package\calculate counts for measurable data\destination.Inputs[OLE DB Destination Input].ExternalColumns[user_browser]"
                      codePage="1252"
                      dataType="str"
                      length="94"
                      name="user_browser" />
                    <externalMetadataColumn
                      refId="Package\calculate counts for measurable data\destination.Inputs[OLE DB Destination Input].ExternalColumns[response_code]"
                      codePage="1252"
                      dataType="str"
                      length="14"
                      name="response_code" />
                    <externalMetadataColumn
                      refId="Package\calculate counts for measurable data\destination.Inputs[OLE DB Destination Input].ExternalColumns[substatus]"
                      codePage="1252"
                      dataType="str"
                      length="9"
                      name="substatus" />
                    <externalMetadataColumn
                      refId="Package\calculate counts for measurable data\destination.Inputs[OLE DB Destination Input].ExternalColumns[win32status]"
                      codePage="1252"
                      dataType="str"
                      length="12"
                      name="win32status" />
                    <externalMetadataColumn
                      refId="Package\calculate counts for measurable data\destination.Inputs[OLE DB Destination Input].ExternalColumns[time_taken]"
                      codePage="1252"
                      dataType="str"
                      length="15"
                      name="time_taken" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\calculate counts for measurable data\destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\calculate counts for measurable data\destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\calculate counts for measurable data\destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\calculate counts for measurable data\destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\calculate counts for measurable data\destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\calculate counts for measurable data\destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\calculate counts for measurable data\getType"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="getType"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\calculate counts for measurable data\getType.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\calculate counts for measurable data\getType.Inputs[Conditional Split Input].Columns[user_browser]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="94"
                      cachedName="user_browser"
                      lineageId="Package\calculate counts for measurable data\469:invalid" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\calculate counts for measurable data\getType.Outputs[mozilla]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="mozilla"
                  synchronousInputId="Package\calculate counts for measurable data\getType.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[LEFT](#{Package\calculate counts for measurable data\469:invalid},7) == "Mozilla"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">LEFT(user_browser,7) == "Mozilla"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\calculate counts for measurable data\getType.Outputs[yandex]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="yandex"
                  synchronousInputId="Package\calculate counts for measurable data\getType.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[LEFT](#{Package\calculate counts for measurable data\469:invalid},7) == "Yandex"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">LEFT(user_browser,7) == "Yandex"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\calculate counts for measurable data\getType.Outputs[google_bot]"
                  description="Output 3 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="google_bot"
                  synchronousInputId="Package\calculate counts for measurable data\getType.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[LEFT](#{Package\calculate counts for measurable data\469:invalid},9) == "Googlebot"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">LEFT(user_browser,9) == "Googlebot"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">2</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\calculate counts for measurable data\getType.Outputs[panscient_bot]"
                  description="Output 4 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="panscient_bot"
                  synchronousInputId="Package\calculate counts for measurable data\getType.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[LEFT](#{Package\calculate counts for measurable data\469:invalid},13) == "panscient.com"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">LEFT(user_browser,13) == "panscient.com"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">3</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\calculate counts for measurable data\getType.Outputs[msn_bot]"
                  description="Output 5 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="msn_bot"
                  synchronousInputId="Package\calculate counts for measurable data\getType.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[LEFT](#{Package\calculate counts for measurable data\469:invalid},6) == "msnbot"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">LEFT(user_browser,6) == "msnbot"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">4</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\calculate counts for measurable data\getType.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\calculate counts for measurable data\getType.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\calculate counts for measurable data\getType.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\calculate counts for measurable data\getType.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\calculate counts for measurable data\getType.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\calculate counts for measurable data\getType.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\calculate counts for measurable data\getType.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\calculate counts for measurable data\getType.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\calculate counts for measurable data\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[client dimension]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\calculate counts for measurable data\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                  connectionManagerRefId="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].Columns[client_ip]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[client_ip]"
                      length="15"
                      lineageId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].Columns[client_ip]"
                      name="client_ip"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].Columns[city]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[city]"
                      length="4"
                      lineageId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].Columns[city]"
                      name="city"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].Columns[county]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[county]"
                      length="7"
                      lineageId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].Columns[county]"
                      name="county"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].Columns[country]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[country]"
                      length="6"
                      lineageId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].Columns[country]"
                      name="country"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].Columns[session]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[session]"
                      length="94"
                      lineageId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].Columns[session]"
                      name="session"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].Columns[os]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[os]"
                      length="94"
                      lineageId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].Columns[os]"
                      name="os"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].Columns[browser]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[browser]"
                      length="94"
                      lineageId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].Columns[browser]"
                      name="browser"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[client_ip]"
                      dataType="wstr"
                      length="15"
                      name="client_ip" />
                    <externalMetadataColumn
                      refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[city]"
                      dataType="wstr"
                      length="4"
                      name="city" />
                    <externalMetadataColumn
                      refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[county]"
                      dataType="wstr"
                      length="7"
                      name="county" />
                    <externalMetadataColumn
                      refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[country]"
                      dataType="wstr"
                      length="6"
                      name="country" />
                    <externalMetadataColumn
                      refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[session]"
                      dataType="wstr"
                      length="94"
                      name="session" />
                    <externalMetadataColumn
                      refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[os]"
                      dataType="wstr"
                      length="94"
                      name="os" />
                    <externalMetadataColumn
                      refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[browser]"
                      dataType="wstr"
                      length="94"
                      name="browser" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[client_ip]"
                      dataType="wstr"
                      length="15"
                      lineageId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[client_ip]"
                      name="client_ip" />
                    <outputColumn
                      refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[city]"
                      dataType="wstr"
                      length="4"
                      lineageId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[city]"
                      name="city" />
                    <outputColumn
                      refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[county]"
                      dataType="wstr"
                      length="7"
                      lineageId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[county]"
                      name="county" />
                    <outputColumn
                      refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[country]"
                      dataType="wstr"
                      length="6"
                      lineageId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[country]"
                      name="country" />
                    <outputColumn
                      refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[session]"
                      dataType="wstr"
                      length="94"
                      lineageId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[session]"
                      name="session" />
                    <outputColumn
                      refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[os]"
                      dataType="wstr"
                      length="94"
                      lineageId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[os]"
                      name="os" />
                    <outputColumn
                      refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[browser]"
                      dataType="wstr"
                      length="94"
                      lineageId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[browser]"
                      name="browser" />
                    <outputColumn
                      refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\calculate counts for measurable data\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="9">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_4de2eabc2e774baf8f3e1985735c4677</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE"></property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\calculate counts for measurable data\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\calculate counts for measurable data\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\calculate counts for measurable data\Script Component.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\calculate counts for measurable data.Paths[mozilla]"
              endId="Package\calculate counts for measurable data\Script Component.Inputs[Input 0]"
              name="mozilla"
              startId="Package\calculate counts for measurable data\getType.Outputs[mozilla]" />
            <path
              refId="Package\calculate counts for measurable data.Paths[OLE DB Source Output]"
              endId="Package\calculate counts for measurable data\getType.Inputs[Conditional Split Input]"
              name="OLE DB Source Output"
              startId="Package\calculate counts for measurable data\OLE DB Source.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Divide files by column count"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{04b3626e-c8a5-447a-9fed-76ecf87f83f1}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Divide files by column count">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{216b3248-3581-4ef4-9295-b127f7e6d3d0}"
        DTS:ObjectName="{D7C399C3-AE6C-47B9-9A9F-AEE9C5B1F668}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="D:\MSc\Business Intelligence\BI2017\W3SVC1" />
            <FEFEProperty
              FileSpec="*.*" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Divide files by column count\file allocation task"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{6bd1ae82-007e-4027-8955-dcd430fdcc2d}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="file allocation task"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Divide files by column count\file allocation task\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Divide files by column count\file allocation task\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Divide files by column count\file allocation task\Conditional Split.Inputs[Conditional Split Input].Columns[one]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="one"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[one]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Divide files by column count\file allocation task\Conditional Split.Outputs[headers_row]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="headers_row"
                      synchronousInputId="Package\Divide files by column count\file allocation task\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[LEFT](#{Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[one]},8) == "#Fields:"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">LEFT(one,8) == "#Fields:"</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Divide files by column count\file allocation task\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Divide files by column count\file allocation task\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Divide files by column count\file allocation task\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Divide files by column count\file allocation task\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Divide files by column count\file allocation task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Divide files by column count\file allocation task\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Divide files by column count\file allocation task\file_name"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="file_name"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Divide files by column count\file allocation task\file_name.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Divide files by column count\file allocation task\file_name.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Divide files by column count\file allocation task\file_name.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\file_name.Outputs[Derived Column Output].Columns[filename]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="400"
                          lineageId="Package\Divide files by column count\file allocation task\file_name.Outputs[Derived Column Output].Columns[filename]"
                          name="filename"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::LogFile]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::LogFile]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Divide files by column count\file allocation task\file_name.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Divide files by column count\file allocation task\file_name.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\file_name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Divide files by column count\file allocation task\file_name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\file_name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Divide files by column count\file allocation task\file_name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Divide files by column count\file allocation task\file_type"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="file_type"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Divide files by column count\file allocation task\file_type.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Divide files by column count\file allocation task\file_type.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Divide files by column count\file allocation task\file_type.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\file_type.Outputs[Derived Column Output].Columns[file_type_check]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Divide files by column count\file allocation task\file_type.Outputs[Derived Column Output].Columns[file_type_check]"
                          name="file_type_check"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"unknown"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"unknown"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Divide files by column count\file allocation task\file_type.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Divide files by column count\file allocation task\file_type.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\file_type.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Divide files by column count\file allocation task\file_type.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\file_type.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Divide files by column count\file allocation task\file_type.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Divide files by column count\file allocation task\ID file"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="ID file"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String logFileID
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["logFileID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["logFileID"].Value = value;
        }
    }

    public String logFileIDfilename
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["logFileID_filename"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["logFileID_filename"].Value = value;
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        //var colSeperator = ' ';
        //var colArr = Row.ToString().Split(new char[] { colSeperator });


        //if (colArr.Length == 20)
        //{
        //    // this is file type 2 (longer file, 6 codes)
        //    Row.DerivedColumn1filetype = "long_file";
        //}
        //else
        //{
        //    Row.DerivedColumn1filetype = "short_file";
    //}

        if (Row.last == "time-taken") {
            // this is file type 2 (longer file, 6 codes)
            Row.filetypecheck = "short_file";
        } else
        {
            Row.filetypecheck = "long_file";
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String one
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool one_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String two
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool two_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String three
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool three_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String four
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool four_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String a
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool a_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String b
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool b_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String c
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool c_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String d
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool d_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String e
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool e_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String f
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool f_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public String g
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
    }
    public bool g_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public String h
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
    }
    public bool h_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public String i
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[12]);
        }
    }
    public bool i_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public String j
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[13]);
        }
    }
    public bool j_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    public String last
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[14]);
        }
    }
    public bool last_IsNull
    {
        get
        {
            return IsNull(14);
        }
    }

    public String filetypecheck
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[15]);
        }
        set
        {
            this[15] = value;
        }
    }
    public bool filetypecheck_IsNull
    {
        get
        {
            return IsNull(15);
        }
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b4a088a2bb69480ebf122717853f66b3.Properties.Settings.get_Default():SC_b4a088a2bb69480ebf122717853f66b3.Properties.Sett" +
    "ings")]

namespace SC_b4a088a2bb69480ebf122717853f66b3.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_b4a088a2bb69480ebf122717853f66b3.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{fc34d581-ddbd-4b0c-a8f4-2cd45c6010d7}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_b4a088a2bb69480ebf122717853f66b3</RootNamespace>
    <AssemblyName>SC_b4a088a2bb69480ebf122717853f66b3</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_b4a088a2bb69480ebf122717853f66b3" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_b4a088a2bb69480ebf122717853f66b3</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_b4a088a2bb69480ebf122717853f66b3</msb:DisplayName>
		<msb:ProjectId>{8217E1E7-EEA2-4B4B-89AF-222D8082D2DB}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_b4a088a2bb69480ebf122717853f66b3.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_b4a088a2bb69480ebf122717853f66b3")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_b4a088a2bb69480ebf122717853f66b3")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b4a088a2bb69480ebf122717853f66b3.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b4a088a2bb69480ebf122717853f66b3.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b4a088a2bb69480ebf122717853f66b3.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_b4a088a2bb69480ebf122717853f66b3.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_b4a088a2bb69480ebf122717853f66b3.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_b4a088a2bb69480ebf122717853f66b3.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAC3+71gAAAAAAAAAAOAAIiALATAAABwAAAAIAAAAAAAA4joA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJA6AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA6BoAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADE
OgAAAAAAAEgAAAACAAUAHCQAALwVAAABAAAAAAAAANg5AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiqqA28iAAAGcgEAAHAoEgAACiwM
A3IXAABwbyUAAAYqA3ItAABwbyUAAAYqHgIoKgAABioqAgMEBSgTAAAKKlICexQAAAoCexUAAAoW
lG8WAAAKKiICFigXAAAKKlICexQAAAoCexUAAAoXlG8WAAAKKiICFygXAAAKKlICexQAAAoCexUA
AAoYlG8WAAAKKiICGCgXAAAKKlICexQAAAoCexUAAAoZlG8WAAAKKiICGSgXAAAKKlICexQAAAoC
exUAAAoalG8WAAAKKiICGigXAAAKKlICexQAAAoCexUAAAoblG8WAAAKKiICGygXAAAKKlICexQA
AAoCexUAAAoclG8WAAAKKiICHCgXAAAKKlICexQAAAoCexUAAAodlG8WAAAKKiICHSgXAAAKKlIC
exQAAAoCexUAAAoelG8WAAAKKiICHigXAAAKKlYCexQAAAoCexUAAAofCZRvFgAACiomAh8JKBcA
AAoqVgJ7FAAACgJ7FQAACh8KlG8WAAAKKiYCHwooFwAACipWAnsUAAAKAnsVAAAKHwuUbxYAAAoq
JgIfCygXAAAKKlYCexQAAAoCexUAAAofDJRvFgAACiomAh8MKBcAAAoqVgJ7FAAACgJ7FQAACh8N
lG8WAAAKKiYCHw0oFwAACipWAnsUAAAKAnsVAAAKHw6UbxYAAAoqJgIfDigXAAAKKlYCexQAAAoC
exUAAAofD5RvFgAACioqAh8PAygYAAAKKiYCHw8oFwAACipeAywJAh8PKBkAAAoqckEAAHBzGgAA
CnoeAigbAAAKKh4CKBwAAAoqfgIoHQAACgICcy4AAAZ9AQAABAICcy8AAAZ9AgAABCqSBHLeAABw
Gm8eAAAKLBUCBQIDKB8AAAoOBHMFAAAGbywAAAYqSisHAgNvLQAABgNvKAAABi3xKgYqOgIoIAAA
CgIDfQMAAAQqOgIoIAAACgIDfQQAAAQqlgJ7BAAABG8hAAAKcu4AAHBvIgAACigjAAAKbyQAAAp0
GgAAASpyAnsEAAAEbyEAAApy7gAAcG8iAAAKA28lAAAKKpYCewQAAARvIQAACnICAQBwbyIAAAoo
IwAACm8kAAAKdBoAAAEqcgJ7BAAABG8hAAAKcgIBAHBvIgAACgNvJQAACioeAiggAAAKKq5+BQAA
BC0ecigBAHDQBwAAAigmAAAKbycAAApzKAAACoAFAAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqGn4H
AAAEKh4CKCkAAAoqLnM5AAAGgAcAAAQqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUA
bAAAACAJAAAjfgAAjAkAAMAIAAAjU3RyaW5ncwAAAABMEgAAnAEAACNVUwDoEwAAEAAAACNHVUlE
AAAA+BMAAMQBAAAjQmxvYgAAAAAAAAACAAABVxWgAQkBAAAA+gEzABYAAAEAAAAjAAAACAAAAAcA
AAA6AAAAEQAAACkAAAAQAAAABAAAACUAAAAqAAAAAQAAAAUAAAABAAAAAADqAwEAAAAAAAYAlQKR
BgYAKQORBgYA4QF+Bg8ABQcAAAYADgJ3BQYAeAJ3BQYAWQJ3BQYAEAN3BQYAtQJ3BQYAzgJ3BQYA
JQJ3BQYAQAJ6AwoA6QImAQoAHwYmAQ4AEAYmAQoAyAUmAQoA2AcmAQYAmwcvBQYAxAF+BgYAMAax
BgYAtAViBRIAlAHUAxIA9QHUAxIAfAFNBQYAqQGRBgYAlwMvBQYAiQUvBQYAowUvBRYAEQBABhYA
AQBABkcAVwgAABYAIgBABgYATwEvBQYAzAAvBQYAqgh3BQAAAABeAAAAAAABAAEAAQAQAEIFAAAQ
AAEAAQABABAAAwYAADkAAQAFAAEAEAC6BwAARQABACoAAQAQAI8HAABJAAMALgABABAAUAcAAEkA
BAAvAAAAEAC4BhQHSQAFADQAAAEQAH8HFAdhAAcAOAAGAI8HmQAGAFAHnQABAMgHoQABAMgHoQAR
ADYFpQARAGwBqQARALIArQBQIAAAAADGAEcDBgABAFggAAAAAMYAUgMGAAEAYCAAAAAAxgCHCLEA
AQCLIAAAAACGGGgGBgACAJMgAAAAAIYYaAYhAAIAniAAAAAAhghHAbcABQCzIAAAAACGCGQEQwAF
ALwgAAAAAIYIwAW3AAUA0SAAAAAAhgjmBEMABQDaIAAAAACGCMIAtwAFAO8gAAAAAIYIUwRDAAUA
+CAAAAAAhgh1BrcABQANIQAAAACGCPUEQwAFABYhAAAAAIYIiwC3AAUAKyEAAAAAhggSBEMABQA0
IQAAAACGCJEAtwAFAEkhAAAAAIYIHwRDAAUAUiEAAAAAhgigALcABQBnIQAAAACGCCwEQwAFAHAh
AAAAAIYIpgC3AAUAhSEAAAAAhgg5BEMABQCOIQAAAACGCKwAtwAFAKMhAAAAAIYIRgRDAAUArCEA
AAAAhghuA7cABQDCIQAAAACGCHMEQwAFAMwhAAAAAIYIdAO3AAUA4iEAAAAAhgiABEMABQDsIQAA
AACGCJ4DtwAFAAIiAAAAAIYIjQRDAAUADCIAAAAAhgikA7cABQAiIgAAAACGCJoEQwAFACwiAAAA
AIYIqgO3AAUAQiIAAAAAhginBEMABQBMIgAAAACGCAUItwAFAGIiAAAAAIYIBQVDAAUAbCIAAAAA
hgiwA7cABQCCIgAAAACGCMIDEAAFAI0iAAAAAIYItARDAAYAlyIAAAAAhgjNBLsABgCvIgAAAACG
AJ4IQwAHALciAAAAAIYAogdDAAcAvyIAAAAAhhhoBgYABwDfIgAAAADGADYIwAAHAAQjAAAAAMYB
LwixAAsAFyMAAAAAxgGHCLEADAAZIwAAAACGGGgGygANACgjAAAAAIYYaAbKAA4ANyMAAAAAhghn
ALcADwBdIwAAAACGCHUAEAAPAHojAAAAAIYI+gC3ABAAoCMAAAAAhggQARAAEAC9IwAAAACDGGgG
BgARAMUjAAAAAJMILAbQABEA8SMAAAAAkwhUAdUAEQD4IwAAAACTCGAB2gARAAAkAAAAAJYIrgfg
ABIAByQAAAAAhhhoBgYAEgAPJAAAAACRGG4G5QASAAAAAQCiCAAAAQAlBgAAAgBaBwAAAwDWBQAA
AQBoAwAAAQBoAwAAAQCDAAAAAgDwAAAAAwAlBgAABADWBQAAAQAlBgAAAQCiCAAAAQDeBwAAAQDe
BwAAAQBoAwAAAQBoAwAAAQBoAwkAaAYBABEAaAYGABkAaAYKACkAaAYQADEAaAYQADkAaAYQAEEA
aAYQAEkAaAYQAFEAaAYQAFkAaAYQAGEAaAYQAGkAaAYGAJkAaAYGALkAaAYVAMkAaAYGAIkARwMG
AIkAUgMGANEAswgbAHEAaAYhAHEAJQYrAHEAWgcvAHkAlAMzAHEADgU4AHEAJgU9AHEAFQUBANkA
aAYQAHEAnghDAHEAogdDAIkAaAYGANEAiAdHAIkAbgdOAJEAaAYGAIkAQwdUAOkAHQVZAIkAcghf
APEAQwhkAPEAXgNrAAkB3gBwAAkBpgh5AKEAaAZ/AMEAaAYGAC4ACwAAAS4AEwAJAS4AGwAoAS4A
IwAxAS4AKwBaAS4AMwBaAS4AOwBaAS4AQwAxAS4ASwBgAS4AUwBaAS4AWwB3AUMAYwC/AeEAewC/
AeMAawC/AWkEcwAoAYkEcwAoAQMAAQAGACEABwAjAAgAJQAAAEsB6QAAAGgE7QAAAMQF6QAAAOoE
7QAAAMYA6QAAAFcE7QAAAHkG6QAAAPkE7QAAAI8A6QAAABYE7QAAAJ4A6QAAACME7QAAAKQA6QAA
ADAE7QAAAKoA6QAAAD0E7QAAAGwD6QAAAGoE7QAAAHID6QAAAHcE7QAAAJwD6QAAAIQE7QAAAKID
6QAAAJEE7QAAAKgD6QAAAJ4E7QAAAK4D6QAAAKsE7QAAAAkI6QAAAAkF7QAAAMYD6QAAANEE7QAA
AHkA6QAAABQB6QAAADAG8QAAAHQB9gAAALIH+wACAAYAAwACAAcABQACAAgABwACAAkACQACAAoA
CwACAAsADQACAAwADwACAA0AEQACAA4AEwACAA8AFQACABAAFwACABEAGQACABIAGwACABMAHQAC
ABQAHwACABUAIQACABYAIwACABcAJQACABgAJwACABkAKQACABoAKwACABsALQACABwALwACAB0A
MQACAB4AMwACAB8ANQACACAANwACACEAOQACACIAOwACACMAPQACACQAPwABACUAPwACACYAQQAB
ACcAQQACADAAQwABADEAQwACADIARQABADMARQACADUARwACADYASQABADcASQACADgASwAEgAAA
AQAAAKgYXqYAAAAAAAA6AAAABAAAAAAAAAAAAAAAhwCXAAAAAAAMAAAAAAAAAAAAAACQAOgHAAAA
AAwAAAAAAAAAAAAAAJAADggAAAAABAAAAAAAAAAAAAAAhwAvBQAAAAAMAAAAAAAAAAAAAACQAOAF
AAAAAAAAAAABAAAAwgYAAAAAAElEVFNWYXJpYWJsZTEwMABJRFRTVmFyaWFibGVzMTAwAElEVFNF
dmFsdWF0b3JDb250ZXh0MTAwAFNDX2I0YTA4OGEyYmI2OTQ4MGViZjEyMjcxNzg1M2Y2NmIzADxN
b2R1bGU+AGdldF9sb2dGaWxlSUQAc2V0X2xvZ0ZpbGVJRABJbnB1dElEAGdldF9hAGdldF9iAG1z
Y29ybGliAGdldF9jAGdldF9kAGdldF9lAGRlZmF1bHRJbnN0YW5jZQBnZXRfdGhyZWUAUnVudGlt
ZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAGdldF9sb2dGaWxlSURmaWxl
bmFtZQBzZXRfbG9nRmlsZUlEZmlsZW5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxp
bmUAZ2V0X29uZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBB
cHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVy
YXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRy
aWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBp
bGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2Vt
Ymx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmli
dXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0
ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHNldF9WYWx1ZQB2YWx1ZQBnZXRfZgBnZXRfZwBTeXN0
ZW0uUnVudGltZS5WZXJzaW9uaW5nAEdldFN0cmluZwBnZXRfaABnZXRfaQBnZXRfagBnZXRfZmls
ZXR5cGVjaGVjawBzZXRfZmlsZXR5cGVjaGVjawBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfYjRh
MDg4YTJiYjY5NDgwZWJmMTIyNzE3ODUzZjY2YjMuZGxsAGdldF9hX0lzTnVsbABnZXRfYl9Jc051
bGwAZ2V0X2NfSXNOdWxsAGdldF9kX0lzTnVsbABnZXRfZV9Jc051bGwAZ2V0X3RocmVlX0lzTnVs
bABnZXRfb25lX0lzTnVsbABnZXRfZl9Jc051bGwAZ2V0X2dfSXNOdWxsAGdldF9oX0lzTnVsbABn
ZXRfaV9Jc051bGwAZ2V0X2pfSXNOdWxsAGdldF9maWxldHlwZWNoZWNrX0lzTnVsbABzZXRfZmls
ZXR5cGVjaGVja19Jc051bGwAZ2V0X3R3b19Jc051bGwAZ2V0X2ZvdXJfSXNOdWxsAGdldF9sYXN0
X0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3Jp
cHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5S
ZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0
dXJlSW5mbwBnZXRfdHdvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRFRTUnVudGltZVdyYXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZl
cgBnZXRfUmVzb3VyY2VNYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3Jh
cHBlcgAuY3RvcgAuY2N0b3IAZ2V0X2ZvdXIAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50
aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ19iNGEwODhhMmJiNjk0ODBl
YmYxMjI3MTc4NTNmNjZiMy5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5n
TW9kZXMAU0NfYjRhMDg4YTJiYjY5NDgwZWJmMTIyNzE3ODUzZjY2YjMuUHJvcGVydGllcwBnZXRf
UmVhZFdyaXRlVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBT
ZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0
AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQu
U3FsU2VydmVyLlR4U2NyaXB0AGdldF9sYXN0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVI
b3N0AElucHV0MF9Qcm9jZXNzSW5wdXQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25l
bnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93
AE5leHRSb3cAZ2V0X0Fzc2VtYmx5AG9wX0VxdWFsaXR5AAAAFXQAaQBtAGUALQB0AGEAawBlAG4A
ARVzAGgAbwByAHQAXwBmAGkAbABlAAATbABvAG4AZwBfAGYAaQBsAGUAAICbSQBzAE4AdQBsAGwA
IABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBh
AGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMA
bwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAE2wAbwBnAEYAaQBs
AGUASQBEAAAlbABvAGcARgBpAGwAZQBJAEQAXwBmAGkAbABlAG4AYQBtAGUAAHFTAEMAXwBiADQA
YQAwADgAOABhADIAYgBiADYAOQA0ADgAMABlAGIAZgAxADIAMgA3ADEANwA4ADUAMwBmADYANgBi
ADMALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAACtQnOBNBLkCp
DChlsXIvbAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQUAAgIODgkgAwESPR0IEkEDBhI9AwYd
CAQgAQ4IBCABAggFIAIBCBwDIAACBiACAg4RcQUgAR0ICAQgABJ1BSABEnkcBAAAEn0GIAEcEoCB
BCABARwIAAESgIURgIkFIAASgI0HIAIBDhKAjQi3elxWGTTgiQiJhF3NgIDMkQMGEhQDBhIYAwYS
RQMGElEDBhJVAwYSIAUgAQESDAMgAA4EIAEBAgkgBAEIDhI9EkEFIAEBEkUEAAASUQQAABJVBQAB
ARJVBAAAEiADAAABAygADgMoAAIECAASUQQIABJVBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBO
b25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDX2I0YTA4OGEyYmI2OTQ4MGViZjEyMjcx
Nzg1M2Y2NmIzAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTcAAEcBABouTkVURnJhbWV3b3Jr
LFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAQB
AAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nv
cmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3
N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAA
AAAAAABQQURQQURQtAAAALg6AAAAAAAAAAAAANI6AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADE
OgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQBepqgYAAABAF6mqBg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
QwBfAGIANABhADAAOAA4AGEAMgBiAGIANgA5ADQAOAAwAGUAYgBmADEAMgAyADcAMQA3ADgANQAz
AGYANgA2AGIAMwAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADMA
MQAyAC4ANAAyADUAOQAwAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBf
AGIANABhADAAOAA4AGEAMgBiAGIANgA5ADQAOAAwAGUAYgBmADEAMgAyADcAMQA3ADgANQAzAGYA
NgA2AGIAMwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQA
ZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBDAF8AYgA0AGEAMAA4ADgAYQAyAGIAYgA2ADkANAA4ADAAZQBiAGYAMQAyADIANwAxADcA
OAA1ADMAZgA2ADYAYgAzAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAQwBfAGIANABhADAAOAA4AGEAMgBiAGIANgA5ADQAOAAwAGUAYgBmADEAMgAyADcAMQA3ADgA
NQAzAGYANgA2AGIAMwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4ANgAzADEAMgAuADQAMgA1ADkAMAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4ANgAzADEAMgAuADQAMgA1ADkAMAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADkOgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_b4a088a2bb69480ebf122717853f66b3</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::logFileID,User::logFileID_filename</property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">01d46dfd77a92e8c3f937bea148bb7e4</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Divide files by column count\file allocation task\ID file.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Divide files by column count\file allocation task\ID file.Inputs[Input 0].Columns[one]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="one"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[one]" />
                        <inputColumn
                          refId="Package\Divide files by column count\file allocation task\ID file.Inputs[Input 0].Columns[two]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="two"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[two]" />
                        <inputColumn
                          refId="Package\Divide files by column count\file allocation task\ID file.Inputs[Input 0].Columns[three]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="12"
                          cachedName="three"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[three]" />
                        <inputColumn
                          refId="Package\Divide files by column count\file allocation task\ID file.Inputs[Input 0].Columns[four]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="11"
                          cachedName="four"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[four]" />
                        <inputColumn
                          refId="Package\Divide files by column count\file allocation task\ID file.Inputs[Input 0].Columns[a]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="29"
                          cachedName="a"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[a]" />
                        <inputColumn
                          refId="Package\Divide files by column count\file allocation task\ID file.Inputs[Input 0].Columns[b]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="52"
                          cachedName="b"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[b]" />
                        <inputColumn
                          refId="Package\Divide files by column count\file allocation task\ID file.Inputs[Input 0].Columns[c]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="12"
                          cachedName="c"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[c]" />
                        <inputColumn
                          refId="Package\Divide files by column count\file allocation task\ID file.Inputs[Input 0].Columns[d]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="6"
                          cachedName="d"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[d]" />
                        <inputColumn
                          refId="Package\Divide files by column count\file allocation task\ID file.Inputs[Input 0].Columns[e]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="15"
                          cachedName="e"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[e]" />
                        <inputColumn
                          refId="Package\Divide files by column count\file allocation task\ID file.Inputs[Input 0].Columns[f]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="f"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[f]" />
                        <inputColumn
                          refId="Package\Divide files by column count\file allocation task\ID file.Inputs[Input 0].Columns[g]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="g"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[g]" />
                        <inputColumn
                          refId="Package\Divide files by column count\file allocation task\ID file.Inputs[Input 0].Columns[h]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="h"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[h]" />
                        <inputColumn
                          refId="Package\Divide files by column count\file allocation task\ID file.Inputs[Input 0].Columns[i]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="i"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[i]" />
                        <inputColumn
                          refId="Package\Divide files by column count\file allocation task\ID file.Inputs[Input 0].Columns[j]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="j"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[j]" />
                        <inputColumn
                          refId="Package\Divide files by column count\file allocation task\ID file.Inputs[Input 0].Columns[last]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="last"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[last]" />
                        <inputColumn
                          refId="Package\Divide files by column count\file allocation task\ID file.Inputs[Input 0].Columns[file_type_check]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="file_type_check"
                          lineageId="Package\Divide files by column count\file allocation task\file_type.Outputs[Derived Column Output].Columns[file_type_check]"
                          usageType="readWrite" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Divide files by column count\file allocation task\ID file.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Divide files by column count\file allocation task\ID file.Inputs[Input 0]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2)"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="2057"
                  name="Input ETL (file type 2)"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">true</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[file length id FFCM]"
                      connectionManagerRefId="Package.ConnectionManagers[file length id FFCM]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[one]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[one]"
                          length="50"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[one]"
                          name="one"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[two]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[two]"
                          length="50"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[two]"
                          name="two"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[three]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[three]"
                          length="12"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[three]"
                          name="three"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[four]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[four]"
                          length="11"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[four]"
                          name="four"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[a]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[a]"
                          length="29"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[a]"
                          name="a"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[b]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[b]"
                          length="52"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[b]"
                          name="b"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[c]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[c]"
                          length="12"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[c]"
                          name="c"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[d]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[d]"
                          length="6"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[d]"
                          name="d"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[e]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[e]"
                          length="15"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[e]"
                          name="e"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[f]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[f]"
                          length="255"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[f]"
                          name="f"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[g]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[g]"
                          length="255"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[g]"
                          name="g"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[h]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[h]"
                          length="255"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[h]"
                          name="h"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[i]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[i]"
                          length="255"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[i]"
                          name="i"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[j]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[j]"
                          length="255"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[j]"
                          name="j"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[last]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[last]"
                          length="255"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[last]"
                          name="last"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[one]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="one" />
                        <externalMetadataColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[two]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="two" />
                        <externalMetadataColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[three]"
                          codePage="1252"
                          dataType="str"
                          length="12"
                          name="three" />
                        <externalMetadataColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[four]"
                          codePage="1252"
                          dataType="str"
                          length="11"
                          name="four" />
                        <externalMetadataColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[a]"
                          codePage="1252"
                          dataType="str"
                          length="29"
                          name="a" />
                        <externalMetadataColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[b]"
                          codePage="1252"
                          dataType="str"
                          length="52"
                          name="b" />
                        <externalMetadataColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[c]"
                          codePage="1252"
                          dataType="str"
                          length="12"
                          name="c" />
                        <externalMetadataColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[d]"
                          codePage="1252"
                          dataType="str"
                          length="6"
                          name="d" />
                        <externalMetadataColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[e]"
                          codePage="1252"
                          dataType="str"
                          length="15"
                          name="e" />
                        <externalMetadataColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[f]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="f" />
                        <externalMetadataColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[g]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="g" />
                        <externalMetadataColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[h]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="h" />
                        <externalMetadataColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[i]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="i" />
                        <externalMetadataColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[j]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="j" />
                        <externalMetadataColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[last]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="last" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Divide files by column count\file allocation task\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[file_name_type_table]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Divide files by column count\file allocation task\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      connectionManagerRefId="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Divide files by column count\file allocation task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Divide files by column count\file allocation task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[file_type_check]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="file_type_check"
                          externalMetadataColumnId="Package\Divide files by column count\file allocation task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[file_type]"
                          lineageId="Package\Divide files by column count\file allocation task\file_type.Outputs[Derived Column Output].Columns[file_type_check]" />
                        <inputColumn
                          refId="Package\Divide files by column count\file allocation task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[filename]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="400"
                          cachedName="filename"
                          externalMetadataColumnId="Package\Divide files by column count\file allocation task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[filename]"
                          lineageId="Package\Divide files by column count\file allocation task\file_name.Outputs[Derived Column Output].Columns[filename]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Divide files by column count\file allocation task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[filename]"
                          codePage="1252"
                          dataType="str"
                          length="200"
                          name="filename" />
                        <externalMetadataColumn
                          refId="Package\Divide files by column count\file allocation task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[file_type]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="file_type" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Divide files by column count\file allocation task\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Divide files by column count\file allocation task\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Divide files by column count\file allocation task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Divide files by column count\file allocation task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Divide files by column count\file allocation task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Divide files by column count\file allocation task.Paths[Derived Column Output]"
                  endId="Package\Divide files by column count\file allocation task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Divide files by column count\file allocation task\file_name.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Divide files by column count\file allocation task.Paths[Derived Column Output1]"
                  endId="Package\Divide files by column count\file allocation task\ID file.Inputs[Input 0]"
                  name="Derived Column Output"
                  startId="Package\Divide files by column count\file allocation task\file_type.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Divide files by column count\file allocation task.Paths[Flat File Source Output]"
                  endId="Package\Divide files by column count\file allocation task\Conditional Split.Inputs[Conditional Split Input]"
                  name="Flat File Source Output"
                  startId="Package\Divide files by column count\file allocation task\Input ETL (file type 2).Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Divide files by column count\file allocation task.Paths[headers_row]"
                  endId="Package\Divide files by column count\file allocation task\file_type.Inputs[Derived Column Input]"
                  name="headers_row"
                  startId="Package\Divide files by column count\file allocation task\Conditional Split.Outputs[headers_row]" />
                <path
                  refId="Package\Divide files by column count\file allocation task.Paths[Output 0]"
                  endId="Package\Divide files by column count\file allocation task\file_name.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Divide files by column count\file allocation task\ID file.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{d72a0c81-a1b6-4a5b-ac4d-befd3b213631}"
          DTS:ObjectName="{7847EFED-43C2-4D00-8DEB-2131930DA4E4}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::LogFile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Log File catalog"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{400541FC-2F82-4755-9F2C-C8AA4C91780D}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Log File catalog">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{D7C399C3-AE6C-47B9-9A9F-AEE9C5B1F668}"
        DTS:ObjectName="{D7C399C3-AE6C-47B9-9A9F-AEE9C5B1F668}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="D:\MSc\Business Intelligence\BI2017\W3SVC1" />
            <FEFEProperty
              FileSpec="*.*" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Log File catalog\check file type"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{5CD9401D-741D-497B-951A-8808F24A30DB}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="check file type"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Log File catalog\check file type\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT DISTINCT "file_type" FROM file_name_type_table WHERE filename =  ?</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"Parameter0:Input",{B3CB1906-BD67-42B1-849F-85D7D7884879};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Log File catalog\check file type\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      connectionManagerRefId="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\check file type\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\check file type\OLE DB Source.Outputs[OLE DB Source Output].Columns[file_type]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\check file type\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[file_type]"
                          length="50"
                          lineageId="Package\Foreach Loop Log File catalog\check file type\OLE DB Source.Outputs[OLE DB Source Output].Columns[file_type]"
                          name="file_type"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\check file type\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[file_type]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="file_type" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\check file type\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\check file type\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[file_type]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Log File catalog\check file type\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[file_type]"
                          name="file_type" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\check file type\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\check file type\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\check file type\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\check file type\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\check file type\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String logfilenamelong
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["log_filename_long"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["log_filename_long"].Value = value;
        }
    }

    public String logfilenameshort
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["log_filename_short"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["log_filename_short"].Value = value;
        }
    }

    public String LogFile
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["LogFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["LogFile"].Value = value;
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    string type = "";
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        if (type == "long_file")
        {
            Variables.logfilenamelong = Variables.LogFile;
        }
        else if (type == "short_file")
        {
            Variables.logfilenameshort = Variables.LogFile;
        }

    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
         if (Row.filetype == "long_file")
        {
            type = "long_file";
        } else if (Row.filetype == "short_file")
        {
            type = "short_file";
        }

    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String filetype
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool filetype_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_62aeec3490a74072b928493b6a555fd5.Properties.Settings.get_Default():SC_62aeec3490a74072b928493b6a555fd5.Properties.Sett" +
    "ings")]

namespace SC_62aeec3490a74072b928493b6a555fd5.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_62aeec3490a74072b928493b6a555fd5.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{87087640-ea4a-46d7-8fca-92cecd51b594}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_62aeec3490a74072b928493b6a555fd5</RootNamespace>
    <AssemblyName>SC_62aeec3490a74072b928493b6a555fd5</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_62aeec3490a74072b928493b6a555fd5" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_62aeec3490a74072b928493b6a555fd5</msb:CodeName>
		<msb:DisplayName>SC_62aeec3490a74072b928493b6a555fd5</msb:DisplayName>
		<msb:ProjectId>{BAFABB5E-C715-4949-94C6-8E352A5F8176}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_62aeec3490a74072b928493b6a555fd5.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_62aeec3490a74072b928493b6a555fd5")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_62aeec3490a74072b928493b6a555fd5")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_62aeec3490a74072b928493b6a555fd5.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_62aeec3490a74072b928493b6a555fd5.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_62aeec3490a74072b928493b6a555fd5.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_62aeec3490a74072b928493b6a555fd5.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_62aeec3490a74072b928493b6a555fd5.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_62aeec3490a74072b928493b6a555fd5.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMYN8FgAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAA4jUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJA1AABPAAAAAEAAAGwEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA6BUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAGwEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADE
NQAAAAAAAEgAAAACAAUACCMAANARAAABAAAAAAAAANg0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqEzACAFgAAAAAAAAAAigRAAAKAnsBAAAEcgEA
AHAoEgAACiwXAnsDAAAEAnsDAAAEbxYAAAZvEwAABioCewEAAARyFQAAcCgSAAAKLBYCewMAAAQC
ewMAAARvFgAABm8VAAAGKvIDbwYAAAZyAQAAcCgSAAAKLAwCcgEAAHB9AQAABCoDbwYAAAZyFQAA
cCgSAAAKLAsCchUAAHB9AQAABCpKAnIrAABwfQEAAAQCKAwAAAYqKgIDBAUoEwAACipSAnsUAAAK
AnsVAAAKFpRvFgAACiomAhYDKBcAAAoqIgIWKBgAAAoqWgMsCAIWKBkAAAoqci0AAHBzGgAACnoe
AigbAAAKKh4CKBwAAAoqfgIoHQAACgICcxAAAAZ9AgAABAICcxEAAAZ9AwAABCqSBHLKAABwGm8e
AAAKLBUCBQIDKB8AAAoOBHMFAAAGbw4AAAYqSisHAgNvDwAABgNvCgAABi3xKgYqOgIoIAAACgID
fQQAAAQqOgIoIAAACgIDfQUAAAQqlgJ7BQAABG8hAAAKctoAAHBvIgAACigjAAAKbyQAAAp0GgAA
ASpyAnsFAAAEbyEAAApy2gAAcG8iAAAKA28lAAAKKpYCewUAAARvIQAACnL+AABwbyIAAAooIwAA
Cm8kAAAKdBoAAAEqcgJ7BQAABG8hAAAKcv4AAHBvIgAACgNvJQAACiqWAnsFAAAEbyEAAApyJAEA
cG8iAAAKKCMAAApvJAAACnQaAAABKnICewUAAARvIQAACnIkAQBwbyIAAAoDbyUAAAoqHgIoIAAA
CiqufgYAAAQtHnI0AQBw0AcAAAIoJgAACm8nAAAKcygAAAqABgAABH4GAAAEKhp+BwAABCoeAoAH
AAAEKhp+CAAABCoeAigpAAAKKi5zHQAABoAIAAAEKgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMw
MzE5AAAAAAUAbAAAAFAGAAAjfgAAvAYAAJQHAAAjU3RyaW5ncwAAAABQDgAAqAEAACNVUwD4DwAA
EAAAACNHVUlEAAAACBAAAMgBAAAjQmxvYgAAAAAAAAACAAABVxWgAQkBAAAA+gEzABYAAAEAAAAj
AAAACAAAAAgAAAAeAAAAEgAAACkAAAAQAAAABAAAAAgAAAAOAAAAAQAAAAUAAAABAAAAAACKAwEA
AAAAAAYATwJFBQYA4wJFBQYAmwEyBQ8AuQUAAAYAyAE8BAYAMgI8BAYAEwI8BAYAygI8BAYAbwI8
BAYAiAI8BAYA3wE8BAYA+gEoAwoAowLOAAoA3ATOAA4AzQTOAAoAhQTOAAoAjAbOAAYATwb0AwYA
fgEyBQYA7QRlBQYAeQQnBBIATgF0AxIArwF0AxIANgESBAYAYwFFBQYARQP0AwYATgT0AwYAaAT0
AxYAEQD9BBYAAQD9BEcALAcAABYAIgD9BAYA7wD0AwYAiAD0AwYAfwc8BAAAAABeAAAAAAABAAEA
AQAQAAcEAAAQAAEAAQABABAAwAQAADkAAgAFAAEAEABuBgAARQACAAwAAQAQAEMGAABJAAQAEAAB
ABAABAYAAEkABQARAAAAEABsBcgFSQAGABgAAAEQADMGyAVhAAgAHAABAAkBmQAGAEMGnAAGAAQG
oAABAHwGpAABAHwGpAARAPsDqAARACYBrAARAHgAsABQIAAAAADGAAEDBgABAFggAAAAAMYADAMG
AAEAvCAAAAAAxgBcB7QAAQD5IAAAAACGGCUFBgACAAwhAAAAAIYYJQUhAAIAFyEAAAAAhgj0ALoA
BQAsIQAAAACGCAEBEAAFADYhAAAAAIYIsgNDAAYAPyEAAAAAhgjGA74ABgBWIQAAAACGAHMHQwAH
AF4hAAAAAIYAVgZDAAcAZiEAAAAAhhglBQYABwCGIQAAAADGAAsHwwAHAKshAAAAAMYBBAe0AAsA
viEAAAAAxgFcB7QADADAIQAAAACGGCUFzQANAM8hAAAAAIYYJQXNAA4A3iEAAAAAhghMA7oADwAE
IgAAAACGCGADEAAPACEiAAAAAIYIuQa6ABAARyIAAAAAhgjOBhAAEABkIgAAAACGCKwAugARAIoi
AAAAAIYIuAAQABEApyIAAAAAgxglBQYAEgCvIgAAAACTCOkE0wASANsiAAAAAJMIDgHYABIA4iIA
AAAAkwgaAd0AEgDqIgAAAACWCGIG4wATAPEiAAAAAIYYJQUGABMA+SIAAAAAkRgrBegAEwAAAAEA
dwcAAAEA4gQAAAIADgYAAAMAkwQAAAEAIgMAAAEAIgMAAAEAZwAAAAIAxAAAAAMA4gQAAAQAkwQA
AAEA4gQAAAEAdwcAAAEAkgYAAAEAkgYAAAEAIgMAAAEAIgMAAAEAIgMAAAEAIgMJACUFAQARACUF
BgAZACUFCgApACUFEAAxACUFEAA5ACUFEABBACUFEABJACUFEABRACUFEABZACUFEABhACUFEABp
ACUFBgCZACUFBgC5ACUFFQDJACUFBgCJAAEDBgCJAAwDBgDRAIgHGwBxACUFIQBxAOIEKwBxAA4G
LwB5AEIDMwBxAOsDOABxANMDPgBxANoDAQDZACUFEABxAHMHQwBxAFYGQwCJACUFBgDRADwGRwCJ
ACIGTgCRACUFBgCJAPcFVADpAOIDWQCJAEcHXwDxABgHZADxABgDawAJAZoAcAAJAXsHeQChACUF
fwDBACUFBgAuAAsAAwEuABMADAEuABsAKwEuACMANAEuACsAXQEuADMAXQEuADsAXQEuAEMANAEu
AEsAYwEuAFMAXQEuAFsAegFDAGMAwgHJAHMAKwHjAGsAwgHpAHMAKwEBAXsAwgEDAAEABgADAAcA
BgAIAAgAAAAFAewAAADKA/AAAABkA+wAAADSBuwAAAC8AOwAAADtBPQAAAAuAfkAAABmBv4AAgAG
AAMAAQAHAAMAAgAIAAUAAQAJAAUAAgASAAcAAQATAAcAAgAUAAkAAQAVAAkAAgAWAAsAAQAXAAsA
AgAZAA0AAgAaAA8AAQAbAA8AAgAcABEABIAAAAEAAACpGGsFAAAAAAAAOgAAAAQAAAAAAAAAAAAA
AIcAbwAAAAAADAAAAAAAAAAAAAAAkACcBgAAAAAMAAAAAAAAAAAAAACQAOMGAAAAAAQAAAAAAAAA
AAAAAIcA9AMAAAAADAAAAAAAAAAAAAAAkACdBAAAAAAAAAAAAQAAAHYFAAAAAAAAAElEVFNWYXJp
YWJsZTEwMABJRFRTVmFyaWFibGVzMTAwAElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAFNDXzYyYWVl
YzM0OTBhNzQwNzJiOTI4NDkzYjZhNTU1ZmQ1ADxNb2R1bGU+AElucHV0SUQAbXNjb3JsaWIAZGVm
YXVsdEluc3RhbmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9Mb2dG
aWxlAHNldF9Mb2dGaWxlAElucHV0TmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGlu
ZQBUeXBlAGdldF9maWxldHlwZQBzZXRfZmlsZXR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUA
cmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0
YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1
dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlU
aXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtB
dHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRp
b25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1
Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVu
dEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21w
YXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAc2V0X1ZhbHVlAHZhbHVl
AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAR2V0U3RyaW5nAGdldF9sb2dmaWxlbmFtZWxvbmcA
c2V0X2xvZ2ZpbGVuYW1lbG9uZwBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfNjJhZWVjMzQ5MGE3
NDA3MmI5Mjg0OTNiNmE1NTVmZDUuZGxsAGdldF9maWxldHlwZV9Jc051bGwAc2V0X2ZpbGV0eXBl
X0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3Jp
cHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5S
ZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0
dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1
bnRpbWVXcmFwAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jl
c291cmNlTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIALmN0
b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfNjJhZWVjMzQ5MGE3NDA3MmI5Mjg0OTNiNmE1NTVmZDUu
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzYyYWVlYzM0
OTBhNzQwNzJiOTI4NDkzYjZhNTU1ZmQ1LlByb3BlcnRpZXMAZ2V0X1JlYWRXcml0ZVZhcmlhYmxl
cwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENv
bm5lY3Rpb25zAE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBh
cmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlw
dABnZXRfbG9nZmlsZW5hbWVzaG9ydABzZXRfbG9nZmlsZW5hbWVzaG9ydABNaWNyb3NvZnQuU3Fs
U2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AEdldFZhbHVlV2l0aENvbnRl
eHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQASW5wdXQw
X1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQBvcF9FcXVhbGl0eQAAE2wAbwBu
AGcAXwBmAGkAbABlAAAVcwBoAG8AcgB0AF8AZgBpAGwAZQAAAQCAm0kAcwBOAHUAbABsACAAcABy
AG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMA
ZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1
AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAACNsAG8AZwBfAGYAaQBsAGUA
bgBhAG0AZQBfAGwAbwBuAGcAACVsAG8AZwBfAGYAaQBsAGUAbgBhAG0AZQBfAHMAaABvAHIAdAAA
D0wAbwBnAEYAaQBsAGUAAHFTAEMAXwA2ADIAYQBlAGUAYwAzADQAOQAwAGEANwA0ADAANwAyAGIA
OQAyADgANAA5ADMAYgA2AGEANQA1ADUAZgBkADUALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBl
AHMAbwB1AHIAYwBlAHMAAAAALat1kaRagUG2FHNNdYm83gAEIAEBCAMgAAEFIAEBEREEIAEBDgUg
AQERWQUAAgIODgkgAwESPR0IEkEDBhI9AwYdCAQgAQ4IBSACAQgcBCABAggDIAACBiACAg4RcQUg
AR0ICAQgABJ1BSABEnkcBAAAEn0GIAEcEoCBBCABARwIAAESgIURgIkFIAASgI0HIAIBDhKAjQi3
elxWGTTgiQiJhF3NgIDMkQIGDgMGEhQDBhIYAwYSRQMGElEDBhJVAwYSIAUgAQESDAMgAA4EIAEB
AgkgBAEIDhI9EkEFIAEBEkUEAAASUQQAABJVBQABARJVBAAAEiADAAABAygADgMoAAIECAASUQQI
ABJVBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAA
KAEAI1NDXzYyYWVlYzM0OTBhNzQwNzJiOTI4NDkzYjZhNTU1ZmQ1AAAFAQAAAAAWAQARQ29weXJp
Z2h0IEAgIDIwMTcAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3Jr
RGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAQBAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVt
LlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs
dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNv
dXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAC4NQAAAAAAAAAA
AADSNQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxDUAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBt
c2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABAEAAAAAAAAAAAAABAENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQBrBakYAAABAGsFqRg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARwAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABMAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADYAMgBhAGUAZQBjADMANAA5ADAAYQA3ADQAMAA3ADIAYgA5ADIAOAA0ADkAMwBiADYA
YQA1ADUANQBmAGQANQAAADwADgABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2
ADMAMQAzAC4AMQAzADgANwAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
NgAyAGEAZQBlAGMAMwA0ADkAMABhADcANAAwADcAMgBiADkAMgA4ADQAOQAzAGIANgBhADUANQA1
AGYAZAA1AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADcAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABl
AG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUA
AABTAEMAXwA2ADIAYQBlAGUAYwAzADQAOQAwAGEANwA0ADAANwAyAGIAOQAyADgANAA5ADMAYgA2
AGEANQA1ADUAZgBkADUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBDAF8ANgAyAGEAZQBlAGMAMwA0ADkAMABhADcANAAwADcAMgBiADkAMgA4ADQAOQAzAGIANgBh
ADUANQA1AGYAZAA1AAAAQAAOAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA2ADMAMQAzAC4AMQAzADgANwAAAEQADgABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADYAMwAxADMALgAxADMAOAA3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADkNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_62aeec3490a74072b928493b6a555fd5</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::log_filename_long,User::log_filename_short,User::LogFile</property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">77ef294913af5e320df3942eb7c863c5</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\check file type\Script Component.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\check file type\Script Component.Inputs[Input 0].Columns[file_type]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="file_type"
                          lineageId="Package\Foreach Loop Log File catalog\check file type\OLE DB Source.Outputs[OLE DB Source Output].Columns[file_type]"
                          usageType="readWrite" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Log File catalog\check file type.Paths[OLE DB Source Output]"
                  endId="Package\Foreach Loop Log File catalog\check file type\Script Component.Inputs[Input 0]"
                  name="OLE DB Source Output"
                  startId="Package\Foreach Loop Log File catalog\check file type\OLE DB Source.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Log File catalog\long log file load"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{c835979f-d1ae-4bf2-8bd3-abbec56c0be8}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="long log file load"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Log File catalog\long log file load\add ID"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="add ID"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\long log file load\add ID.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\add ID.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\add ID.Inputs[Derived Column Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\add ID.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\add ID.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\add ID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\add ID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\add ID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\add ID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\long log file load\client dimension"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="client dimension"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[client dimension]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Log File catalog\long log file load\client dimension.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      connectionManagerRefId="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\long log file load\client dimension.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\client dimension.Inputs[OLE DB Destination Input].Columns[client_ip]"
                          cachedDataType="wstr"
                          cachedLength="15"
                          cachedName="client_ip"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\client dimension.Inputs[OLE DB Destination Input].ExternalColumns[client_ip]"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Outputs[Derived Column Output].Columns[client_ip]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\client dimension.Inputs[OLE DB Destination Input].ExternalColumns[client_ip]"
                          dataType="wstr"
                          length="15"
                          name="client_ip" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\client dimension.Inputs[OLE DB Destination Input].ExternalColumns[city]"
                          dataType="wstr"
                          length="4"
                          name="city" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\client dimension.Inputs[OLE DB Destination Input].ExternalColumns[county]"
                          dataType="wstr"
                          length="7"
                          name="county" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\client dimension.Inputs[OLE DB Destination Input].ExternalColumns[country]"
                          dataType="wstr"
                          length="6"
                          name="country" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\client dimension.Inputs[OLE DB Destination Input].ExternalColumns[session]"
                          dataType="wstr"
                          length="94"
                          name="session" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\client dimension.Inputs[OLE DB Destination Input].ExternalColumns[os]"
                          dataType="wstr"
                          length="94"
                          name="os" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\client dimension.Inputs[OLE DB Destination Input].ExternalColumns[browser]"
                          dataType="wstr"
                          length="94"
                          name="browser" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\client dimension.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\client dimension.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\client dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\client dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\client dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\client dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="client dimension transformations"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Inputs[Derived Column Input].Columns[user_ip]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="user_ip"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[user_ip]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Outputs[Derived Column Output].Columns[client_ip]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="15"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Outputs[Derived Column Output].Columns[client_ip]"
                          name="client_ip"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[user_ip]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">user_ip</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Outputs[Derived Column Output].Columns[city]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Outputs[Derived Column Output].Columns[city]"
                          name="city"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::city]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::city]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Outputs[Derived Column Output].Columns[county]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="7"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Outputs[Derived Column Output].Columns[county]"
                          name="county"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::country]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::country]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Outputs[Derived Column Output].Columns[country]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="6"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Outputs[Derived Column Output].Columns[country]"
                          name="country"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::county]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::county]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Outputs[Derived Column Output].Columns[session]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="2"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Outputs[Derived Column Output].Columns[session]"
                          name="session"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"12"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"12"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Outputs[Derived Column Output].Columns[os]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="2"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Outputs[Derived Column Output].Columns[os]"
                          name="os"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"12"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"12"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Outputs[Derived Column Output].Columns[browser]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="2"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Outputs[Derived Column Output].Columns[browser]"
                          name="browser"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"12"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"12"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\long log file load\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\long log file load\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Conditional Split.Inputs[Conditional Split Input].Columns[date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="date"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[date]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\Conditional Split.Outputs[validate comments]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="validate comments"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[LEFT](#{Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[date]},1) == "#"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">LEFT(date,1) == "#"</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\long log file load\conversion errors"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="conversion errors"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[conversion_errors]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Log File catalog\long log file load\conversion errors.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      connectionManagerRefId="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\long log file load\conversion errors.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\conversion errors.Inputs[OLE DB Destination Input].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\conversion errors.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\conversion errors.Inputs[OLE DB Destination Input].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\conversion errors.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Error Output].Columns[ErrorColumn]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\conversion errors.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          dataType="i4"
                          name="ErrorCode" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\conversion errors.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          dataType="i4"
                          name="ErrorColumn" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\conversion errors.Inputs[OLE DB Destination Input].ExternalColumns[date]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\conversion errors.Inputs[OLE DB Destination Input].ExternalColumns[time]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="time" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\conversion errors.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\conversion errors.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\conversion errors.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\conversion errors.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\conversion errors.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\conversion errors.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\long log file load\convert string to date"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="convert string to date"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\long log file load\convert string to date.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\convert string to date.Inputs[Data Conversion Input].Columns[date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="date"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\convert string to date.Inputs[Data Conversion Input].Columns[time]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="time"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[time]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\convert string to date.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]"
                          name="date_formatted"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[time_formatted]"
                          dataType="dbTime"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[time_formatted]"
                          name="time_formatted"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[time]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\convert string to date.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="date dimenstion"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[date dimenstion]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      connectionManagerRefId="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Inputs[OLE DB Destination Input].Columns[month]"
                          cachedDataType="i4"
                          cachedName="month"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Inputs[OLE DB Destination Input].ExternalColumns[month]"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[month]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Inputs[OLE DB Destination Input].Columns[year]"
                          cachedDataType="i4"
                          cachedName="year"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Inputs[OLE DB Destination Input].ExternalColumns[year]"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[year]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Inputs[OLE DB Destination Input].Columns[day]"
                          cachedDataType="i4"
                          cachedName="day"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Inputs[OLE DB Destination Input].ExternalColumns[day]"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[day]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Inputs[OLE DB Destination Input].Columns[quarter]"
                          cachedDataType="i4"
                          cachedName="quarter"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Inputs[OLE DB Destination Input].ExternalColumns[quarter]"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[quarter]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Inputs[OLE DB Destination Input].Columns[week]"
                          cachedDataType="i4"
                          cachedName="week"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Inputs[OLE DB Destination Input].ExternalColumns[week]"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[week]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Inputs[OLE DB Destination Input].Columns[month_name]"
                          cachedDataType="wstr"
                          cachedLength="9"
                          cachedName="month_name"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Inputs[OLE DB Destination Input].ExternalColumns[month_name]"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[month_name]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Inputs[OLE DB Destination Input].ExternalColumns[month]"
                          dataType="i4"
                          name="month" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Inputs[OLE DB Destination Input].ExternalColumns[year]"
                          dataType="i4"
                          name="year" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Inputs[OLE DB Destination Input].ExternalColumns[day]"
                          dataType="i4"
                          name="day" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Inputs[OLE DB Destination Input].ExternalColumns[quarter]"
                          dataType="i4"
                          name="quarter" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Inputs[OLE DB Destination Input].ExternalColumns[week]"
                          dataType="i4"
                          name="week" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Inputs[OLE DB Destination Input].ExternalColumns[month_name]"
                          dataType="wstr"
                          length="9"
                          name="month_name" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\long log file load\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Inputs[Derived Column Input].Columns[response_code]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="response_code"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[response_code]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Inputs[Derived Column Input].Columns[time_taken]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="time_taken"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[time_taken]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Outputs[Derived Column Output].Columns[response_code]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Outputs[Derived Column Output].Columns[response_code]"
                          name="response_code"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[response_code]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">response_code</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Outputs[Derived Column Output].Columns[time_taken]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Outputs[Derived Column Output].Columns[time_taken]"
                          name="time_taken"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[time_taken]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">time_taken</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Outputs[Derived Column Output].Columns[type]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Outputs[Derived Column Output].Columns[type]"
                          name="type"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"unknown"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"unknown"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\long log file load\divide codes"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="divide codes"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_7c9fdcff1667454baf06d119e342e9e4.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9cc2c472-27ea-41dd-9e5f-cf42913d49f1}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_7c9fdcff1667454baf06d119e342e9e4</RootNamespace>
    <AssemblyName>SC_7c9fdcff1667454baf06d119e342e9e4</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_7c9fdcff1667454baf06d119e342e9e4" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {

        //string browser_column = Row.userbrowser;

        ////so we have few possible status column counts: 4 and 6 + fail safe

        ////split string by spaces
        //string[] tokens = browser_column.Split(' ');

        //if (tokens.Length - 4 >= 0)
        //{


        //    int n;
        //    bool isNumberic = int.TryParse(tokens[tokens.Length - 4], out n);
        //    //if last field is numeric then there are response code
        //    if (isNumberic)
        //    {
        //        if (tokens[tokens.Length - 4] == "-")
        //        {
        //            Row.responsecode = tokens[tokens.Length - 3];
        //            Row.timetaken = tokens[tokens.Length];
        //            //4 fields and type " - - " or " - "

        //        }
        //        else if (tokens[tokens.Length - 4] == ")")
        //        {
        //            //4 fields and type ") " 
        //            Row.responsecode = tokens[tokens.Length - 3];
        //            Row.timetaken = tokens[tokens.Length];
        //        }
        //        else if (tokens[tokens.Length - 4].Length > 4)
        //        {
        //            //4 fields and type "ends with link" 
        //            Row.responsecode = tokens[tokens.Length - 3];
        //            Row.timetaken = tokens[tokens.Length];
        //        }

        //    }
        //}

        //    if (tokens.Length - 6 >= 0)
        //    {


        //        int is6numeric;
        //        bool isNumbericSix = int.TryParse(tokens[tokens.Length - 4], out is6numeric);

        //        if (isNumbericSix)
        //        {
        //            if (tokens[tokens.Length - 6] == "-")
        //            {
        //                //6 fields and type " - - " or " - "
        //                Row.responsecode = tokens[tokens.Length - 5];
        //                Row.timetaken = tokens[tokens.Length];


        //            }

        //            else if (tokens[tokens.Length - 6] == ")")
        //            {
        //                //6 fields and type ") " 
        //                Row.responsecode = tokens[tokens.Length - 5];
        //                Row.timetaken = tokens[tokens.Length];
        //            }
        //            else if (tokens[tokens.Length - 6].Length > 4)
        //            {
        //                //6 fields and type "ends with link" 
        //                Row.responsecode = tokens[tokens.Length - 5];
        //                Row.timetaken = tokens[tokens.Length];
        //            }
        //        }
        //    }
        

        int responseCodeInt;
        bool isResponseNumberic = int.TryParse(Row.responsecode, out responseCodeInt);
        
        if (isResponseNumberic) {
            if (responseCodeInt >= 100 && responseCodeInt<200)
            {
                Row.type = "Informational";
            } else if (responseCodeInt >= 200 && responseCodeInt < 300)
            {
                Row.type = "Sucesses";

            }
            else if (responseCodeInt >= 300 && responseCodeInt < 400)
            {
                Row.type = "Redirections";
            }
            else if (responseCodeInt >= 400 && responseCodeInt < 500)
            {
                Row.type = "Client Errors";
            }
            else if (responseCodeInt >= 500)
            {
                Row.type = "Server Errors";
            }
        } 
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String userbrowser
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool userbrowser_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String responsecode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
        set
        {
            this[1] = value;
        }
    }
    public bool responsecode_IsNull
    {
        get
        {
            return IsNull(1);
        }
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String timetaken
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
        set
        {
            this[2] = value;
        }
    }
    public bool timetaken_IsNull
    {
        get
        {
            return IsNull(2);
        }
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String type
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
        set
        {
            this[3] = value;
        }
    }
    public bool type_IsNull
    {
        get
        {
            return IsNull(3);
        }
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7c9fdcff1667454baf06d119e342e9e4.Properties.Settings.get_Default():SC_7c9fdcff1667454baf06d119e342e9e4.Properties.Sett" +
    "ings")]

namespace SC_7c9fdcff1667454baf06d119e342e9e4.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_7c9fdcff1667454baf06d119e342e9e4</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_7c9fdcff1667454baf06d119e342e9e4</msb:DisplayName>
		<msb:ProjectId>{2B27CAC9-9E5D-4CAD-B649-734834568030}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_7c9fdcff1667454baf06d119e342e9e4.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7c9fdcff1667454baf06d119e342e9e4")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7c9fdcff1667454baf06d119e342e9e4")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7c9fdcff1667454baf06d119e342e9e4.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7c9fdcff1667454baf06d119e342e9e4.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7c9fdcff1667454baf06d119e342e9e4.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7c9fdcff1667454baf06d119e342e9e4.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7c9fdcff1667454baf06d119e342e9e4.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_7c9fdcff1667454baf06d119e342e9e4.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJTD7lgAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAhjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADQ1AABPAAAAAEAAAGwEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAjBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAGwEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABo
NQAAAAAAAEgAAAACAAUA9CIAAIgRAAABAAAAAAAAAHw0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAIAkwAAAAEAABEDbwoAAAYS
ACgSAAAKOYAAAAAGH2QyFAYgyAAAAC8MA3IBAABwbxMAAAYqBiDIAAAAMhQGICwBAAAvDANyHQAA
cG8TAAAGKgYgLAEAADIUBiCQAQAALwwDci8AAHBvEwAABioGIJABAAAyFAYg9AEAAC8MA3JJAABw
bxMAAAYqBiD0AQAAMgsDcmUAAHBvEwAABioeAigYAAAGKioCAwQFKBMAAAoqUgJ7FAAACgJ7FQAA
ChaUbxYAAAoqJgIWAygXAAAKKiICFigYAAAKKloDLAgCFigZAAAKKnKBAABwcxoAAAp6UgJ7FAAA
CgJ7FQAACheUbxYAAAoqJgIXAygXAAAKKiICFygYAAAKKloDLAgCFygZAAAKKnKBAABwcxoAAAp6
UgJ7FAAACgJ7FQAAChiUbxYAAAoqJgIYAygXAAAKKiICGCgYAAAKKloDLAgCGCgZAAAKKnKBAABw
cxoAAAp6UgJ7FAAACgJ7FQAAChmUbxYAAAoqJgIZAygXAAAKKiICGSgYAAAKKloDLAgCGSgZAAAK
KnKBAABwcxoAAAp6HgIoGwAACioeAigcAAAKKn4CKB0AAAoCAnMcAAAGfQEAAAQCAnMdAAAGfQIA
AAQqkgRyHgEAcBpvHgAACiwVAgUCAygfAAAKDgRzBQAABm8aAAAGKkorBwIDbxsAAAYDbxYAAAYt
8SoGKjoCKCAAAAoCA30DAAAEKjoCKCAAAAoCA30EAAAEKh4CKCAAAAoqrn4FAAAELR5yLgEAcNAH
AAACKCEAAApvIgAACnMjAAAKgAUAAAR+BQAABCoafgYAAAQqHgKABgAABCoafgcAAAQqHgIoJAAA
CioucyMAAAaABwAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACkBgAAI34A
ABAHAAAcBwAAI1N0cmluZ3MAAAAALA4AAKABAAAjVVMAzA8AABAAAAAjR1VJRAAAANwPAACsAQAA
I0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPoBMwAWAAABAAAAIAAAAAgAAAAHAAAAJAAAABUAAAAk
AAAAEAAAAAEAAAADAAAACwAAABQAAAABAAAABAAAAAEAAAAAADADAQAAAAAABgAnAlMFBgC7AlMF
BgBzAUAFDwDHBQAABgCgAXUEBgAKAnUEBgDrAXUEBgCiAnUEBgBHAnUEBgBgAnUEBgC3AXUEBgDS
AfYCCgB7AqUACgDyBKUADgDjBKUACgC+BKUACgCNBqUABgBQBhEEBgBWAUAFBgADBXMFBgCyBGAE
EgAmARoDEgCHARoDEgAFAUsEBgA7AVMFBgABABEEBgCHBBEEBgATAxEEBgChBBEEBgDGABEEBgB3
ABEEBgASB3UEAAAAACsAAAAAAAEAAQABABAAQAQAABAAAQABAAEAEADWBAAAOQABAAUAAQAQAG8G
AABFAAEAGAABABAARAYAAEkAAwAcAAEAEAAFBgAASQAEAB0AAAAQAHoF1gVJAAUAHgAAARAANAbW
BWEABwAiAAYARAaAAAYABQaEAAEAfQaIAAEAfQaIABEAGASMABEA9QCQABEARQCUAFAgAAAAAMYA
2QIGAAEAWCAAAAAAxgDkAgYAAQBgIAAAAADGAO8GmAABAP8gAAAAAIYYMwUGAAIAByEAAAAAhhgz
BSYAAgASIQAAAACGCBMFngAFACchAAAAAIYIIwUQAAUAMSEAAAAAhgjSA0gABgA6IQAAAACGCOkD
ogAGAFEhAAAAAIYIVQCeAAcAZiEAAAAAhghmABAABwBwIQAAAACGCFgDSAAIAHkhAAAAAIYIcAOi
AAgAkCEAAAAAhggkBJ4ACQClIQAAAACGCDIEEAAJAK8hAAAAAIYIqANIAAoAuCEAAAAAhgi9A6IA
CgDPIQAAAACGCMsAngALAOQhAAAAAIYI1AAQAAsA7iEAAAAAhgiIA0gADAD3IQAAAACGCJgDogAM
AA4iAAAAAIYABgdIAA0AFiIAAAAAhgBXBkgADQAeIgAAAACGGDMFBgANAD4iAAAAAMYA4ganAA0A
YyIAAAAAxgHbBpgAEQB2IgAAAADGAe8GmAASAHgiAAAAAIYYMwWxABMAhyIAAAAAhhgzBbEAFACW
IgAAAACDGDMFBgAVAJ4iAAAAAJMI/wS3ABUAyiIAAAAAkwjdALwAFQDRIgAAAACTCOkAwQAVANki
AAAAAJYIYwbHABYA4CIAAAAAhhgzBQYAFgDoIgAAAACRGDkFzAAWAAAAAQAKBwAAAQD4BAAAAgAP
BgAAAwDMBAAAAQDwAgAAAQDwAgAAAQDwAgAAAQDwAgAAAQDwAgAAAQDwAgAAAQDwAgAAAQDwAgAA
AQA0AAAAAgCbAAAAAwD4BAAABADMBAAAAQD4BAAAAQAKBwAAAQCTBgAAAQCTBgAAAQDwAgkAMwUB
ABEAMwUGABkAMwUKACkAMwUQADEAMwUQADkAMwUQAEEAMwUQAEkAMwUQAFEAMwUQAFkAMwUQAGEA
MwUQAGkAMwUGAJkAMwUGALkAMwUVAMkAMwUGAIkA2QIGAIkA5AIGANEAHQEfAHEAMwUmAHEA+AQw
AHEADwY0AHkAEAM4AHEACAQ9AHEA+QNDAHEAAAQBANkAMwUQAHEABgdIAHEAVwZIAIkAMwUGAOEA
PQZMAIkAIwZTAJEAMwUGAPEAiQBZAPEADgdgAKEAMwVmAMEAMwUGAC4ACwDnAC4AEwDwAC4AGwAP
AS4AIwAYAS4AKwBBAS4AMwBBAS4AOwBBAS4AQwAYAS4ASwBHAS4AUwBBAS4AWwBeAUMAYwCmAeEA
ewCmAeMAawCmASkBcwAPAUkBcwAPARsAAwABAAcACQAIAAsAAAAnBdAAAADtA9QAAABqANAAAAB0
A9QAAAA2BNAAAADBA9QAAADYANAAAACcA9QAAAADBdgAAAD9AN0AAABnBuIAAgAGAAMAAQAHAAMA
AgAIAAUAAQAJAAUAAgAKAAcAAQALAAcAAgAMAAkAAQANAAkAAgAOAAsAAQAPAAsAAgAQAA0AAQAR
AA0AAgASAA8AAQATAA8AAgAUABEAAQAVABEAAgAfABMAAgAgABUAAQAhABUAAgAiABcABIAAAAEA
AACoGBIJAAAAAAAABwAAAAQAAAAAAAAAAAAAAG4APAAAAAAADAAAAAAAAAAAAAAAdwCdBgAAAAAM
AAAAAAAAAAAAAAB3ALoGAAAAAAQAAAAAAAAAAAAAAG4AEQQAAAAAAAAAAAEAAACEBQAAAAAAAABJ
bnQzMgBTQ183YzlmZGNmZjE2Njc0NTRiYWYwNmQxMTllMzQyZTllNAA8TW9kdWxlPgBJbnB1dElE
AG1zY29ybGliAGRlZmF1bHRJbnN0YW5jZQBnZXRfcmVzcG9uc2Vjb2RlAHNldF9yZXNwb25zZWNv
ZGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X3R5cGUAc2V0X3R5cGUAZ2V0X0N1bHR1
cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAFRy
eVBhcnNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERl
YnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93
c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0
dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9u
c0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRy
aWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21w
YW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9z
dEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBHZXRTdHJpbmcAU3lzdGVt
LkNvbXBvbmVudE1vZGVsAFNDXzdjOWZkY2ZmMTY2NzQ1NGJhZjA2ZDExOWUzNDJlOWU0LmRsbABn
ZXRfcmVzcG9uc2Vjb2RlX0lzTnVsbABzZXRfcmVzcG9uc2Vjb2RlX0lzTnVsbABnZXRfdHlwZV9J
c051bGwAc2V0X3R5cGVfSXNOdWxsAGdldF90aW1ldGFrZW5fSXNOdWxsAHNldF90aW1ldGFrZW5f
SXNOdWxsAGdldF91c2VyYnJvd3Nlcl9Jc051bGwAc2V0X3VzZXJicm93c2VyX0lzTnVsbABTZXRO
dWxsAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBnZXRfdGltZXRha2VuAHNldF90aW1ldGFr
ZW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBT
eXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlz
b24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAASW5wdXQwQnVmZmVyAFBpcGVs
aW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF91c2VyYnJvd3Nl
cgBzZXRfdXNlcmJyb3dzZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfN2M5ZmRjZmYxNjY3
NDU0YmFmMDZkMTE5ZTM0MmU5ZTQuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVn
Z2luZ01vZGVzAFNDXzdjOWZkY2ZmMTY2NzQ1NGJhZjA2ZDExOWUzNDJlOWU0LlByb3BlcnRpZXMA
VmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBF
cXVhbHMAQ29ubmVjdGlvbnMAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21w
b25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVy
LlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNz
SW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQAAABtJAG4A
ZgBvAHIAbQBhAHQAaQBvAG4AYQBsAAARUwB1AGMAZQBzAHMAZQBzAAAZUgBlAGQAaQByAGUAYwB0
AGkAbwBuAHMAABtDAGwAaQBlAG4AdAAgAEUAcgByAG8AcgBzAAAbUwBlAHIAdgBlAHIAIABFAHIA
cgBvAHIAcwAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAA
YgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBs
AHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4A
cAB1AHQAIAAwAABxUwBDAF8ANwBjADkAZgBkAGMAZgBmADEANgA2ADcANAA1ADQAYgBhAGYAMAA2
AGQAMQAxADkAZQAzADQAMgBlADkAZQA0AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAA5Eq37NtgCTaWQDt//nLx8AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZAwcB
CAYAAgIOEAgJIAMBEj0dCBJBAwYSPQMGHQgEIAEOCAUgAgEIHAQgAQIIAyAAAgYgAgIOEXUFIAEd
CAgGAAESeRF9BSAAEoCBByACAQ4SgIEIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEkUDBhJR
AwYSVQMGEiAFIAEBEgwDIAAOBCABAQIJIAQBCA4SPRJBBSABARJFBAAAElEEAAASVQUAAQESVQQA
ABIgAwAAAQMoAA4DKAACBAgAElEECAASVQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhj
ZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ183YzlmZGNmZjE2Njc0NTRiYWYwNmQxMTllMzQy
ZTllNAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE3AABHAQAaLk5FVEZyYW1ld29yayxWZXJz
aW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQEAQAAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAAXDUAAAAAAAAAAAAAdjUAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGg1AAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABAEAAAAAAAAAAAAABAENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQASCagYAAABABIJqBg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARwAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABMAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADcAYwA5AGYAZABjAGYAZgAxADYANgA3ADQANQA0AGIAYQBmADAANgBkADEAMQA5AGUA
MwA0ADIAZQA5AGUANAAAADwADgABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2
ADMAMQAyAC4AMgAzADIAMgAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
NwBjADkAZgBkAGMAZgBmADEANgA2ADcANAA1ADQAYgBhAGYAMAA2AGQAMQAxADkAZQAzADQAMgBl
ADkAZQA0AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADcAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABl
AG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUA
AABTAEMAXwA3AGMAOQBmAGQAYwBmAGYAMQA2ADYANwA0ADUANABiAGEAZgAwADYAZAAxADEAOQBl
ADMANAAyAGUAOQBlADQALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBDAF8ANwBjADkAZgBkAGMAZgBmADEANgA2ADcANAA1ADQAYgBhAGYAMAA2AGQAMQAxADkAZQAz
ADQAMgBlADkAZQA0AAAAQAAOAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA2ADMAMQAyAC4AMgAzADIAMgAAAEQADgABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADYAMwAxADIALgAyADMAMgAyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACINQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_7c9fdcff1667454baf06d119e342e9e4</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">c0631837e67acf41fc539a0e992374ae</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\long log file load\divide codes.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\divide codes.Inputs[Input 0].Columns[user_browser]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="user_browser"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[user_browser]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\divide codes.Inputs[Input 0].Columns[response_code]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="response_code"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Outputs[Derived Column Output].Columns[response_code]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\divide codes.Inputs[Input 0].Columns[time_taken]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="time_taken"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Outputs[Derived Column Output].Columns[time_taken]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\divide codes.Inputs[Input 0].Columns[type]"
                          cachedDataType="wstr"
                          cachedLength="7"
                          cachedName="type"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Outputs[Derived Column Output].Columns[type]"
                          usageType="readWrite" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\divide codes.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\divide codes.Inputs[Input 0]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\long log file load\divide date and time"
                  componentClassID="Microsoft.Multicast"
                  contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                  name="divide date and time">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\long log file load\divide date and time.Inputs[Multicast Input 1]"
                      name="Multicast Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\divide date and time.Outputs[Multicast Output 5]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 5"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\divide date and time.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\divide date and time.Outputs[Multicast Output 1]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 1"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\divide date and time.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\divide date and time.Outputs[Multicast Output 8]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 8"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\divide date and time.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\divide date and time.Outputs[Multicast Output 2]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 2"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\divide date and time.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\divide date and time.Outputs[Multicast Output 9]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 9"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\divide date and time.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\divide date and time.Outputs[Multicast Output 3]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 3"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\divide date and time.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\divide date and time.Outputs[Multicast Output 4]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 4"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\divide date and time.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\divide date and time.Outputs[Multicast Output 6]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 6"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\divide date and time.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\long log file load\file dimension"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="file dimension"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[file_dimension]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      connectionManagerRefId="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Inputs[OLE DB Destination Input].Columns[filename]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="600"
                          cachedName="filename"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Inputs[OLE DB Destination Input].ExternalColumns[filename]"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[filename]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Inputs[OLE DB Destination Input].Columns[file_extension]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="600"
                          cachedName="file_extension"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Inputs[OLE DB Destination Input].ExternalColumns[file_extension]"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[file_extension]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Inputs[OLE DB Destination Input].Columns[path_to_file]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="600"
                          cachedName="path_to_file"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Inputs[OLE DB Destination Input].ExternalColumns[path_to_file]"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[path_to_file]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Inputs[OLE DB Destination Input].Columns[is_page]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="600"
                          cachedName="is_page"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Inputs[OLE DB Destination Input].ExternalColumns[is_page]"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[is_page]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Inputs[OLE DB Destination Input].Columns[type_of_file]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="600"
                          cachedName="type_of_file"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Inputs[OLE DB Destination Input].ExternalColumns[type_of_file]"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[type_of_file]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Inputs[OLE DB Destination Input].ExternalColumns[filename]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="filename" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Inputs[OLE DB Destination Input].ExternalColumns[file_extension]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="file_extension" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Inputs[OLE DB Destination Input].ExternalColumns[path_to_file]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="path_to_file" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Inputs[OLE DB Destination Input].ExternalColumns[is_page]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="is_page" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Inputs[OLE DB Destination Input].ExternalColumns[type_of_file]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="type_of_file" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="file dimension transformations 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Inputs[Derived Column Input].Columns[request_uri]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="request_uri"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[request_uri]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[filename]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="600"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[filename]"
                          name="filename"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[TOKEN](#{Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[request_uri]},"/",[TOKENCOUNT](#{Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[request_uri]},"/"))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">TOKEN(request_uri,"/",TOKENCOUNT(request_uri,"/"))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[file_extension]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="600"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[file_extension]"
                          name="file_extension"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[TOKEN](#{Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[request_uri]},".",[TOKENCOUNT](#{Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[request_uri]},"."))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">TOKEN(request_uri,".",TOKENCOUNT(request_uri,"."))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[type_of_file]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="600"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[type_of_file]"
                          name="type_of_file"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"1"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"1"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[is_page]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="600"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[is_page]"
                          name="is_page"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"1"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"1"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[path_to_file]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="600"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[path_to_file]"
                          name="path_to_file"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"1"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"1"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\long log file load\file-conditionals"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="file-conditionals"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="33">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String city
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["city"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["city"].Value = value;
        }
    }

    public String country
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["country"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["country"].Value = value;
        }
    }

    public String county
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["county"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["county"].Value = value;
        }
    }

    public String filepath
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["file_path"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["file_path"].Value = value;
        }
    }

    public String filetype
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["file_type"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["file_type"].Value = value;
        }
    }

    public String ispage
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["is_page"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["is_page"].Value = value;
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.IO;
using System.Collections.Generic;
using Microsoft.SqlServer.Dts.Runtime;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

   
    
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */

        
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        string uri_row = Row.requesturi;
        string fileName = Row.filename;
        string fileExt = Row.fileextension;
        string file_type = Row.typeoffile;
        string is_page = Row.ispage;
        string file_path = Row.pathtofile;

        string[] input = { uri_row, fileName, fileExt, file_type, is_page, file_path };
        // uri, fileName, filetype, fileExt, ispage, filepath
        string[] result = ProcessFileTypes(input);
        Row.filename = result[1];
        Row.typeoffile = result[2];
        Row.fileextension = result[3];
        Row.ispage = result[4];
        Row.pathtofile = result[5];
       


    }




    private static IDictionary<string, string> _mappings = new Dictionary<string, string>(StringComparer.InvariantCultureIgnoreCase) {

        #region Big freaking list of mime types
        // combination of values from Windows 7 Registry and 
        // from C:\Windows\System32\inetsrv\config\applicationHost.config
        // some added, including .7z and .dat
        {".323", "text/h323"},
        {".3g2", "video/3gpp2"},
        {".3gp", "video/3gpp"},
        {".3gp2", "video/3gpp2"},
        {".3gpp", "video/3gpp"},
        {".7z", "application/x-7z-compressed"},
        {".aa", "audio/audible"},
        {".AAC", "audio/aac"},
        {".aaf", "application/octet-stream"},
        {".aax", "audio/vnd.audible.aax"},
        {".ac3", "audio/ac3"},
        {".aca", "application/octet-stream"},
        {".accda", "application/msaccess.addin"},
        {".accdb", "application/msaccess"},
        {".accdc", "application/msaccess.cab"},
        {".accde", "application/msaccess"},
        {".accdr", "application/msaccess.runtime"},
        {".accdt", "application/msaccess"},
        {".accdw", "application/msaccess.webapplication"},
        {".accft", "application/msaccess.ftemplate"},
        {".acx", "application/internet-property-stream"},
        {".AddIn", "text/xml"},
        {".ade", "application/msaccess"},
        {".adobebridge", "application/x-bridge-url"},
        {".adp", "application/msaccess"},
        {".ADT", "audio/vnd.dlna.adts"},
        {".ADTS", "audio/aac"},
        {".afm", "application/octet-stream"},
        {".ai", "application/postscript"},
        {".aif", "audio/x-aiff"},
        {".aifc", "audio/aiff"},
        {".aiff", "audio/aiff"},
        {".air", "application/vnd.adobe.air-application-installer-package+zip"},
        {".amc", "application/x-mpeg"},
        {".application", "application/x-ms-application"},
        {".art", "image/x-jg"},
        {".asa", "application/xml"},
        {".asax", "application/xml"},
        {".ascx", "application/xml"},
        {".asd", "application/octet-stream"},
        {".asf", "video/x-ms-asf"},
        {".ashx", "application/xml"},
        {".asi", "application/octet-stream"},
        {".asm", "text/plain"},
        {".asmx", "application/xml"},
        {".aspx", "application/xml"},
        {".asr", "video/x-ms-asf"},
        {".asx", "video/x-ms-asf"},
        {".atom", "application/atom+xml"},
        {".au", "audio/basic"},
        {".avi", "video/x-msvideo"},
        {".axs", "application/olescript"},
        {".bas", "text/plain"},
        {".bcpio", "application/x-bcpio"},
        {".bin", "application/octet-stream"},
        {".bmp", "image/bmp"},
        {".c", "text/plain"},
        {".cab", "application/octet-stream"},
        {".caf", "audio/x-caf"},
        {".calx", "application/vnd.ms-office.calx"},
        {".cat", "application/vnd.ms-pki.seccat"},
        {".cc", "text/plain"},
        {".cd", "text/plain"},
        {".cdda", "audio/aiff"},
        {".cdf", "application/x-cdf"},
        {".cer", "application/x-x509-ca-cert"},
        {".chm", "application/octet-stream"},
        {".class", "application/x-java-applet"},
        {".clp", "application/x-msclip"},
        {".cmx", "image/x-cmx"},
        {".cnf", "text/plain"},
        {".cod", "image/cis-cod"},
        {".config", "application/xml"},
        {".contact", "text/x-ms-contact"},
        {".coverage", "application/xml"},
        {".cpio", "application/x-cpio"},
        {".cpp", "text/plain"},
        {".crd", "application/x-mscardfile"},
        {".crl", "application/pkix-crl"},
        {".crt", "application/x-x509-ca-cert"},
        {".cs", "text/plain"},
        {".csdproj", "text/plain"},
        {".csh", "application/x-csh"},
        {".csproj", "text/plain"},
        {".css", "text/css"},
        {".csv", "text/csv"},
        {".cur", "application/octet-stream"},
        {".cxx", "text/plain"},
        {".dat", "application/octet-stream"},
        {".datasource", "application/xml"},
        {".dbproj", "text/plain"},
        {".dcr", "application/x-director"},
        {".def", "text/plain"},
        {".deploy", "application/octet-stream"},
        {".der", "application/x-x509-ca-cert"},
        {".dgml", "application/xml"},
        {".dib", "image/bmp"},
        {".dif", "video/x-dv"},
        {".dir", "application/x-director"},
        {".disco", "text/xml"},
        {".dll", "application/x-msdownload"},
        {".dll.config", "text/xml"},
        {".dlm", "text/dlm"},
        {".doc", "application/msword"},
        {".docm", "application/vnd.ms-word.document.macroEnabled.12"},
        {".docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"},
        {".dot", "application/msword"},
        {".dotm", "application/vnd.ms-word.template.macroEnabled.12"},
        {".dotx", "application/vnd.openxmlformats-officedocument.wordprocessingml.template"},
        {".dsp", "application/octet-stream"},
        {".dsw", "text/plain"},
        {".dtd", "text/xml"},
        {".dtsConfig", "text/xml"},
        {".dv", "video/x-dv"},
        {".dvi", "application/x-dvi"},
        {".dwf", "drawing/x-dwf"},
        {".dwp", "application/octet-stream"},
        {".dxr", "application/x-director"},
        {".eml", "message/rfc822"},
        {".emz", "application/octet-stream"},
        {".eot", "application/octet-stream"},
        {".eps", "application/postscript"},
        {".etl", "application/etl"},
        {".etx", "text/x-setext"},
        {".evy", "application/envoy"},
        {".exe", "application/octet-stream"},
        {".exe.config", "text/xml"},
        {".fdf", "application/vnd.fdf"},
        {".fif", "application/fractals"},
        {".filters", "Application/xml"},
        {".fla", "application/octet-stream"},
        {".flr", "x-world/x-vrml"},
        {".flv", "video/x-flv"},
        {".fsscript", "application/fsharp-script"},
        {".fsx", "application/fsharp-script"},
        {".generictest", "application/xml"},
        {".gif", "image/gif"},
        {".group", "text/x-ms-group"},
        {".gsm", "audio/x-gsm"},
        {".gtar", "application/x-gtar"},
        {".gz", "application/x-gzip"},
        {".h", "text/plain"},
        {".hdf", "application/x-hdf"},
        {".hdml", "text/x-hdml"},
        {".hhc", "application/x-oleobject"},
        {".hhk", "application/octet-stream"},
        {".hhp", "application/octet-stream"},
        {".hlp", "application/winhlp"},
        {".hpp", "text/plain"},
        {".hqx", "application/mac-binhex40"},
        {".hta", "application/hta"},
        {".htc", "text/x-component"},
        {".htm", "text/html"},
        {".html", "text/html"},
        {".htt", "text/webviewhtml"},
        {".hxa", "application/xml"},
        {".hxc", "application/xml"},
        {".hxd", "application/octet-stream"},
        {".hxe", "application/xml"},
        {".hxf", "application/xml"},
        {".hxh", "application/octet-stream"},
        {".hxi", "application/octet-stream"},
        {".hxk", "application/xml"},
        {".hxq", "application/octet-stream"},
        {".hxr", "application/octet-stream"},
        {".hxs", "application/octet-stream"},
        {".hxt", "text/html"},
        {".hxv", "application/xml"},
        {".hxw", "application/octet-stream"},
        {".hxx", "text/plain"},
        {".i", "text/plain"},
        {".ico", "image/x-icon"},
        {".ics", "application/octet-stream"},
        {".idl", "text/plain"},
        {".ief", "image/ief"},
        {".iii", "application/x-iphone"},
        {".inc", "text/plain"},
        {".inf", "application/octet-stream"},
        {".inl", "text/plain"},
        {".ins", "application/x-internet-signup"},
        {".ipa", "application/x-itunes-ipa"},
        {".ipg", "application/x-itunes-ipg"},
        {".ipproj", "text/plain"},
        {".ipsw", "application/x-itunes-ipsw"},
        {".iqy", "text/x-ms-iqy"},
        {".isp", "application/x-internet-signup"},
        {".ite", "application/x-itunes-ite"},
        {".itlp", "application/x-itunes-itlp"},
        {".itms", "application/x-itunes-itms"},
        {".itpc", "application/x-itunes-itpc"},
        {".IVF", "video/x-ivf"},
        {".jar", "application/java-archive"},
        {".java", "application/octet-stream"},
        {".jck", "application/liquidmotion"},
        {".jcz", "application/liquidmotion"},
        {".jfif", "image/pjpeg"},
        {".jnlp", "application/x-java-jnlp-file"},
        {".jpb", "application/octet-stream"},
        {".jpe", "image/jpeg"},
        {".jpeg", "image/jpeg"},
        {".jpg", "image/jpeg"},
        {".js", "application/x-javascript"},
        {".json", "application/json"},
        {".jsx", "text/jscript"},
        {".jsxbin", "text/plain"},
        {".latex", "application/x-latex"},
        {".library-ms", "application/windows-library+xml"},
        {".lit", "application/x-ms-reader"},
        {".loadtest", "application/xml"},
        {".lpk", "application/octet-stream"},
        {".lsf", "video/x-la-asf"},
        {".lst", "text/plain"},
        {".lsx", "video/x-la-asf"},
        {".lzh", "application/octet-stream"},
        {".m13", "application/x-msmediaview"},
        {".m14", "application/x-msmediaview"},
        {".m1v", "video/mpeg"},
        {".m2t", "video/vnd.dlna.mpeg-tts"},
        {".m2ts", "video/vnd.dlna.mpeg-tts"},
        {".m2v", "video/mpeg"},
        {".m3u", "audio/x-mpegurl"},
        {".m3u8", "audio/x-mpegurl"},
        {".m4a", "audio/m4a"},
        {".m4b", "audio/m4b"},
        {".m4p", "audio/m4p"},
        {".m4r", "audio/x-m4r"},
        {".m4v", "video/x-m4v"},
        {".mac", "image/x-macpaint"},
        {".mak", "text/plain"},
        {".man", "application/x-troff-man"},
        {".manifest", "application/x-ms-manifest"},
        {".map", "text/plain"},
        {".master", "application/xml"},
        {".mda", "application/msaccess"},
        {".mdb", "application/x-msaccess"},
        {".mde", "application/msaccess"},
        {".mdp", "application/octet-stream"},
        {".me", "application/x-troff-me"},
        {".mfp", "application/x-shockwave-flash"},
        {".mht", "message/rfc822"},
        {".mhtml", "message/rfc822"},
        {".mid", "audio/mid"},
        {".midi", "audio/mid"},
        {".mix", "application/octet-stream"},
        {".mk", "text/plain"},
        {".mmf", "application/x-smaf"},
        {".mno", "text/xml"},
        {".mny", "application/x-msmoney"},
        {".mod", "video/mpeg"},
        {".mov", "video/quicktime"},
        {".movie", "video/x-sgi-movie"},
        {".mp2", "video/mpeg"},
        {".mp2v", "video/mpeg"},
        {".mp3", "audio/mpeg"},
        {".mp4", "video/mp4"},
        {".mp4v", "video/mp4"},
        {".mpa", "video/mpeg"},
        {".mpe", "video/mpeg"},
        {".mpeg", "video/mpeg"},
        {".mpf", "application/vnd.ms-mediapackage"},
        {".mpg", "video/mpeg"},
        {".mpp", "application/vnd.ms-project"},
        {".mpv2", "video/mpeg"},
        {".mqv", "video/quicktime"},
        {".ms", "application/x-troff-ms"},
        {".msi", "application/octet-stream"},
        {".mso", "application/octet-stream"},
        {".mts", "video/vnd.dlna.mpeg-tts"},
        {".mtx", "application/xml"},
        {".mvb", "application/x-msmediaview"},
        {".mvc", "application/x-miva-compiled"},
        {".mxp", "application/x-mmxp"},
        {".nc", "application/x-netcdf"},
        {".nsc", "video/x-ms-asf"},
        {".nws", "message/rfc822"},
        {".ocx", "application/octet-stream"},
        {".oda", "application/oda"},
        {".odc", "text/x-ms-odc"},
        {".odh", "text/plain"},
        {".odl", "text/plain"},
        {".odp", "application/vnd.oasis.opendocument.presentation"},
        {".ods", "application/oleobject"},
        {".odt", "application/vnd.oasis.opendocument.text"},
        {".one", "application/onenote"},
        {".onea", "application/onenote"},
        {".onepkg", "application/onenote"},
        {".onetmp", "application/onenote"},
        {".onetoc", "application/onenote"},
        {".onetoc2", "application/onenote"},
        {".orderedtest", "application/xml"},
        {".osdx", "application/opensearchdescription+xml"},
        {".p10", "application/pkcs10"},
        {".p12", "application/x-pkcs12"},
        {".p7b", "application/x-pkcs7-certificates"},
        {".p7c", "application/pkcs7-mime"},
        {".p7m", "application/pkcs7-mime"},
        {".p7r", "application/x-pkcs7-certreqresp"},
        {".p7s", "application/pkcs7-signature"},
        {".pbm", "image/x-portable-bitmap"},
        {".pcast", "application/x-podcast"},
        {".pct", "image/pict"},
        {".pcx", "application/octet-stream"},
        {".pcz", "application/octet-stream"},
        {".pdf", "application/pdf"},
        {".pfb", "application/octet-stream"},
        {".pfm", "application/octet-stream"},
        {".pfx", "application/x-pkcs12"},
        {".pgm", "image/x-portable-graymap"},
        {".pic", "image/pict"},
        {".pict", "image/pict"},
        {".pkgdef", "text/plain"},
        {".pkgundef", "text/plain"},
        {".pko", "application/vnd.ms-pki.pko"},
        {".pls", "audio/scpls"},
        {".pma", "application/x-perfmon"},
        {".pmc", "application/x-perfmon"},
        {".php", "text/php"},
        {".pml", "application/x-perfmon"},
        {".pmr", "application/x-perfmon"},
        {".pmw", "application/x-perfmon"},
        {".png", "image/png"},
        {".pnm", "image/x-portable-anymap"},
        {".pnt", "image/x-macpaint"},
        {".pntg", "image/x-macpaint"},
        {".pnz", "image/png"},
        {".pot", "application/vnd.ms-powerpoint"},
        {".potm", "application/vnd.ms-powerpoint.template.macroEnabled.12"},
        {".potx", "application/vnd.openxmlformats-officedocument.presentationml.template"},
        {".ppa", "application/vnd.ms-powerpoint"},
        {".ppam", "application/vnd.ms-powerpoint.addin.macroEnabled.12"},
        {".ppm", "image/x-portable-pixmap"},
        {".pps", "application/vnd.ms-powerpoint"},
        {".ppsm", "application/vnd.ms-powerpoint.slideshow.macroEnabled.12"},
        {".ppsx", "application/vnd.openxmlformats-officedocument.presentationml.slideshow"},
        {".ppt", "application/vnd.ms-powerpoint"},
        {".pptm", "application/vnd.ms-powerpoint.presentation.macroEnabled.12"},
        {".pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation"},
        {".prf", "application/pics-rules"},
        {".prm", "application/octet-stream"},
        {".prx", "application/octet-stream"},
        {".ps", "application/postscript"},
        {".psc1", "application/PowerShell"},
        {".psd", "application/octet-stream"},
        {".psess", "application/xml"},
        {".psm", "application/octet-stream"},
        {".psp", "application/octet-stream"},
        {".pub", "application/x-mspublisher"},
        {".pwz", "application/vnd.ms-powerpoint"},
        {".qht", "text/x-html-insertion"},
        {".qhtm", "text/x-html-insertion"},
        {".qt", "video/quicktime"},
        {".qti", "image/x-quicktime"},
        {".qtif", "image/x-quicktime"},
        {".qtl", "application/x-quicktimeplayer"},
        {".qxd", "application/octet-stream"},
        {".ra", "audio/x-pn-realaudio"},
        {".ram", "audio/x-pn-realaudio"},
        {".rar", "application/octet-stream"},
        {".ras", "image/x-cmu-raster"},
        {".rat", "application/rat-file"},
        {".rc", "text/plain"},
        {".rc2", "text/plain"},
        {".rct", "text/plain"},
        {".rdlc", "application/xml"},
        {".resx", "application/xml"},
        {".rf", "image/vnd.rn-realflash"},
        {".rgb", "image/x-rgb"},
        {".rgs", "text/plain"},
        {".rm", "application/vnd.rn-realmedia"},
        {".rmi", "audio/mid"},
        {".rmp", "application/vnd.rn-rn_music_package"},
        {".roff", "application/x-troff"},
        {".rpm", "audio/x-pn-realaudio-plugin"},
        {".rqy", "text/x-ms-rqy"},
        {".rtf", "application/rtf"},
        {".rtx", "text/richtext"},
        {".ruleset", "application/xml"},
        {".s", "text/plain"},
        {".safariextz", "application/x-safari-safariextz"},
        {".scd", "application/x-msschedule"},
        {".sct", "text/scriptlet"},
        {".sd2", "audio/x-sd2"},
        {".sdp", "application/sdp"},
        {".sea", "application/octet-stream"},
        {".searchConnector-ms", "application/windows-search-connector+xml"},
        {".setpay", "application/set-payment-initiation"},
        {".setreg", "application/set-registration-initiation"},
        {".settings", "application/xml"},
        {".sgimb", "application/x-sgimb"},
        {".sgml", "text/sgml"},
        {".sh", "application/x-sh"},
        {".shar", "application/x-shar"},
        {".shtml", "text/html"},
        {".sit", "application/x-stuffit"},
        {".sitemap", "application/xml"},
        {".skin", "application/xml"},
        {".sldm", "application/vnd.ms-powerpoint.slide.macroEnabled.12"},
        {".sldx", "application/vnd.openxmlformats-officedocument.presentationml.slide"},
        {".slk", "application/vnd.ms-excel"},
        {".sln", "text/plain"},
        {".slupkg-ms", "application/x-ms-license"},
        {".smd", "audio/x-smd"},
        {".smi", "application/octet-stream"},
        {".smx", "audio/x-smd"},
        {".smz", "audio/x-smd"},
        {".snd", "audio/basic"},
        {".snippet", "application/xml"},
        {".snp", "application/octet-stream"},
        {".sol", "text/plain"},
        {".sor", "text/plain"},
        {".spc", "application/x-pkcs7-certificates"},
        {".spl", "application/futuresplash"},
        {".src", "application/x-wais-source"},
        {".srf", "text/plain"},
        {".SSISDeploymentManifest", "text/xml"},
        {".ssm", "application/streamingmedia"},
        {".sst", "application/vnd.ms-pki.certstore"},
        {".stl", "application/vnd.ms-pki.stl"},
        {".sv4cpio", "application/x-sv4cpio"},
        {".sv4crc", "application/x-sv4crc"},
        {".svc", "application/xml"},
        {".swf", "application/x-shockwave-flash"},
        {".t", "application/x-troff"},
        {".tar", "application/x-tar"},
        {".tcl", "application/x-tcl"},
        {".testrunconfig", "application/xml"},
        {".testsettings", "application/xml"},
        {".tex", "application/x-tex"},
        {".texi", "application/x-texinfo"},
        {".texinfo", "application/x-texinfo"},
        {".tgz", "application/x-compressed"},
        {".thmx", "application/vnd.ms-officetheme"},
        {".thn", "application/octet-stream"},
        {".tif", "image/tiff"},
        {".tiff", "image/tiff"},
        {".tlh", "text/plain"},
        {".tli", "text/plain"},
        {".toc", "application/octet-stream"},
        {".tr", "application/x-troff"},
        {".trm", "application/x-msterminal"},
        {".trx", "application/xml"},
        {".ts", "video/vnd.dlna.mpeg-tts"},
        {".tsv", "text/tab-separated-values"},
        {".ttf", "application/octet-stream"},
        {".tts", "video/vnd.dlna.mpeg-tts"},
        {".txt", "text/plain"},
        {".u32", "application/octet-stream"},
        {".uls", "text/iuls"},
        {".user", "text/plain"},
        {".ustar", "application/x-ustar"},
        {".vb", "text/plain"},
        {".vbdproj", "text/plain"},
        {".vbk", "video/mpeg"},
        {".vbproj", "text/plain"},
        {".vbs", "text/vbscript"},
        {".vcf", "text/x-vcard"},
        {".vcproj", "Application/xml"},
        {".vcs", "text/plain"},
        {".vcxproj", "Application/xml"},
        {".vddproj", "text/plain"},
        {".vdp", "text/plain"},
        {".vdproj", "text/plain"},
        {".vdx", "application/vnd.ms-visio.viewer"},
        {".vml", "text/xml"},
        {".vscontent", "application/xml"},
        {".vsct", "text/xml"},
        {".vsd", "application/vnd.visio"},
        {".vsi", "application/ms-vsi"},
        {".vsix", "application/vsix"},
        {".vsixlangpack", "text/xml"},
        {".vsixmanifest", "text/xml"},
        {".vsmdi", "application/xml"},
        {".vspscc", "text/plain"},
        {".vss", "application/vnd.visio"},
        {".vsscc", "text/plain"},
        {".vssettings", "text/xml"},
        {".vssscc", "text/plain"},
        {".vst", "application/vnd.visio"},
        {".vstemplate", "text/xml"},
        {".vsto", "application/x-ms-vsto"},
        {".vsw", "application/vnd.visio"},
        {".vsx", "application/vnd.visio"},
        {".vtx", "application/vnd.visio"},
        {".wav", "audio/wav"},
        {".wave", "audio/wav"},
        {".wax", "audio/x-ms-wax"},
        {".wbk", "application/msword"},
        {".wbmp", "image/vnd.wap.wbmp"},
        {".wcm", "application/vnd.ms-works"},
        {".wdb", "application/vnd.ms-works"},
        {".wdp", "image/vnd.ms-photo"},
        {".webarchive", "application/x-safari-webarchive"},
        {".webtest", "application/xml"},
        {".wiq", "application/xml"},
        {".wiz", "application/msword"},
        {".wks", "application/vnd.ms-works"},
        {".WLMP", "application/wlmoviemaker"},
        {".wlpginstall", "application/x-wlpg-detect"},
        {".wlpginstall3", "application/x-wlpg3-detect"},
        {".wm", "video/x-ms-wm"},
        {".wma", "audio/x-ms-wma"},
        {".wmd", "application/x-ms-wmd"},
        {".wmf", "application/x-msmetafile"},
        {".wml", "text/vnd.wap.wml"},
        {".wmlc", "application/vnd.wap.wmlc"},
        {".wmls", "text/vnd.wap.wmlscript"},
        {".wmlsc", "application/vnd.wap.wmlscriptc"},
        {".wmp", "video/x-ms-wmp"},
        {".wmv", "video/x-ms-wmv"},
        {".wmx", "video/x-ms-wmx"},
        {".wmz", "application/x-ms-wmz"},
        {".wpl", "application/vnd.ms-wpl"},
        {".wps", "application/vnd.ms-works"},
        {".wri", "application/x-mswrite"},
        {".wrl", "x-world/x-vrml"},
        {".wrz", "x-world/x-vrml"},
        {".wsc", "text/scriptlet"},
        {".wsdl", "text/xml"},
        {".wvx", "video/x-ms-wvx"},
        {".x", "application/directx"},
        {".xaf", "x-world/x-vrml"},
        {".xaml", "application/xaml+xml"},
        {".xap", "application/x-silverlight-app"},
        {".xbap", "application/x-ms-xbap"},
        {".xbm", "image/x-xbitmap"},
        {".xdr", "text/plain"},
        {".xht", "application/xhtml+xml"},
        {".xhtml", "application/xhtml+xml"},
        {".xla", "application/vnd.ms-excel"},
        {".xlam", "application/vnd.ms-excel.addin.macroEnabled.12"},
        {".xlc", "application/vnd.ms-excel"},
        {".xld", "application/vnd.ms-excel"},
        {".xlk", "application/vnd.ms-excel"},
        {".xll", "application/vnd.ms-excel"},
        {".xlm", "application/vnd.ms-excel"},
        {".xls", "application/vnd.ms-excel"},
        {".xlsb", "application/vnd.ms-excel.sheet.binary.macroEnabled.12"},
        {".xlsm", "application/vnd.ms-excel.sheet.macroEnabled.12"},
        {".xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"},
        {".xlt", "application/vnd.ms-excel"},
        {".xltm", "application/vnd.ms-excel.template.macroEnabled.12"},
        {".xltx", "application/vnd.openxmlformats-officedocument.spreadsheetml.template"},
        {".xlw", "application/vnd.ms-excel"},
        {".xml", "text/xml"},
        {".xmta", "application/xml"},
        {".xof", "x-world/x-vrml"},
        {".XOML", "text/plain"},
        {".xpm", "image/x-xpixmap"},
        {".xps", "application/vnd.ms-xpsdocument"},
        {".xrm-ms", "text/xml"},
        {".xsc", "application/xml"},
        {".xsd", "text/xml"},
        {".xsf", "text/xml"},
        {".xsl", "text/xml"},
        {".xslt", "text/xml"},
        {".xsn", "application/octet-stream"},
        {".xss", "application/xml"},
        {".xtp", "application/octet-stream"},
        {".xwd", "image/x-xwindowdump"},
        {".z", "application/x-compress"},
        {".zip", "application/x-zip-compressed"},
        #endregion

        };

    public static string GetMimeType(string extension)
    {
        if (extension == null)
        {
            throw new ArgumentNullException("extension");
        }

        if (!extension.StartsWith("."))
        {
            extension = "." + extension;
        }

        string mime;

        return _mappings.TryGetValue(extension, out mime) ? mime : "application/octet-stream";
    }


    public string[] ProcessFileTypes (string[] input)
    {

        //string uri_row, string fileName, string fileExt, string filetype, string ispage, string filepath
        string uri = input[0];
        string fileExt = input[2];
        string fileName = input[1];
        string filetype = input[3];
        string ispage = input[4];
        string filepath = input[5];


        //get type of file it is

        //check if file has an extension or it is not a file
        //if position of the dot in the end -> most likely file?

        if (fileName == "")
        {
            //root of the site
            filetype = "not a file";
            fileExt = "";
            ispage = "1";
            filepath = uri;

        } else if (fileName.IndexOf(".") == -1) { 
            //this is not a file, but path 
            if (uri.ToLower().IndexOf("cache") != -1)
            {
                //this is cache
                filetype = "cache";
                fileExt = "";
                ispage = "0";
                filepath = uri;
            } else
            {
                filetype = "not a file";
                fileExt = "";
                ispage = "0";
                filepath = uri;
            }
        

        } else {

       
        fileExt = "." + fileExt;


        if (fileExt.Length > 0)
        {
            //this is a file
            if (fileExt == ".php")
            {
                filetype = "text/php";
            }
            else
            {


                string mime = GetMimeType(fileExt);
                filetype = mime;
               
            }




            //is it page - hacky way :(

            if (fileExt == ".php" || fileExt == ".html" || fileExt == ".aspx" || fileExt == ".jsp")
            {
                ispage = "1";
            }
            else
            {
                ispage = "0";
            }

        }
        else
        {
            //this is url mod rewrite like / 
            filetype = "not a file";
        }

        //get file path
        if (fileName.Length >0 ) { 
        string path = uri.Replace(fileName, "");
        filepath = path;
        }
        }
        string[] response = new string[] { uri, fileName, filetype, fileExt, ispage, filepath };
        return response;
    }
}

]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_f8230d02b02c425885a64993a744d5d3.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8D3CA7CB-C19F-4A92-B921-8A7A44017037}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_f8230d02b02c425885a64993a744d5d3</RootNamespace>
    <AssemblyName>SC_f8230d02b02c425885a64993a744d5d3</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="MimeTypeMap, Version=2.1.0.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>C:\Users\Vladislavs\AppData\Local\Temp\Vsta\SSIS_SC120\VstacXhAXBEi0E__5KrUZM0__OQw\packages\MediaTypeMap.2.1.0.0\lib\net40\MimeTypeMap.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f8230d02b02c425885a64993a744d5d3.Properties.Settings.get_Default():SC_f8230d02b02c425885a64993a744d5d3.Properties.Sett" +
    "ings")]

namespace SC_f8230d02b02c425885a64993a744d5d3.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String requesturi
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool requesturi_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String filename
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
        set
        {
            this[1] = value;
        }
    }
    public bool filename_IsNull
    {
        get
        {
            return IsNull(1);
        }
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String fileextension
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
        set
        {
            this[2] = value;
        }
    }
    public bool fileextension_IsNull
    {
        get
        {
            return IsNull(2);
        }
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String typeoffile
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
        set
        {
            this[3] = value;
        }
    }
    public bool typeoffile_IsNull
    {
        get
        {
            return IsNull(3);
        }
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ispage
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
        set
        {
            this[4] = value;
        }
    }
    public bool ispage_IsNull
    {
        get
        {
            return IsNull(4);
        }
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String pathtofile
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
        set
        {
            this[5] = value;
        }
    }
    public bool pathtofile_IsNull
    {
        get
        {
            return IsNull(5);
        }
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_f8230d02b02c425885a64993a744d5d3</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_f8230d02b02c425885a64993a744d5d3</msb:DisplayName>
		<msb:ProjectId>{5ABB1723-C327-4C4B-BCEA-B7AA0945927A}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_f8230d02b02c425885a64993a744d5d3.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="packages.config"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f8230d02b02c425885a64993a744d5d3")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_f8230d02b02c425885a64993a744d5d3")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f8230d02b02c425885a64993a744d5d3.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f8230d02b02c425885a64993a744d5d3.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f8230d02b02c425885a64993a744d5d3.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f8230d02b02c425885a64993a744d5d3.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f8230d02b02c425885a64993a744d5d3.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="MediaTypeMap" version="2.1.0.0" targetFramework="net40" />
</packages>]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_f8230d02b02c425885a64993a744d5d3.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALYH8FgAAAAAAAAAAOAAIiALATAAAJAAAAAIAAAAAAAARq4A
AAAgAAAAwAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAAAAAQAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPStAABPAAAAAMAAAGwEAAAAAAAAAAAAAAAAAAAA
AAAAAOAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAATI4AAAAgAAAAkAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAGwEAAAAwAAAAAYAAACSAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAOAAAAACAAAAmAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAo
rgAAAAAAAEgAAAACAAUA1EkAAGhjAAABAAAAAAAAADytAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAQAiwAAAAEAABEDbwkAAAYK
A28NAAAGCwNvEQAABgwDbxUAAAYNA28ZAAAGEwQDbx0AAAYTBRyNGwAAASUWBqIlFweiJRgIoiUZ
CaIlGhEEoiUbEQWiEwYCEQYoBQAABhMHAxEHF5pvDgAABgMRBxiabxYAAAYDEQcZmm8SAAAGAxEH
GppvGgAABgMRBxuabx4AAAYqABMwAwA/AAAAAgAAEQItC3IBAABwcxIAAAp6AnIVAABwbxMAAAot
DXIVAABwAigUAAAKEAB+AQAABAISAG8VAAAKLQZyGQAAcCoGKgATMAQATgEAAAMAABEDFpoKAxia
CwMXmgwDGZoNAxqaEwQDG5oTBQhySwAAcCgWAAAKLBtyTQAAcA1ySwAAcAtyYwAAcBMEBhMFOOsA
AAAIchUAAHBvFwAAChUzSQZvGAAACnJnAABwbxcAAAoVLhtyZwAAcA1ySwAAcAtycwAAcBMEBhMF
OK8AAAByTQAAcA1ySwAAcAtycwAAcBMEBhMFOJQAAAByFQAAcAcoFAAACgsHbxkAAAoWMWIHcncA
AHAoFgAACiwIcoEAAHANKwcHKAQAAAYNB3J3AABwKBYAAAotJwdykwAAcCgWAAAKLRoHcp8AAHAo
FgAACi0NB3KrAABwKBYAAAosCXJjAABwEwQrD3JzAABwEwQrBnJNAABwDQhvGQAAChYxDgYIcksA
AHBvGgAAChMFHI0bAAABJRYGoiUXCKIlGAmiJRkHoiUaEQSiJRsRBaIqHgIoIwAABioAABMwBAAg
IwAAAAAAACgbAAAKcxwAAAolcrUAAHByvwAAcG8dAAAKJXLTAABwct0AAHBvHQAACiVy9QAAcHL/
AABwbx0AAAolchUBAHBy3QAAcG8dAAAKJXIhAQBwcv8AAHBvHQAACiVyLQEAcHI1AQBwbx0AAAol
cm0BAHBydQEAcG8dAAAKJXKRAQBwcpsBAHBvHQAACiVyrwEAcHIZAABwbx0AAAolcrkBAHBywwEA
cG8dAAAKJXLvAQBwcvkBAHBvHQAACiVyDQIAcHIZAABwbx0AAAolchcCAHByJQIAcG8dAAAKJXJb
AgBwcmkCAHBvHQAACiVykwIAcHKhAgBwbx0AAAolctMCAHByaQIAcG8dAAAKJXLhAgBwcu8CAHBv
HQAACiVyKQMAcHJpAgBwbx0AAAolcjcDAHByRQMAcG8dAAAKJXKNAwBwcpsDAHBvHQAACiVy2QMA
cHLjAwBwbx0AAAolci0EAHByOwQAcG8dAAAKJXJNBABwcmkCAHBvHQAACiVyVwQAcHJxBABwbx0A
AAolcqMEAHByaQIAcG8dAAAKJXKtBABwcrcEAHBvHQAACiVy3wQAcHKbAQBwbx0AAAolcusEAHBy
GQAAcG8dAAAKJXL1BABwcv0EAHBvHQAACiVyKwUAcHI1BQBwbx0AAAolck8FAHByWwUAcG8dAAAK
JXJxBQBwclsFAHBvHQAACiVyfQUAcHKHBQBwbx0AAAolcv8FAHByCQYAcG8dAAAKJXIvBgBwckkG
AHBvHQAACiVygwYAcHKNBgBwbx0AAAolcqMGAHByrQYAcG8dAAAKJXLNBgBwcq0GAHBvHQAACiVy
2QYAcHKtBgBwbx0AAAolcuUGAHByGQAAcG8dAAAKJXLvBgBwcvkGAHBvHQAACiVyFwcAcHKtBgBw
bx0AAAolciMHAHByGQAAcG8dAAAKJXItBwBwcjcHAHBvHQAACiVyTQcAcHKtBgBwbx0AAAolcp8A
AHByrQYAcG8dAAAKJXJZBwBwcvkGAHBvHQAACiVyYwcAcHL5BgBwbx0AAAolcm0HAHByeQcAcG8d
AAAKJXKjBwBwcqsHAHBvHQAACiVywwcAcHLNBwBwbx0AAAolcu0HAHBy9wcAcG8dAAAKJXIjCABw
cjcHAHBvHQAACiVyLQgAcHI7CABwbx0AAAolcmMIAHByGQAAcG8dAAAKJXJtCABwcncIAHBvHQAA
CiVyiwgAcHI3BwBwbx0AAAolcpEIAHByGQAAcG8dAAAKJXKbCABwcqUIAHBvHQAACiVyvQgAcHLJ
CABwbx0AAAolcgcJAHByEQkAcG8dAAAKJXJNCQBwcjcHAHBvHQAACiVyVQkAcHI3BwBwbx0AAAol
cl0JAHByWwUAcG8dAAAKJXJpCQBwcnMJAHBvHQAACiVylwkAcHKhCQBwbx0AAAolctcJAHByGQAA
cG8dAAAKJXLhCQBwcu8JAHBvHQAACiVyIwoAcHItCgBwbx0AAAolclcKAHByYQoAcG8dAAAKJXJ5
CgBwcjcHAHBvHQAACiVygwoAcHKNCgBwbx0AAAolcqkKAHByrQYAcG8dAAAKJXK5CgBwcssKAHBv
HQAACiVy7woAcHKtBgBwbx0AAAolcgMLAHByDwsAcG8dAAAKJXI1CwBwcjcHAHBvHQAACiVyPwsA
cHJJCwBwbx0AAAolcnsLAHByhQsAcG8dAAAKJXKvCwBwcqEJAHBvHQAACiVyuQsAcHI3BwBwbx0A
AAolcsELAHByNwcAcG8dAAAKJXLTCwBwct0LAHBvHQAACiVyAQwAcHI3BwBwbx0AAAolchEMAHBy
GwwAcG8dAAAKJXItDABwcjcMAHBvHQAACiVySQwAcHIZAABwbx0AAAolclMMAHByNwcAcG8dAAAK
JXJdDABwchkAAHBvHQAACiVyZwwAcHKtBgBwbx0AAAolcn8MAHByNwcAcG8dAAAKJXKPDABwcpkM
AHBvHQAACiVyxwwAcHI3BwBwbx0AAAolctEMAHByGQAAcG8dAAAKJXLhDABwcqEJAHBvHQAACiVy
6wwAcHKtBgBwbx0AAAolcvcMAHBydwgAcG8dAAAKJXIBDQBwcgsNAHBvHQAACiVyIQ0AcHKZDABw
bx0AAAolcisNAHByOwQAcG8dAAAKJXI5DQBwckMNAHBvHQAACiVydQ0AcHI7BABwbx0AAAolco0N
AHBylw0AcG8dAAAKJXKpDQBwcrMNAHBvHQAACiVy2Q0AcHLlDQBwbx0AAAolckcOAHByUw4AcG8d
AAAKJXLkDgBwcrMNAHBvHQAACiVy7g4AcHL6DgBwbx0AAAolclwPAHByaA8AcG8dAAAKJXL5DwBw
chkAAHBvHQAACiVyAxAAcHI3BwBwbx0AAAolcg0QAHByOwQAcG8dAAAKJXIXEABwcjsEAHBvHQAA
CiVyLRAAcHILDQBwbx0AAAolcjUQAHByPxAAcG8dAAAKJXJjEABwcm0QAHBvHQAACiVyiRAAcHIZ
AABwbx0AAAolcpMQAHBymQwAcG8dAAAKJXKdEABwcqcQAHBvHQAACiVyxRAAcHIZAABwbx0AAAol
cs8QAHByGQAAcG8dAAAKJXLZEABwcv0EAHBvHQAACiVy4xAAcHLtEABwbx0AAAolcg0RAHByFxEA
cG8dAAAKJXIzEQBwcj0RAHBvHQAACiVyYREAcHIZAABwbx0AAAolcmsRAHByOwQAcG8dAAAKJXKD
EQBwco0RAHBvHQAACiVytREAcHK/EQBwbx0AAAolcukRAHBy+xEAcG8dAAAKJXIbEgBwchkAAHBv
HQAACiVyJRIAcHIvEgBwbx0AAAolck0SAHByVxIAcG8dAAAKJXJvEgBwcoMSAHBvHQAACiVytxIA
cHKDEgBwbx0AAAolcsESAHByrQYAcG8dAAAKJXLbEgBwcuUSAHBvHQAACiVy+RIAcHIHEwBwbx0A
AAolcicTAHByMRMAcG8dAAAKJXJJEwBwclUTAHBvHQAACiVyexMAcHKDEwBwbx0AAAolcqkTAHBy
NwcAcG8dAAAKJXKvEwBwcrkTAHBvHQAACiVy3RMAcHLpEwBwbx0AAAolcgEUAHByCxQAcG8dAAAK
JXI7FABwchkAAHBvHQAACiVyRRQAcHIZAABwbx0AAAolck8UAHByWRQAcG8dAAAKJXJ/FABwcjcH
AHBvHQAACiVyiRQAcHKTFABwbx0AAAolcsUUAHByzxQAcG8dAAAKJXLvFABwcvkUAHBvHQAACiVy
GxUAcHIlFQBwbx0AAAolcpMAAHByJRUAcG8dAAAKJXI5FQBwckMVAHBvHQAACiVyZRUAcHKtBgBw
bx0AAAolcm8VAHByrQYAcG8dAAAKJXJ5FQBwchkAAHBvHQAACiVygxUAcHKtBgBwbx0AAAolco0V
AHByrQYAcG8dAAAKJXKXFQBwchkAAHBvHQAACiVyoRUAcHIZAABwbx0AAAolcqsVAHByrQYAcG8d
AAAKJXK1FQBwchkAAHBvHQAACiVyvxUAcHIZAABwbx0AAAolcskVAHByGQAAcG8dAAAKJXLTFQBw
ciUVAHBvHQAACiVy3RUAcHKtBgBwbx0AAAolcucVAHByGQAAcG8dAAAKJXLxFQBwcjcHAHBvHQAA
CiVy+xUAcHI3BwBwbx0AAAolcgEWAHByCxYAcG8dAAAKJXIlFgBwchkAAHBvHQAACiVyLxYAcHI3
BwBwbx0AAAolcjkWAHByQxYAcG8dAAAKJXJXFgBwcmEWAHBvHQAACiVyixYAcHI3BwBwbx0AAAol
cpUWAHByGQAAcG8dAAAKJXKfFgBwcjcHAHBvHQAACiVyqRYAcHKzFgBwbx0AAAolcu8WAHBy+RYA
cG8dAAAKJXIrFwBwcjUXAHBvHQAACiVyZxcAcHI3BwBwbx0AAAolcncXAHBygxcAcG8dAAAKJXK3
FwBwcsEXAHBvHQAACiVy3RcAcHKzFgBwbx0AAAolcucXAHBy8RcAcG8dAAAKJXIjGABwci8YAHBv
HQAACiVyYxgAcHJvGABwbx0AAAolcqMYAHByrxgAcG8dAAAKJXLjGABwcu0YAHBvHQAACiVyBRkA
cHIPGQBwbx0AAAolckEZAHByGQAAcG8dAAAKJXJNGQBwclcZAHBvHQAACiVyiRkAcHJXGQBwbx0A
AAolcpMZAHBynxkAcG8dAAAKJXK3GQBwcsMZAHBvHQAACiVy/RkAcHIZAABwbx0AAAolcgcaAHBy
ERoAcG8dAAAKJXInGgBwchEaAHBvHQAACiVyMxoAcHIRGgBwbx0AAAolcj0aAHByRRoAcG8dAAAK
JXJ3GgBwcoMaAHBvHQAACiVypRoAcHKvGgBwbx0AAAolcskaAHByNwcAcG8dAAAKJXLZGgBwcuca
AHBvHQAACiVyDxsAcHInGwBwbx0AAAolcmcbAHBycRsAcG8dAAAKJXKhGwBwcq0GAHBvHQAACiVy
tRsAcHIZAABwbx0AAAolcr8bAHByyRsAcG8dAAAKJXLnGwBwcjcHAHBvHQAACiVy8RsAcHLJGwBw
bx0AAAolcvsbAHByGQAAcG8dAAAKJXIFHABwcg8cAHBvHQAACiVyQxwAcHIPHABwbx0AAAolck0c
AHByVxwAcG8dAAAKJXJtHABwcnccAHBvHQAACiVypxwAcHJ3HABwbx0AAAolcrMcAHByVxwAcG8d
AAAKJXK9HABwcsccAHBvHQAACiVy5xwAcHLHHABwbx0AAAolcvMcAHBy/RwAcG8dAAAKJXIRHQBw
chsdAHBvHQAACiVyLx0AcHI5HQBwbx0AAAolck0dAHByVx0AcG8dAAAKJXJvHQBwcnkdAHBvHQAA
CiVykR0AcHKbHQBwbx0AAAolcr0dAHByNwcAcG8dAAAKJXLHHQBwctEdAHBvHQAACiVyAR4AcHIV
HgBwbx0AAAolckkeAHByNwcAcG8dAAAKJXJTHgBwcq0GAHBvHQAACiVyYx4AcHJpAgBwbx0AAAol
cm0eAHBydx4AcG8dAAAKJXKlHgBwcmkCAHBvHQAACiVyrx4AcHIZAABwbx0AAAolcrkeAHBywR4A
cG8dAAAKJXLvHgBwcvkeAHBvHQAACiVyNR8AcHKnEABwbx0AAAolcj8fAHBypxAAcG8dAAAKJXJN
HwBwclcfAHBvHQAACiVyax8AcHJXHwBwbx0AAAolcncfAHByGQAAcG8dAAAKJXKBHwBwcjcHAHBv
HQAACiVyiR8AcHKTHwBwbx0AAAolcrkfAHByOwQAcG8dAAAKJXLDHwBwcs0fAHBvHQAACiVy+R8A
cHJXHABwbx0AAAolcgMgAHByDSAAcG8dAAAKJXItIABwcjsgAHBvHQAACiVyXyAAcHJXHABwbx0A
AAolcmkgAHByVxwAcG8dAAAKJXJ1IABwcn8gAHBvHQAACiVylSAAcHKfIABwbx0AAAolcrMgAHBy
nyAAcG8dAAAKJXK/IABwclccAHBvHQAACiVyySAAcHJXHABwbx0AAAolctMgAHByVxwAcG8dAAAK
JXLfIABwcukgAHBvHQAACiVyKSEAcHJXHABwbx0AAAolcjMhAHByPSEAcG8dAAAKJXJzIQBwclcc
AHBvHQAACiVyfyEAcHINIABwbx0AAAolcokhAHBykSEAcG8dAAAKJXK/IQBwchkAAHBvHQAACiVy
ySEAcHIZAABwbx0AAAolctMhAHBydxwAcG8dAAAKJXLdIQBwcq0GAHBvHQAACiVy5yEAcHIPHABw
bx0AAAolcvEhAHBy+yEAcG8dAAAKJXIzIgBwcj0iAHBvHQAACiVyYyIAcHJrIgBwbx0AAAolcpUi
AHBy+QYAcG8dAAAKJXKfIgBwcqcQAHBvHQAACiVyqSIAcHIZAABwbx0AAAolcrMiAHByvSIAcG8d
AAAKJXLdIgBwcuciAHBvHQAACiVyAyMAcHI3BwBwbx0AAAolcg0jAHByNwcAcG8dAAAKJXIXIwBw
ciEjAHBvHQAACiVygSMAcHKLIwBwbx0AAAolcrcjAHBywSMAcG8dAAAKJXIRJABwchskAHBvHQAA
CiVyQyQAcHIbJABwbx0AAAolck8kAHByGyQAcG8dAAAKJXJfJABwchskAHBvHQAACiVybyQAcHIb
JABwbx0AAAolcn8kAHByGyQAcG8dAAAKJXKRJABwcq0GAHBvHQAACiVyqyQAcHK3JABwbx0AAAol
cgMlAHByDSUAcG8dAAAKJXIzJQBwcj0lAHBvHQAACiVyZyUAcHJxJQBwbx0AAAolcrMlAHByvSUA
cG8dAAAKJXLrJQBwcr0lAHBvHQAACiVy9SUAcHL/JQBwbx0AAAolcj8mAHBySSYAcG8dAAAKJXKB
JgBwcosmAHBvHQAACiVyuyYAcHLJJgBwbx0AAAolcvUmAHBy/yYAcG8dAAAKJXIVJwBwchkAAHBv
HQAACiVyHycAcHIZAABwbx0AAAolciknAHByMycAcG8dAAAKJXJTJwBwchkAAHBvHQAACiVyXScA
cHIZAABwbx0AAAolcmcnAHByPSUAcG8dAAAKJXJxJwBwcnsnAHBvHQAACiVyrScAcHL/JgBwbx0A
AAolcrcnAHBy/yYAcG8dAAAKJXLDJwBwcjcHAHBvHQAACiVy0ycAcHI3BwBwbx0AAAolcucnAHBy
8ScAcG8dAAAKJXInKABwcjEoAHBvHQAACiVySSgAcHJTKABwbx0AAAolcn8oAHByUygAcG8dAAAK
JXJ3AABwcoEAAHBvHQAACiVyiSgAcHJTKABwbx0AAAolcpMoAHByUygAcG8dAAAKJXKdKABwclMo
AHBvHQAACiVypygAcHKxKABwbx0AAAolcsUoAHByzygAcG8dAAAKJXL/KABwcpsdAHBvHQAACiVy
CSkAcHKbHQBwbx0AAAolchUpAHBysSgAcG8dAAAKJXIfKQBwcikpAHBvHQAACiVyZSkAcHJxKQBw
bx0AAAolct8pAHBy6ykAcG8dAAAKJXJ4KgBwcikpAHBvHQAACiVygioAcHKOKgBwbx0AAAolcvYq
AHByACsAcG8dAAAKJXIwKwBwcikpAHBvHQAACiVyOisAcHJGKwBwbx0AAAolcrYrAHBywisAcG8d
AAAKJXJRLABwcikpAHBvHQAACiVyWywAcHJnLABwbx0AAAolct0sAHBy6SwAcG8dAAAKJXJ+LQBw
cogtAHBvHQAACiVyti0AcHIZAABwbx0AAAolcsAtAHByGQAAcG8dAAAKJXLKLQBwcv0EAHBvHQAA
CiVy0i0AcHLeLQBwbx0AAAolcgwuAHByGQAAcG8dAAAKJXIWLgBwcq0GAHBvHQAACiVyJC4AcHIZ
AABwbx0AAAolci4uAHByGQAAcG8dAAAKJXI4LgBwckIuAHBvHQAACiVydi4AcHIpKQBwbx0AAAol
coAuAHByii4AcG8dAAAKJXK2LgBwcoouAHBvHQAACiVywi4AcHINIABwbx0AAAolcsouAHBy1C4A
cG8dAAAKJXL4LgBwctQuAHBvHQAACiVyBC8AcHIOLwBwbx0AAAolckovAHByGQAAcG8dAAAKJXJU
LwBwclwvAHBvHQAACiVyhi8AcHJcLwBwbx0AAAolcpAvAHByGQAAcG8dAAAKJXKaLwBwcqQvAHBv
HQAACiVyyi8AcHLULwBwbx0AAAolcv4vAHByNwcAcG8dAAAKJXIGMABwcjcHAHBvHQAACiVyEDAA
cHI3BwBwbx0AAAolchowAHByrQYAcG8dAAAKJXImMABwcq0GAHBvHQAACiVyMjAAcHI6MABwbx0A
AAolcmgwAHBycjAAcG8dAAAKJXKKMABwcjcHAHBvHQAACiVylDAAcHKcMABwbx0AAAolctYwAHBy
Vx8AcG8dAAAKJXLgMABwcuowAHBvHQAACiVyMjEAcHI+MQBwbx0AAAolcmYxAHBycDEAcG8dAAAK
JXKoMQBwcrIxAHBvHQAACiVyzjEAcHLYMQBwbx0AAAolcvgxAHByAjIAcG8dAAAKJXIeMgBwcq0G
AHBvHQAACiVyMDIAcHI3BwBwbx0AAAolcjYyAHByTjIAcG8dAAAKJXKOMgBwcpgyAHBvHQAACiVy
yjIAcHLUMgBwbx0AAAolcvIyAHBy/DIAcG8dAAAKJXIUMwBwch4zAHBvHQAACiVyPjMAcHIZAABw
bx0AAAolckgzAHBycDMAcG8dAAAKJXLCMwBwctIzAHBvHQAACiVyGDQAcHIoNABwbx0AAAolcng0
AHByrQYAcG8dAAAKJXKMNABwcpo0AHBvHQAACiVywjQAcHLONABwbx0AAAolcuI0AHBy6jQAcG8d
AAAKJXIMNQBwchg1AHBvHQAACiVyPjUAcHIlFQBwbx0AAAolckw1AHByVjUAcG8dAAAKJXKCNQBw
cq0GAHBvHQAACiVylDUAcHKtBgBwbx0AAAolcqA1AHByrDUAcG8dAAAKJXIUNgBwciA2AHBvHQAA
CiVypzYAcHKxNgBwbx0AAAolcuM2AHByNwcAcG8dAAAKJXLtNgBwcgM3AHBvHQAACiVyNTcAcHI/
NwBwbx0AAAolclc3AHByGQAAcG8dAAAKJXJhNwBwcj83AHBvHQAACiVyazcAcHI/NwBwbx0AAAol
cnU3AHByqwcAcG8dAAAKJXJ/NwBwcq0GAHBvHQAACiVykTcAcHIZAABwbx0AAAolcps3AHByNwcA
cG8dAAAKJXKlNwBwcjcHAHBvHQAACiVyrzcAcHJxJQBwbx0AAAolcrk3AHBywzcAcG8dAAAKJXL1
NwBwcv83AHBvHQAACiVyMzgAcHI3BwBwbx0AAAolcj04AHByOwQAcG8dAAAKJXJtOABwcnc4AHBv
HQAACiVyrTgAcHK3OABwbx0AAAolcvk4AHByAzkAcG8dAAAKJXI5OQBwcks5AHBvHQAACiVydzkA
cHKHOQBwbx0AAAolcrE5AHByrQYAcG8dAAAKJXK7OQBwcvkeAHBvHQAACiVyxTkAcHI+MQBwbx0A
AAolcss5AHBy1TkAcG8dAAAKJXL5OQBwcgM6AHBvHQAACiVyJzoAcHKtBgBwbx0AAAolckU6AHBy
rQYAcG8dAAAKJXJhOgBwcms6AHBvHQAACiVyjzoAcHKbOgBwbx0AAAolcsc6AHBymzoAcG8dAAAK
JXLZOgBwcuM6AHBvHQAACiVyFTsAcHIhOwBwbx0AAAolcl87AHByGQAAcG8dAAAKJXJpOwBwcnM7
AHBvHQAACiVyiTsAcHJzOwBwbx0AAAolcpU7AHByNwcAcG8dAAAKJXKfOwBwcjcHAHBvHQAACiVy
qTsAcHIZAABwbx0AAAolcrM7AHByPjEAcG8dAAAKJXK7OwBwcsU7AHBvHQAACiVy9zsAcHKtBgBw
bx0AAAolcgE8AHBydxwAcG8dAAAKJXIJPABwchM8AHBvHQAACiVyRzwAcHIZAABwbx0AAAolclE8
AHBydxwAcG8dAAAKJXJbPABwcjcHAHBvHQAACiVyZTwAcHIZAABwbx0AAAolcm88AHByeTwAcG8d
AAAKJXKNPABwcjcHAHBvHQAACiVymTwAcHKnPABwbx0AAAolcs88AHByNwcAcG8dAAAKJXLXPABw
cjcHAHBvHQAACiVy6TwAcHJXHABwbx0AAAolcvM8AHByNwcAcG8dAAAKJXIDPQBwcg09AHBvHQAA
CiVyKT0AcHIzPQBwbx0AAAolck09AHBy+xEAcG8dAAAKJXJdPQBwcjcHAHBvHQAACiVyZz0AcHL7
EQBwbx0AAAolcnk9AHByNwcAcG8dAAAKJXKLPQBwcjcHAHBvHQAACiVylT0AcHI3BwBwbx0AAAol
cqU9AHByrz0AcG8dAAAKJXLvPQBwcjsEAHBvHQAACiVy+T0AcHKtBgBwbx0AAAolcg8+AHByOwQA
cG8dAAAKJXIbPgBwciU+AHBvHQAACiVyUT4AcHJbPgBwbx0AAAolcoE+AHByjT4AcG8dAAAKJXKv
PgBwcjsEAHBvHQAACiVyyz4AcHI7BABwbx0AAAolcuc+AHByrQYAcG8dAAAKJXL1PgBwcjcHAHBv
HQAACiVyBT8AcHIlPgBwbx0AAAolcg8/AHByNwcAcG8dAAAKJXIdPwBwcjsEAHBvHQAACiVyNT8A
cHI3BwBwbx0AAAolckU/AHByJT4AcG8dAAAKJXJPPwBwcjsEAHBvHQAACiVyZz8AcHJzPwBwbx0A
AAolcp8/AHByJT4AcG8dAAAKJXKpPwBwciU+AHBvHQAACiVysz8AcHIlPgBwbx0AAAolcr0/AHBy
xz8AcG8dAAAKJXLbPwBwcsc/AHBvHQAACiVy5z8AcHLxPwBwbx0AAAolcg9AAHBysw0AcG8dAAAK
JXIZQABwciVAAHBvHQAACiVyS0AAcHJVQABwbx0AAAolcodAAHByVUAAcG8dAAAKJXKRQABwcptA
AHBvHQAACiVywUAAcHLZQABwbx0AAAolchlBAHByrQYAcG8dAAAKJXIrQQBwcq0GAHBvHQAACiVy
NUEAcHKzDQBwbx0AAAolcj9BAHByVUAAcG8dAAAKJXJJQQBwclVBAHBvHQAACiVyh0EAcHKhQQBw
bx0AAAolctVBAHBy8UEAcG8dAAAKJXInQgBwci9CAHBvHQAACiVyS0IAcHJVQgBwbx0AAAolcnNC
AHByfUIAcG8dAAAKJXKnQgBwcrFCAHBvHQAACiVy40IAcHLtQgBwbx0AAAolcg9DAHByG0MAcG8d
AAAKJXJNQwBwcllDAHBvHQAACiVyh0MAcHKVQwBwbx0AAAolctNDAHBy3UMAcG8dAAAKJXL7QwBw
cgVEAHBvHQAACiVyI0QAcHItRABwbx0AAAolcktEAHByVUQAcG8dAAAKJXJ/RABwcolEAHBvHQAA
CiVyt0QAcHJVQABwbx0AAAolcsFEAHByy0QAcG8dAAAKJXL3RABwci8SAHBvHQAACiVyAUUAcHIv
EgBwbx0AAAolcgtFAHBy1DIAcG8dAAAKJXIVRQBwcjsEAHBvHQAACiVyIUUAcHIrRQBwbx0AAAol
cklFAHByT0UAcG8dAAAKJXJ3RQBwci8SAHBvHQAACiVygUUAcHKNRQBwbx0AAAolcrdFAHBywUUA
cG8dAAAKJXL9RQBwcglGAHBvHQAACiVyNUYAcHI/RgBwbx0AAAolcl9GAHByNwcAcG8dAAAKJXJp
RgBwcnNGAHBvHQAACiVyn0YAcHJzRgBwbx0AAAolcq1GAHBysTYAcG8dAAAKJXK3RgBwcsNGAHBv
HQAACiVyIUcAcHKxNgBwbx0AAAolcitHAHBysTYAcG8dAAAKJXI1RwBwcrE2AHBvHQAACiVyP0cA
cHKxNgBwbx0AAAolcklHAHBysTYAcG8dAAAKJXJTRwBwcrE2AHBvHQAACiVyXUcAcHJpRwBwbx0A
AAolctVHAHBy4UcAcG8dAAAKJXI/SABwcktIAHBvHQAACiVy0EgAcHKxNgBwbx0AAAolctpIAHBy
5kgAcG8dAAAKJXJKSQBwclZJAHBvHQAACiVy4UkAcHKxNgBwbx0AAAolcutJAHByOwQAcG8dAAAK
JXL1SQBwcq0GAHBvHQAACiVyAUoAcHIvEgBwbx0AAAolcgtKAHByNwcAcG8dAAAKJXIXSgBwciFK
AHBvHQAACiVyQUoAcHJLSgBwbx0AAAolcolKAHByOwQAcG8dAAAKJXKZSgBwcq0GAHBvHQAACiVy
o0oAcHI7BABwbx0AAAolcq1KAHByOwQAcG8dAAAKJXK3SgBwcjsEAHBvHQAACiVywUoAcHI7BABw
bx0AAAolcs1KAHByGQAAcG8dAAAKJXLXSgBwcq0GAHBvHQAACiVy4UoAcHIZAABwbx0AAAolcutK
AHBy9UoAcG8dAAAKJXIdSwBwciNLAHBvHQAACiVyUUsAcHJbSwBwbx0AAAqAAQAABCoqAgMEBSge
AAAKKlICex8AAAoCeyAAAAoWlG8hAAAKKiYCFgMoIgAACioiAhYoIwAACipaAywIAhYoJAAACipy
lUsAcHMlAAAKelICex8AAAoCeyAAAAoXlG8hAAAKKiYCFwMoIgAACioiAhcoIwAACipaAywIAhco
JAAACipylUsAcHMlAAAKelICex8AAAoCeyAAAAoYlG8hAAAKKiYCGAMoIgAACioiAhgoIwAACipa
AywIAhgoJAAACipylUsAcHMlAAAKelICex8AAAoCeyAAAAoZlG8hAAAKKiYCGQMoIgAACioiAhko
IwAACipaAywIAhkoJAAACipylUsAcHMlAAAKelICex8AAAoCeyAAAAoalG8hAAAKKiYCGgMoIgAA
CioiAhooIwAACipaAywIAhooJAAACipylUsAcHMlAAAKelICex8AAAoCeyAAAAoblG8hAAAKKiYC
GwMoIgAACioiAhsoIwAACipaAywIAhsoJAAACipylUsAcHMlAAAKeh4CKCYAAAoqHgIoJwAACip+
AigoAAAKAgJzJwAABn0CAAAEAgJzKAAABn0DAAAEKpIEcjJMAHAabykAAAosFQIFAgMoKgAACg4E
cwgAAAZvJQAABipKKwcCA28mAAAGA28hAAAGLfEqBio6AigrAAAKAgN9BAAABCo6AigrAAAKAgN9
BQAABCqWAnsFAAAEbywAAApyQkwAcG8tAAAKKC4AAApvLwAACnQbAAABKnICewUAAARvLAAACnJC
TABwby0AAAoDbzAAAAoqlgJ7BQAABG8sAAAKckxMAHBvLQAACiguAAAKby8AAAp0GwAAASpyAnsF
AAAEbywAAApyTEwAcG8tAAAKA28wAAAKKpYCewUAAARvLAAACnJcTABwby0AAAooLgAACm8vAAAK
dBsAAAEqcgJ7BQAABG8sAAAKclxMAHBvLQAACgNvMAAACiqWAnsFAAAEbywAAApyakwAcG8tAAAK
KC4AAApvLwAACnQbAAABKnICewUAAARvLAAACnJqTABwby0AAAoDbzAAAAoqlgJ7BQAABG8sAAAK
cn5MAHBvLQAACiguAAAKby8AAAp0GwAAASpyAnsFAAAEbywAAApyfkwAcG8tAAAKA28wAAAKKpYC
ewUAAARvLAAACnKSTABwby0AAAooLgAACm8vAAAKdBsAAAEqcgJ7BQAABG8sAAAKcpJMAHBvLQAA
CgNvMAAACioeAigrAAAKKq5+BgAABC0ecqJMAHDQBwAAAigxAAAKbzIAAApzMwAACoAGAAAEfgYA
AAQqGn4HAAAEKh4CgAcAAAQqGn4IAAAEKh4CKDQAAAoqLnM6AAAGgAgAAAQqAAAAQlNKQgEAAQAA
AAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAnAkAACN+AAAICgAA/AkAACNTdHJpbmdzAAAAAAQU
AAAUTQAAI1VTABhhAAAQAAAAI0dVSUQAAAAoYQAAQAIAACNCbG9iAAAAAAAAAAIAAAFXFaIJCQEA
AAD6ATMAFgAAAQAAACgAAAAIAAAACAAAADsAAAAhAAAANAAAABAAAAADAAAABAAAABUAAAAoAAAA
AgAAAAEAAAAFAAAAAQAAAAAAhwQBAAAAAAAGABIDbQcGAKYDbQcGAF4CWgcPAOEHAAAGAIsCNwYG
APUCNwYGANYCNwYGAI0DNwYGADIDNwYGAEsDNwYGAKICNwYGAL0C/wMKAGYDawEGAE4AmgAKAO0G
awEOAN4GawEKAJYGawEKANYIawEGAJkIywUGAEECWgcGAP4GjQcGAIoGIgYSABECcQQSAHICcQQS
ANoBDQYGACYCbQcGABwEywUGAEkGywUGADYHywUGAE8AmgAGADoAmgAGAF8GywUGAHkGywUWABEA
DgcWAAEADgdLAFIJAAAWACIADgcGAJMBywUGAOcAywUGAKUJNwYAAAAAgAAAAAAAAQABAAEAEADe
BQAAEAABAAEAAQAQANEGAAA9AAIACAABABAAuAgAAEkAAgAjAAEAEACGCAAATQAEACcAAQAQACwI
AABNAAUAKAAAABAAlAfwB00ABgA1AAABEAB2CPAHZQAIADkAEQBsCAMBBgCGCAsBBgAsCA8BAQDG
CBMBAQDGCBMBEQDSBRcBEQDKARsBEQDBAB8BUCAAAAAAxgDEAwYAAQBYIAAAAADGAM8DBgABAGAg
AAAAAMYAggkjAQEA+CAAAAAAlgCMASkBAgBEIQAAAACGADYILgEDAJ4iAAAAAIYYTQcGAAQAqCIA
AAAAkRhTBzUBBADURQAAAACGGE0HhwAEAN9FAAAAAIYIUwRbAAcA9EUAAAAAhghiBBAABwD+RQAA
AACGCFMFqQAIAAdGAAAAAIYIaQU5AQgAHkYAAAAAhghRAVsACQAzRgAAAACGCF4BEAAJAD1GAAAA
AIYIKwWpAAoARkYAAAAAhgg/BTkBCgBdRgAAAACGCOkFWwALAHJGAAAAAIYI+wUQAAsAfEYAAAAA
hgh/BakADACFRgAAAACGCJgFOQEMAJxGAAAAAIYICwFbAA0AsUYAAAAAhggaARAADQC7RgAAAACG
CNMEqQAOAMRGAAAAAIYI6QQ5AQ4A20YAAAAAhgjRAFsADwDwRgAAAACGCNwAEAAPAPpGAAAAAIYI
rwSpABAAA0cAAAAAhgjBBDkBEAAaRwAAAACGCCkBWwARAC9HAAAAAIYIOAEQABEAOUcAAAAAhgj/
BKkAEgBCRwAAAACGCBUFOQESAFlHAAAAAIYAmQmpABMAYUcAAAAAhgCgCKkAEwBpRwAAAACGGE0H
BgATAIlHAAAAAMYAKwk+ARMArkcAAAAAxgEkCSMBFwDBRwAAAADGAYIJIwEYAMNHAAAAAIYYTQdI
ARkA0kcAAAAAhhhNB0gBGgDhRwAAAACGCMYJWwAbAAdIAAAAAIYIzwkQABsAJEgAAAAAhgiuCVsA
HABKSAAAAACGCLoJEAAcAGdIAAAAAIYI5AlbAB0AjUgAAAAAhgjvCRAAHQCqSAAAAACGCCMEWwAe
ANBIAAAAAIYIMAQQAB4A7UgAAAAAhgiYAVsAHwATSQAAAACGCKUBEAAfADBJAAAAAIYI0QBbACAA
VkkAAAAAhgjcABAAIABzSQAAAACDGE0HBgAhAHtJAAAAAJMI+gZOASEAp0kAAAAAkwiyAVMBIQCu
SQAAAACTCL4BWAEhALZJAAAAAJYIrAheASIAvUkAAAAAhhhNBwYAIgDFSQAAAACRGFMHNQEiAAAA
AQCdCQAAAQADBgAAAQA4CQAAAQDzBgAAAgBHCAAAAwCkBgAAAQDxAwAAAQDxAwAAAQDxAwAAAQDx
AwAAAQDxAwAAAQDxAwAAAQDxAwAAAQDxAwAAAQDxAwAAAQDxAwAAAQDxAwAAAQDxAwAAAQCJAAAA
AgBHAQAAAwDzBgAABACkBgAAAQDzBgAAAQCdCQAAAQDcCAAAAQDcCAAAAQDxAwAAAQDxAwAAAQDx
AwAAAQDxAwAAAQDxAwAAAQDxAwAAAQDxAwkATQcBABEATQcGABkATQcKACkATQcQADEATQcQADkA
TQcQAEEATQcQAEkATQcQAFEATQcQAFkATQcQAGEATQcQAGkATQcGAKEATQcGAMEATQcVANEATQcG
AJEAxAMGAJEAzwMGAOEATQcQANkASAQsANkAkggxAAwA5QM+ANkA2AlQANkA9wNWANkARQdbANkA
PQRfANkAuQBjAOkA8gFpABQATQd1ABQAtQB/AHkATQeHAHkA8waRAHkARwiVAIEAGQSZAHkAwgWe
AHkAqgWkAHkAsQUBAAEBTQcQAHkAmQmpAHkAoAipAJEATQcGANkAfwitAJEAWwi1AJkATQcGAJEA
Hwi7ABEBuQXBAJEAbQnIABkBPgnOABkB2wPVADEB+QDaADEBoQnjAKkATQfpAMkATQcGAC4ACwB6
AS4AEwCDAS4AGwCiAS4AIwCrAS4AKwDUAS4AMwDUAS4AOwDUAS4AQwCrAS4ASwDaAS4AUwDUAS4A
WwDxAUMAYwA5AuMAawA5AgEBewA5AmkCcwCiAYkCcwCiARsAKABHAAMAAQAGAA0ABwATAAgAFQAA
AGYEYwEAAG0FZwEAAGIBYwEAAEMFZwEAAP8FYwEAAJwFZwEAAB4BYwEAAO0EZwEAAOAAYwEAAMUE
ZwEAADwBYwEAABkFZwEAANMJYwEAAL4JYwEAAPMJYwEAADQEYwEAAKkBYwEAAOAAYwEAAP4GawEA
ANIBcAEAALAIdQECAAkAAwABAAoAAwACAAsABQABAAwABQACAA0ABwABAA4ABwACAA8ACQABABAA
CQACABEACwABABIACwACABMADQABABQADQACABUADwABABYADwACABcAEQABABgAEQACABkAEwAB
ABoAEwACABsAFQABABwAFQACAB0AFwABAB4AFwACAB8AGQABACAAGQACACkAGwABACoAGwACACsA
HQABACwAHQACAC0AHwABAC4AHwACAC8AIQABADAAIQACADEAIwABADIAIwACADMAJQABADQAJQAC
ADYAJwACADcAKQABADgAKQACADkAKwA3AG4ABIAAAAEAAACpGGMCAAAAAAAAXAAAAAQAAAAAAAAA
AAAAAPEAkQAAAAAADAAAAAAAAAAAAAAA+gDmCAAAAAAMAAAAAAAAAAAAAAD6AAMJAAAAAAQAAAAA
AAAAAAAAAPEAywUAAAAADAAAAAAAAAAAAAAA+gCuBgAAAAAAAAAAAQAAAJ4HAAAAAAAAAElEVFNW
YXJpYWJsZTEwMABJRFRTVmFyaWFibGVzMTAwAElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAElFcXVh
bGl0eUNvbXBhcmVyYDEASURpY3Rpb25hcnlgMgBTQ19mODIzMGQwMmIwMmM0MjU4ODVhNjQ5OTNh
NzQ0ZDVkMwA8TW9kdWxlPgBJbnB1dElEAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5l
cmljAEFkZABSZXBsYWNlAGRlZmF1bHRJbnN0YW5jZQBnZXRfaXNwYWdlAHNldF9pc3BhZ2UAUnVu
dGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X3R5cGVvZmZpbGUAc2V0X3R5cGVv
ZmZpbGUAZ2V0X3BhdGh0b2ZpbGUAc2V0X3BhdGh0b2ZpbGUASW5wdXROYW1lAGdldF9maWxlbmFt
ZQBzZXRfZmlsZW5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAR2V0TWltZVR5
cGUAZ2V0X2ZpbGV0eXBlAHNldF9maWxldHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNv
dXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAZ2V0X0ludmFyaWFudEN1bHR1cmVJ
Z25vcmVDYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JC
cm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRB
dHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUA
UG9zdEV4ZWN1dGUAc2V0X1ZhbHVlAFRyeUdldFZhbHVlAHZhbHVlAEluZGV4T2YAU3lzdGVtLlJ1
bnRpbWUuVmVyc2lvbmluZwBHZXRTdHJpbmcAZ2V0X2ZpbGVwYXRoAHNldF9maWxlcGF0aABnZXRf
TGVuZ3RoAFN0YXJ0c1dpdGgAZ2V0X3JlcXVlc3R1cmkAc2V0X3JlcXVlc3R1cmkAU3lzdGVtLkNv
bXBvbmVudE1vZGVsAFNDX2Y4MjMwZDAyYjAyYzQyNTg4NWE2NDk5M2E3NDRkNWQzLmRsbABnZXRf
aXNwYWdlX0lzTnVsbABzZXRfaXNwYWdlX0lzTnVsbABnZXRfdHlwZW9mZmlsZV9Jc051bGwAc2V0
X3R5cGVvZmZpbGVfSXNOdWxsAGdldF9wYXRodG9maWxlX0lzTnVsbABzZXRfcGF0aHRvZmlsZV9J
c051bGwAZ2V0X2ZpbGVuYW1lX0lzTnVsbABzZXRfZmlsZW5hbWVfSXNOdWxsAGdldF9yZXF1ZXN0
dXJpX0lzTnVsbABzZXRfcmVxdWVzdHVyaV9Jc051bGwAZ2V0X2ZpbGVleHRlbnNpb25fSXNOdWxs
AHNldF9maWxlZXh0ZW5zaW9uX0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3Rl
bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAGdldF9maWxlZXh0ZW5zaW9uAHNldF9maWxlZXh0ZW5z
aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZs
ZWN0aW9uAEFyZ3VtZW50TnVsbEV4Y2VwdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0
cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9z
b2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIA
U2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
UnVudGltZS5XcmFwcGVyAFN0cmluZ0NvbXBhcmVyAFRvTG93ZXIALmN0b3IALmNjdG9yAFN5c3Rl
bS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNv
dXJjZXMAU0NfZjgyMzBkMDJiMDJjNDI1ODg1YTY0OTkzYTc0NGQ1ZDMuUHJvcGVydGllcy5SZXNv
dXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDX2Y4MjMwZDAyYjAyYzQyNTg4NWE2NDk5
M2E3NDRkNWQzLlByb3BlcnRpZXMAZ2V0X1JlYWRXcml0ZVZhcmlhYmxlcwBQcm9jZXNzRmlsZVR5
cGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBfbWFwcGluZ3MAU2V0dGlu
Z3MARXF1YWxzAENvbm5lY3Rpb25zAENvbmNhdABPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1
bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5w
dXQwX1Byb2Nlc3NJbnB1dABpbnB1dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVu
dEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cA
TmV4dFJvdwBnZXRfQXNzZW1ibHkAZ2V0X2NvdW50cnkAc2V0X2NvdW50cnkAZ2V0X2NpdHkAc2V0
X2NpdHkAb3BfRXF1YWxpdHkAZ2V0X2NvdW50eQBzZXRfY291bnR5AAAAABNlAHgAdABlAG4AcwBp
AG8AbgAAAy4AADFhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBvAGMAdABlAHQALQBzAHQAcgBlAGEA
bQABAQAVbgBvAHQAIABhACAAZgBpAGwAZQAAAzEAAAtjAGEAYwBoAGUAAAMwAAAJLgBwAGgAcAAA
EXQAZQB4AHQALwBwAGgAcAAACy4AaAB0AG0AbAAACy4AYQBzAHAAeAAACS4AagBzAHAAAAkuADMA
MgAzAAATdABlAHgAdAAvAGgAMwAyADMAAAkuADMAZwAyAAAXdgBpAGQAZQBvAC8AMwBnAHAAcAAy
AAAJLgAzAGcAcAAAFXYAaQBkAGUAbwAvADMAZwBwAHAAAAsuADMAZwBwADIAAAsuADMAZwBwAHAA
AAcuADcAegAAN2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQA3AHoALQBjAG8AbQBwAHIAZQBz
AHMAZQBkAAEHLgBhAGEAABthAHUAZABpAG8ALwBhAHUAZABpAGIAbABlAAAJLgBBAEEAQwAAE2EA
dQBkAGkAbwAvAGEAYQBjAAAJLgBhAGEAZgAACS4AYQBhAHgAACthAHUAZABpAG8ALwB2AG4AZAAu
AGEAdQBkAGkAYgBsAGUALgBhAGEAeAAACS4AYQBjADMAABNhAHUAZABpAG8ALwBhAGMAMwAACS4A
YQBjAGEAAA0uAGEAYwBjAGQAYQAANWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAG0AcwBhAGMAYwBl
AHMAcwAuAGEAZABkAGkAbgAADS4AYQBjAGMAZABiAAApYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8A
bQBzAGEAYwBjAGUAcwBzAAANLgBhAGMAYwBkAGMAADFhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBt
AHMAYQBjAGMAZQBzAHMALgBjAGEAYgAADS4AYQBjAGMAZABlAAANLgBhAGMAYwBkAHIAADlhAHAA
cABsAGkAYwBhAHQAaQBvAG4ALwBtAHMAYQBjAGMAZQBzAHMALgByAHUAbgB0AGkAbQBlAAANLgBh
AGMAYwBkAHQAAA0uAGEAYwBjAGQAdwAAR2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAG0AcwBhAGMA
YwBlAHMAcwAuAHcAZQBiAGEAcABwAGwAaQBjAGEAdABpAG8AbgAADS4AYQBjAGMAZgB0AAA9YQBw
AHAAbABpAGMAYQB0AGkAbwBuAC8AbQBzAGEAYwBjAGUAcwBzAC4AZgB0AGUAbQBwAGwAYQB0AGUA
AAkuAGEAYwB4AABJYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AaQBuAHQAZQByAG4AZQB0AC0AcABy
AG8AcABlAHIAdAB5AC0AcwB0AHIAZQBhAG0AAQ0uAEEAZABkAEkAbgAAEXQAZQB4AHQALwB4AG0A
bAAACS4AYQBkAGUAABkuAGEAZABvAGIAZQBiAHIAaQBkAGcAZQAAMWEAcABwAGwAaQBjAGEAdABp
AG8AbgAvAHgALQBiAHIAaQBkAGcAZQAtAHUAcgBsAAEJLgBhAGQAcAAACS4AQQBEAFQAACdhAHUA
ZABpAG8ALwB2AG4AZAAuAGQAbABuAGEALgBhAGQAdABzAAALLgBBAEQAVABTAAAJLgBhAGYAbQAA
By4AYQBpAAAtYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AcABvAHMAdABzAGMAcgBpAHAAdAAACS4A
YQBpAGYAABlhAHUAZABpAG8ALwB4AC0AYQBpAGYAZgABCy4AYQBpAGYAYwAAFWEAdQBkAGkAbwAv
AGEAaQBmAGYAAAsuAGEAaQBmAGYAAAkuAGEAaQByAAB3YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8A
dgBuAGQALgBhAGQAbwBiAGUALgBhAGkAcgAtAGEAcABwAGwAaQBjAGEAdABpAG8AbgAtAGkAbgBz
AHQAYQBsAGwAZQByAC0AcABhAGMAawBhAGcAZQArAHoAaQBwAAEJLgBhAG0AYwAAJWEAcABwAGwA
aQBjAGEAdABpAG8AbgAvAHgALQBtAHAAZQBnAAEZLgBhAHAAcABsAGkAYwBhAHQAaQBvAG4AADlh
AHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AbQBzAC0AYQBwAHAAbABpAGMAYQB0AGkAbwBuAAEJ
LgBhAHIAdAAAFWkAbQBhAGcAZQAvAHgALQBqAGcAAQkuAGEAcwBhAAAfYQBwAHAAbABpAGMAYQB0
AGkAbwBuAC8AeABtAGwAAAsuAGEAcwBhAHgAAAsuAGEAcwBjAHgAAAkuAGEAcwBkAAAJLgBhAHMA
ZgAAHXYAaQBkAGUAbwAvAHgALQBtAHMALQBhAHMAZgABCy4AYQBzAGgAeAAACS4AYQBzAGkAAAku
AGEAcwBtAAAVdABlAHgAdAAvAHAAbABhAGkAbgAACy4AYQBzAG0AeAAACS4AYQBzAHIAAAkuAGEA
cwB4AAALLgBhAHQAbwBtAAApYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AYQB0AG8AbQArAHgAbQBs
AAAHLgBhAHUAABdhAHUAZABpAG8ALwBiAGEAcwBpAGMAAAkuAGEAdgBpAAAfdgBpAGQAZQBvAC8A
eAAtAG0AcwB2AGkAZABlAG8AAQkuAGEAeABzAAArYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AbwBs
AGUAcwBjAHIAaQBwAHQAAAkuAGIAYQBzAAANLgBiAGMAcABpAG8AACdhAHAAcABsAGkAYwBhAHQA
aQBvAG4ALwB4AC0AYgBjAHAAaQBvAAEJLgBiAGkAbgAACS4AYgBtAHAAABNpAG0AYQBnAGUALwBi
AG0AcAAABS4AYwAACS4AYwBhAGIAAAkuAGMAYQBmAAAXYQB1AGQAaQBvAC8AeAAtAGMAYQBmAAEL
LgBjAGEAbAB4AAA9YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBuAGQALgBtAHMALQBvAGYAZgBp
AGMAZQAuAGMAYQBsAHgAAQkuAGMAYQB0AAA7YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBuAGQA
LgBtAHMALQBwAGsAaQAuAHMAZQBjAGMAYQB0AAEHLgBjAGMAAAcuAGMAZAAACy4AYwBkAGQAYQAA
CS4AYwBkAGYAACNhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AYwBkAGYAAQkuAGMAZQByAAA1
YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHgANQAwADkALQBjAGEALQBjAGUAcgB0AAEJLgBj
AGgAbQAADS4AYwBsAGEAcwBzAAAzYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAGoAYQB2AGEA
LQBhAHAAcABsAGUAdAABCS4AYwBsAHAAAClhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AbQBz
AGMAbABpAHAAAQkuAGMAbQB4AAAXaQBtAGEAZwBlAC8AeAAtAGMAbQB4AAEJLgBjAG4AZgAACS4A
YwBvAGQAABtpAG0AYQBnAGUALwBjAGkAcwAtAGMAbwBkAAEPLgBjAG8AbgBmAGkAZwAAES4AYwBv
AG4AdABhAGMAdAAAI3QAZQB4AHQALwB4AC0AbQBzAC0AYwBvAG4AdABhAGMAdAABEy4AYwBvAHYA
ZQByAGEAZwBlAAALLgBjAHAAaQBvAAAlYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAGMAcABp
AG8AAQkuAGMAcABwAAAJLgBjAHIAZAAAMWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQBtAHMA
YwBhAHIAZABmAGkAbABlAAEJLgBjAHIAbAAAKWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHAAawBp
AHgALQBjAHIAbAABCS4AYwByAHQAAAcuAGMAcwAAES4AYwBzAGQAcAByAG8AagAACS4AYwBzAGgA
ACNhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AYwBzAGgAAQ8uAGMAcwBwAHIAbwBqAAAJLgBj
AHMAcwAAEXQAZQB4AHQALwBjAHMAcwAACS4AYwBzAHYAABF0AGUAeAB0AC8AYwBzAHYAAAkuAGMA
dQByAAAJLgBjAHgAeAAACS4AZABhAHQAABcuAGQAYQB0AGEAcwBvAHUAcgBjAGUAAA8uAGQAYgBw
AHIAbwBqAAAJLgBkAGMAcgAALWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQBkAGkAcgBlAGMA
dABvAHIAAQkuAGQAZQBmAAAPLgBkAGUAcABsAG8AeQAACS4AZABlAHIAAAsuAGQAZwBtAGwAAAku
AGQAaQBiAAAJLgBkAGkAZgAAFXYAaQBkAGUAbwAvAHgALQBkAHYAAQkuAGQAaQByAAANLgBkAGkA
cwBjAG8AAAkuAGQAbABsAAAxYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAG0AcwBkAG8AdwBu
AGwAbwBhAGQAARcuAGQAbABsAC4AYwBvAG4AZgBpAGcAAAkuAGQAbABtAAARdABlAHgAdAAvAGQA
bABtAAAJLgBkAG8AYwAAJWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAG0AcwB3AG8AcgBkAAALLgBk
AG8AYwBtAABhYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBuAGQALgBtAHMALQB3AG8AcgBkAC4A
ZABvAGMAdQBtAGUAbgB0AC4AbQBhAGMAcgBvAEUAbgBhAGIAbABlAGQALgAxADIAAQsuAGQAbwBj
AHgAAICPYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBuAGQALgBvAHAAZQBuAHgAbQBsAGYAbwBy
AG0AYQB0AHMALQBvAGYAZgBpAGMAZQBkAG8AYwB1AG0AZQBuAHQALgB3AG8AcgBkAHAAcgBvAGMA
ZQBzAHMAaQBuAGcAbQBsAC4AZABvAGMAdQBtAGUAbgB0AAEJLgBkAG8AdAAACy4AZABvAHQAbQAA
YWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHYAbgBkAC4AbQBzAC0AdwBvAHIAZAAuAHQAZQBtAHAA
bABhAHQAZQAuAG0AYQBjAHIAbwBFAG4AYQBiAGwAZQBkAC4AMQAyAAELLgBkAG8AdAB4AACAj2EA
cABwAGwAaQBjAGEAdABpAG8AbgAvAHYAbgBkAC4AbwBwAGUAbgB4AG0AbABmAG8AcgBtAGEAdABz
AC0AbwBmAGYAaQBjAGUAZABvAGMAdQBtAGUAbgB0AC4AdwBvAHIAZABwAHIAbwBjAGUAcwBzAGkA
bgBnAG0AbAAuAHQAZQBtAHAAbABhAHQAZQABCS4AZABzAHAAAAkuAGQAcwB3AAAJLgBkAHQAZAAA
FS4AZAB0AHMAQwBvAG4AZgBpAGcAAAcuAGQAdgAACS4AZAB2AGkAACNhAHAAcABsAGkAYwBhAHQA
aQBvAG4ALwB4AC0AZAB2AGkAAQkuAGQAdwBmAAAbZAByAGEAdwBpAG4AZwAvAHgALQBkAHcAZgAB
CS4AZAB3AHAAAAkuAGQAeAByAAAJLgBlAG0AbAAAHW0AZQBzAHMAYQBnAGUALwByAGYAYwA4ADIA
MgAACS4AZQBtAHoAAAkuAGUAbwB0AAAJLgBlAHAAcwAACS4AZQB0AGwAAB9hAHAAcABsAGkAYwBh
AHQAaQBvAG4ALwBlAHQAbAAACS4AZQB0AHgAABt0AGUAeAB0AC8AeAAtAHMAZQB0AGUAeAB0AAEJ
LgBlAHYAeQAAI2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAGUAbgB2AG8AeQAACS4AZQB4AGUAABcu
AGUAeABlAC4AYwBvAG4AZgBpAGcAAAkuAGYAZABmAAAnYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8A
dgBuAGQALgBmAGQAZgAACS4AZgBpAGYAAClhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBmAHIAYQBj
AHQAYQBsAHMAABEuAGYAaQBsAHQAZQByAHMAAB9BAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AG0A
bAAACS4AZgBsAGEAAAkuAGYAbAByAAAdeAAtAHcAbwByAGwAZAAvAHgALQB2AHIAbQBsAAEJLgBm
AGwAdgAAF3YAaQBkAGUAbwAvAHgALQBmAGwAdgABEy4AZgBzAHMAYwByAGkAcAB0AAAzYQBwAHAA
bABpAGMAYQB0AGkAbwBuAC8AZgBzAGgAYQByAHAALQBzAGMAcgBpAHAAdAABCS4AZgBzAHgAABku
AGcAZQBuAGUAcgBpAGMAdABlAHMAdAAACS4AZwBpAGYAABNpAG0AYQBnAGUALwBnAGkAZgAADS4A
ZwByAG8AdQBwAAAfdABlAHgAdAAvAHgALQBtAHMALQBnAHIAbwB1AHAAAQkuAGcAcwBtAAAXYQB1
AGQAaQBvAC8AeAAtAGcAcwBtAAELLgBnAHQAYQByAAAlYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8A
eAAtAGcAdABhAHIAAQcuAGcAegAAJWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQBnAHoAaQBw
AAEFLgBoAAAJLgBoAGQAZgAAI2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQBoAGQAZgABCy4A
aABkAG0AbAAAF3QAZQB4AHQALwB4AC0AaABkAG0AbAABCS4AaABoAGMAAC9hAHAAcABsAGkAYwBh
AHQAaQBvAG4ALwB4AC0AbwBsAGUAbwBiAGoAZQBjAHQAAQkuAGgAaABrAAAJLgBoAGgAcAAACS4A
aABsAHAAACVhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB3AGkAbgBoAGwAcAAACS4AaABwAHAAAAku
AGgAcQB4AAAxYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AbQBhAGMALQBiAGkAbgBoAGUAeAA0ADAA
AQkuAGgAdABhAAAfYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AaAB0AGEAAAkuAGgAdABjAAAhdABl
AHgAdAAvAHgALQBjAG8AbQBwAG8AbgBlAG4AdAABCS4AaAB0AG0AABN0AGUAeAB0AC8AaAB0AG0A
bAAACS4AaAB0AHQAACF0AGUAeAB0AC8AdwBlAGIAdgBpAGUAdwBoAHQAbQBsAAAJLgBoAHgAYQAA
CS4AaAB4AGMAAAkuAGgAeABkAAAJLgBoAHgAZQAACS4AaAB4AGYAAAkuAGgAeABoAAAJLgBoAHgA
aQAACS4AaAB4AGsAAAkuAGgAeABxAAAJLgBoAHgAcgAACS4AaAB4AHMAAAkuAGgAeAB0AAAJLgBo
AHgAdgAACS4AaAB4AHcAAAkuAGgAeAB4AAAFLgBpAAAJLgBpAGMAbwAAGWkAbQBhAGcAZQAvAHgA
LQBpAGMAbwBuAAEJLgBpAGMAcwAACS4AaQBkAGwAAAkuAGkAZQBmAAATaQBtAGEAZwBlAC8AaQBl
AGYAAAkuAGkAaQBpAAApYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAGkAcABoAG8AbgBlAAEJ
LgBpAG4AYwAACS4AaQBuAGYAAAkuAGkAbgBsAAAJLgBpAG4AcwAAO2EAcABwAGwAaQBjAGEAdABp
AG8AbgAvAHgALQBpAG4AdABlAHIAbgBlAHQALQBzAGkAZwBuAHUAcAABCS4AaQBwAGEAADFhAHAA
cABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AaQB0AHUAbgBlAHMALQBpAHAAYQABCS4AaQBwAGcAADFh
AHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AaQB0AHUAbgBlAHMALQBpAHAAZwABDy4AaQBwAHAA
cgBvAGoAAAsuAGkAcABzAHcAADNhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AaQB0AHUAbgBl
AHMALQBpAHAAcwB3AAEJLgBpAHEAeQAAG3QAZQB4AHQALwB4AC0AbQBzAC0AaQBxAHkAAQkuAGkA
cwBwAAAJLgBpAHQAZQAAMWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQBpAHQAdQBuAGUAcwAt
AGkAdABlAAELLgBpAHQAbABwAAAzYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAGkAdAB1AG4A
ZQBzAC0AaQB0AGwAcAABCy4AaQB0AG0AcwAAM2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQBp
AHQAdQBuAGUAcwAtAGkAdABtAHMAAQsuAGkAdABwAGMAADNhAHAAcABsAGkAYwBhAHQAaQBvAG4A
LwB4AC0AaQB0AHUAbgBlAHMALQBpAHQAcABjAAEJLgBJAFYARgAAF3YAaQBkAGUAbwAvAHgALQBp
AHYAZgABCS4AagBhAHIAADFhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBqAGEAdgBhAC0AYQByAGMA
aABpAHYAZQABCy4AagBhAHYAYQAACS4AagBjAGsAADFhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBs
AGkAcQB1AGkAZABtAG8AdABpAG8AbgAACS4AagBjAHoAAAsuAGoAZgBpAGYAABdpAG0AYQBnAGUA
LwBwAGoAcABlAGcAAAsuAGoAbgBsAHAAADlhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AagBh
AHYAYQAtAGoAbgBsAHAALQBmAGkAbABlAAEJLgBqAHAAYgAACS4AagBwAGUAABVpAG0AYQBnAGUA
LwBqAHAAZQBnAAALLgBqAHAAZQBnAAAJLgBqAHAAZwAABy4AagBzAAAxYQBwAHAAbABpAGMAYQB0
AGkAbwBuAC8AeAAtAGoAYQB2AGEAcwBjAHIAaQBwAHQAAQsuAGoAcwBvAG4AACFhAHAAcABsAGkA
YwBhAHQAaQBvAG4ALwBqAHMAbwBuAAAJLgBqAHMAeAAAGXQAZQB4AHQALwBqAHMAYwByAGkAcAB0
AAAPLgBqAHMAeABiAGkAbgAADS4AbABhAHQAZQB4AAAnYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8A
eAAtAGwAYQB0AGUAeAABFy4AbABpAGIAcgBhAHIAeQAtAG0AcwABP2EAcABwAGwAaQBjAGEAdABp
AG8AbgAvAHcAaQBuAGQAbwB3AHMALQBsAGkAYgByAGEAcgB5ACsAeABtAGwAAQkuAGwAaQB0AAAv
YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAG0AcwAtAHIAZQBhAGQAZQByAAETLgBsAG8AYQBk
AHQAZQBzAHQAAAkuAGwAcABrAAAJLgBsAHMAZgAAHXYAaQBkAGUAbwAvAHgALQBsAGEALQBhAHMA
ZgABCS4AbABzAHQAAAkuAGwAcwB4AAAJLgBsAHoAaAAACS4AbQAxADMAADNhAHAAcABsAGkAYwBh
AHQAaQBvAG4ALwB4AC0AbQBzAG0AZQBkAGkAYQB2AGkAZQB3AAEJLgBtADEANAAACS4AbQAxAHYA
ABV2AGkAZABlAG8ALwBtAHAAZQBnAAAJLgBtADIAdAAAL3YAaQBkAGUAbwAvAHYAbgBkAC4AZABs
AG4AYQAuAG0AcABlAGcALQB0AHQAcwABCy4AbQAyAHQAcwAACS4AbQAyAHYAAAkuAG0AMwB1AAAf
YQB1AGQAaQBvAC8AeAAtAG0AcABlAGcAdQByAGwAAQsuAG0AMwB1ADgAAAkuAG0ANABhAAATYQB1
AGQAaQBvAC8AbQA0AGEAAAkuAG0ANABiAAATYQB1AGQAaQBvAC8AbQA0AGIAAAkuAG0ANABwAAAT
YQB1AGQAaQBvAC8AbQA0AHAAAAkuAG0ANAByAAAXYQB1AGQAaQBvAC8AeAAtAG0ANAByAAEJLgBt
ADQAdgAAF3YAaQBkAGUAbwAvAHgALQBtADQAdgABCS4AbQBhAGMAACFpAG0AYQBnAGUALwB4AC0A
bQBhAGMAcABhAGkAbgB0AAEJLgBtAGEAawAACS4AbQBhAG4AAC9hAHAAcABsAGkAYwBhAHQAaQBv
AG4ALwB4AC0AdAByAG8AZgBmAC0AbQBhAG4AARMuAG0AYQBuAGkAZgBlAHMAdAAAM2EAcABwAGwA
aQBjAGEAdABpAG8AbgAvAHgALQBtAHMALQBtAGEAbgBpAGYAZQBzAHQAAQkuAG0AYQBwAAAPLgBt
AGEAcwB0AGUAcgAACS4AbQBkAGEAAAkuAG0AZABiAAAtYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8A
eAAtAG0AcwBhAGMAYwBlAHMAcwABCS4AbQBkAGUAAAkuAG0AZABwAAAHLgBtAGUAAC1hAHAAcABs
AGkAYwBhAHQAaQBvAG4ALwB4AC0AdAByAG8AZgBmAC0AbQBlAAEJLgBtAGYAcAAAO2EAcABwAGwA
aQBjAGEAdABpAG8AbgAvAHgALQBzAGgAbwBjAGsAdwBhAHYAZQAtAGYAbABhAHMAaAABCS4AbQBo
AHQAAA0uAG0AaAB0AG0AbAAACS4AbQBpAGQAABNhAHUAZABpAG8ALwBtAGkAZAAACy4AbQBpAGQA
aQAACS4AbQBpAHgAAAcuAG0AawAACS4AbQBtAGYAACVhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4
AC0AcwBtAGEAZgABCS4AbQBuAG8AAAkuAG0AbgB5AAArYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8A
eAAtAG0AcwBtAG8AbgBlAHkAAQkuAG0AbwBkAAAJLgBtAG8AdgAAH3YAaQBkAGUAbwAvAHEAdQBp
AGMAawB0AGkAbQBlAAANLgBtAG8AdgBpAGUAACN2AGkAZABlAG8ALwB4AC0AcwBnAGkALQBtAG8A
dgBpAGUAAQkuAG0AcAAyAAALLgBtAHAAMgB2AAAJLgBtAHAAMwAAFWEAdQBkAGkAbwAvAG0AcABl
AGcAAAkuAG0AcAA0AAATdgBpAGQAZQBvAC8AbQBwADQAAAsuAG0AcAA0AHYAAAkuAG0AcABhAAAJ
LgBtAHAAZQAACy4AbQBwAGUAZwAACS4AbQBwAGYAAD9hAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB2
AG4AZAAuAG0AcwAtAG0AZQBkAGkAYQBwAGEAYwBrAGEAZwBlAAEJLgBtAHAAZwAACS4AbQBwAHAA
ADVhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB2AG4AZAAuAG0AcwAtAHAAcgBvAGoAZQBjAHQAAQsu
AG0AcAB2ADIAAAkuAG0AcQB2AAAHLgBtAHMAAC1hAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0A
dAByAG8AZgBmAC0AbQBzAAEJLgBtAHMAaQAACS4AbQBzAG8AAAkuAG0AdABzAAAJLgBtAHQAeAAA
CS4AbQB2AGIAAAkuAG0AdgBjAAA3YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAG0AaQB2AGEA
LQBjAG8AbQBwAGkAbABlAGQAAQkuAG0AeABwAAAlYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAt
AG0AbQB4AHAAAQcuAG4AYwAAKWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQBuAGUAdABjAGQA
ZgABCS4AbgBzAGMAAAkuAG4AdwBzAAAJLgBvAGMAeAAACS4AbwBkAGEAAB9hAHAAcABsAGkAYwBh
AHQAaQBvAG4ALwBvAGQAYQAACS4AbwBkAGMAABt0AGUAeAB0AC8AeAAtAG0AcwAtAG8AZABjAAEJ
LgBvAGQAaAAACS4AbwBkAGwAAAkuAG8AZABwAABfYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBu
AGQALgBvAGEAcwBpAHMALgBvAHAAZQBuAGQAbwBjAHUAbQBlAG4AdAAuAHAAcgBlAHMAZQBuAHQA
YQB0AGkAbwBuAAAJLgBvAGQAcwAAK2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAG8AbABlAG8AYgBq
AGUAYwB0AAAJLgBvAGQAdAAAT2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAHYAbgBkAC4AbwBhAHMA
aQBzAC4AbwBwAGUAbgBkAG8AYwB1AG0AZQBuAHQALgB0AGUAeAB0AAAJLgBvAG4AZQAAJ2EAcABw
AGwAaQBjAGEAdABpAG8AbgAvAG8AbgBlAG4AbwB0AGUAAAsuAG8AbgBlAGEAAA8uAG8AbgBlAHAA
awBnAAAPLgBvAG4AZQB0AG0AcAAADy4AbwBuAGUAdABvAGMAABEuAG8AbgBlAHQAbwBjADIAABku
AG8AcgBkAGUAcgBlAGQAdABlAHMAdAAACy4AbwBzAGQAeAAAS2EAcABwAGwAaQBjAGEAdABpAG8A
bgAvAG8AcABlAG4AcwBlAGEAcgBjAGgAZABlAHMAYwByAGkAcAB0AGkAbwBuACsAeABtAGwAAAku
AHAAMQAwAAAlYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AcABrAGMAcwAxADAAAAkuAHAAMQAyAAAp
YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHAAawBjAHMAMQAyAAEJLgBwADcAYgAAQWEAcABw
AGwAaQBjAGEAdABpAG8AbgAvAHgALQBwAGsAYwBzADcALQBjAGUAcgB0AGkAZgBpAGMAYQB0AGUA
cwABCS4AcAA3AGMAAC1hAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBwAGsAYwBzADcALQBtAGkAbQBl
AAEJLgBwADcAbQAACS4AcAA3AHIAAD9hAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AcABrAGMA
cwA3AC0AYwBlAHIAdAByAGUAcQByAGUAcwBwAAEJLgBwADcAcwAAN2EAcABwAGwAaQBjAGEAdABp
AG8AbgAvAHAAawBjAHMANwAtAHMAaQBnAG4AYQB0AHUAcgBlAAEJLgBwAGIAbQAAL2kAbQBhAGcA
ZQAvAHgALQBwAG8AcgB0AGEAYgBsAGUALQBiAGkAdABtAGEAcAABDS4AcABjAGEAcwB0AAArYQBw
AHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHAAbwBkAGMAYQBzAHQAAQkuAHAAYwB0AAAVaQBtAGEA
ZwBlAC8AcABpAGMAdAAACS4AcABjAHgAAAkuAHAAYwB6AAAJLgBwAGQAZgAAH2EAcABwAGwAaQBj
AGEAdABpAG8AbgAvAHAAZABmAAAJLgBwAGYAYgAACS4AcABmAG0AAAkuAHAAZgB4AAAJLgBwAGcA
bQAAMWkAbQBhAGcAZQAvAHgALQBwAG8AcgB0AGEAYgBsAGUALQBnAHIAYQB5AG0AYQBwAAEJLgBw
AGkAYwAACy4AcABpAGMAdAAADy4AcABrAGcAZABlAGYAABMuAHAAawBnAHUAbgBkAGUAZgAACS4A
cABrAG8AADVhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB2AG4AZAAuAG0AcwAtAHAAawBpAC4AcABr
AG8AAQkuAHAAbABzAAAXYQB1AGQAaQBvAC8AcwBjAHAAbABzAAAJLgBwAG0AYQAAK2EAcABwAGwA
aQBjAGEAdABpAG8AbgAvAHgALQBwAGUAcgBmAG0AbwBuAAEJLgBwAG0AYwAACS4AcABtAGwAAAku
AHAAbQByAAAJLgBwAG0AdwAACS4AcABuAGcAABNpAG0AYQBnAGUALwBwAG4AZwAACS4AcABuAG0A
AC9pAG0AYQBnAGUALwB4AC0AcABvAHIAdABhAGIAbABlAC0AYQBuAHkAbQBhAHAAAQkuAHAAbgB0
AAALLgBwAG4AdABnAAAJLgBwAG4AegAACS4AcABvAHQAADthAHAAcABsAGkAYwBhAHQAaQBvAG4A
LwB2AG4AZAAuAG0AcwAtAHAAbwB3AGUAcgBwAG8AaQBuAHQAAQsuAHAAbwB0AG0AAG1hAHAAcABs
AGkAYwBhAHQAaQBvAG4ALwB2AG4AZAAuAG0AcwAtAHAAbwB3AGUAcgBwAG8AaQBuAHQALgB0AGUA
bQBwAGwAYQB0AGUALgBtAGEAYwByAG8ARQBuAGEAYgBsAGUAZAAuADEAMgABCy4AcABvAHQAeAAA
gIthAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB2AG4AZAAuAG8AcABlAG4AeABtAGwAZgBvAHIAbQBh
AHQAcwAtAG8AZgBmAGkAYwBlAGQAbwBjAHUAbQBlAG4AdAAuAHAAcgBlAHMAZQBuAHQAYQB0AGkA
bwBuAG0AbAAuAHQAZQBtAHAAbABhAHQAZQABCS4AcABwAGEAAAsuAHAAcABhAG0AAGdhAHAAcABs
AGkAYwBhAHQAaQBvAG4ALwB2AG4AZAAuAG0AcwAtAHAAbwB3AGUAcgBwAG8AaQBuAHQALgBhAGQA
ZABpAG4ALgBtAGEAYwByAG8ARQBuAGEAYgBsAGUAZAAuADEAMgABCS4AcABwAG0AAC9pAG0AYQBn
AGUALwB4AC0AcABvAHIAdABhAGIAbABlAC0AcABpAHgAbQBhAHAAAQkuAHAAcABzAAALLgBwAHAA
cwBtAABvYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBuAGQALgBtAHMALQBwAG8AdwBlAHIAcABv
AGkAbgB0AC4AcwBsAGkAZABlAHMAaABvAHcALgBtAGEAYwByAG8ARQBuAGEAYgBsAGUAZAAuADEA
MgABCy4AcABwAHMAeAAAgI1hAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB2AG4AZAAuAG8AcABlAG4A
eABtAGwAZgBvAHIAbQBhAHQAcwAtAG8AZgBmAGkAYwBlAGQAbwBjAHUAbQBlAG4AdAAuAHAAcgBl
AHMAZQBuAHQAYQB0AGkAbwBuAG0AbAAuAHMAbABpAGQAZQBzAGgAbwB3AAEJLgBwAHAAdAAACy4A
cABwAHQAbQAAdWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHYAbgBkAC4AbQBzAC0AcABvAHcAZQBy
AHAAbwBpAG4AdAAuAHAAcgBlAHMAZQBuAHQAYQB0AGkAbwBuAC4AbQBhAGMAcgBvAEUAbgBhAGIA
bABlAGQALgAxADIAAQsuAHAAcAB0AHgAAICTYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBuAGQA
LgBvAHAAZQBuAHgAbQBsAGYAbwByAG0AYQB0AHMALQBvAGYAZgBpAGMAZQBkAG8AYwB1AG0AZQBu
AHQALgBwAHIAZQBzAGUAbgB0AGEAdABpAG8AbgBtAGwALgBwAHIAZQBzAGUAbgB0AGEAdABpAG8A
bgABCS4AcAByAGYAAC1hAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBwAGkAYwBzAC0AcgB1AGwAZQBz
AAEJLgBwAHIAbQAACS4AcAByAHgAAAcuAHAAcwAACy4AcABzAGMAMQAALWEAcABwAGwAaQBjAGEA
dABpAG8AbgAvAFAAbwB3AGUAcgBTAGgAZQBsAGwAAAkuAHAAcwBkAAANLgBwAHMAZQBzAHMAAAku
AHAAcwBtAAAJLgBwAHMAcAAACS4AcAB1AGIAADNhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0A
bQBzAHAAdQBiAGwAaQBzAGgAZQByAAEJLgBwAHcAegAACS4AcQBoAHQAACt0AGUAeAB0AC8AeAAt
AGgAdABtAGwALQBpAG4AcwBlAHIAdABpAG8AbgABCy4AcQBoAHQAbQAABy4AcQB0AAAJLgBxAHQA
aQAAI2kAbQBhAGcAZQAvAHgALQBxAHUAaQBjAGsAdABpAG0AZQABCy4AcQB0AGkAZgAACS4AcQB0
AGwAADthAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AcQB1AGkAYwBrAHQAaQBtAGUAcABsAGEA
eQBlAHIAAQkuAHEAeABkAAAHLgByAGEAAClhAHUAZABpAG8ALwB4AC0AcABuAC0AcgBlAGEAbABh
AHUAZABpAG8AAQkuAHIAYQBtAAAJLgByAGEAcgAACS4AcgBhAHMAACVpAG0AYQBnAGUALwB4AC0A
YwBtAHUALQByAGEAcwB0AGUAcgABCS4AcgBhAHQAAClhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBy
AGEAdAAtAGYAaQBsAGUAAQcuAHIAYwAACS4AcgBjADIAAAkuAHIAYwB0AAALLgByAGQAbABjAAAL
LgByAGUAcwB4AAAHLgByAGYAAC1pAG0AYQBnAGUALwB2AG4AZAAuAHIAbgAtAHIAZQBhAGwAZgBs
AGEAcwBoAAEJLgByAGcAYgAAF2kAbQBhAGcAZQAvAHgALQByAGcAYgABCS4AcgBnAHMAAAcuAHIA
bQAAOWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHYAbgBkAC4AcgBuAC0AcgBlAGEAbABtAGUAZABp
AGEAAQkuAHIAbQBpAAAJLgByAG0AcAAAR2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAHYAbgBkAC4A
cgBuAC0AcgBuAF8AbQB1AHMAaQBjAF8AcABhAGMAawBhAGcAZQABCy4AcgBvAGYAZgAAJ2EAcABw
AGwAaQBjAGEAdABpAG8AbgAvAHgALQB0AHIAbwBmAGYAAQkuAHIAcABtAAA3YQB1AGQAaQBvAC8A
eAAtAHAAbgAtAHIAZQBhAGwAYQB1AGQAaQBvAC0AcABsAHUAZwBpAG4AAQkuAHIAcQB5AAAbdABl
AHgAdAAvAHgALQBtAHMALQByAHEAeQABCS4AcgB0AGYAAB9hAHAAcABsAGkAYwBhAHQAaQBvAG4A
LwByAHQAZgAACS4AcgB0AHgAABt0AGUAeAB0AC8AcgBpAGMAaAB0AGUAeAB0AAARLgByAHUAbABl
AHMAZQB0AAAFLgBzAAAXLgBzAGEAZgBhAHIAaQBlAHgAdAB6AAA/YQBwAHAAbABpAGMAYQB0AGkA
bwBuAC8AeAAtAHMAYQBmAGEAcgBpAC0AcwBhAGYAYQByAGkAZQB4AHQAegABCS4AcwBjAGQAADFh
AHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AbQBzAHMAYwBoAGUAZAB1AGwAZQABCS4AcwBjAHQA
AB10AGUAeAB0AC8AcwBjAHIAaQBwAHQAbABlAHQAAAkuAHMAZAAyAAAXYQB1AGQAaQBvAC8AeAAt
AHMAZAAyAAEJLgBzAGQAcAAAH2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAHMAZABwAAAJLgBzAGUA
YQAAJy4AcwBlAGEAcgBjAGgAQwBvAG4AbgBlAGMAdABvAHIALQBtAHMAAVFhAHAAcABsAGkAYwBh
AHQAaQBvAG4ALwB3AGkAbgBkAG8AdwBzAC0AcwBlAGEAcgBjAGgALQBjAG8AbgBuAGUAYwB0AG8A
cgArAHgAbQBsAAEPLgBzAGUAdABwAGEAeQAARWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHMAZQB0
AC0AcABhAHkAbQBlAG4AdAAtAGkAbgBpAHQAaQBhAHQAaQBvAG4AAQ8uAHMAZQB0AHIAZQBnAABP
YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AcwBlAHQALQByAGUAZwBpAHMAdAByAGEAdABpAG8AbgAt
AGkAbgBpAHQAaQBhAHQAaQBvAG4AARMuAHMAZQB0AHQAaQBuAGcAcwAADS4AcwBnAGkAbQBiAAAn
YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHMAZwBpAG0AYgABCy4AcwBnAG0AbAAAE3QAZQB4
AHQALwBzAGcAbQBsAAAHLgBzAGgAACFhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AcwBoAAEL
LgBzAGgAYQByAAAlYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHMAaABhAHIAAQ0uAHMAaAB0
AG0AbAAACS4AcwBpAHQAACthAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AcwB0AHUAZgBmAGkA
dAABES4AcwBpAHQAZQBtAGEAcAAACy4AcwBrAGkAbgAACy4AcwBsAGQAbQAAZ2EAcABwAGwAaQBj
AGEAdABpAG8AbgAvAHYAbgBkAC4AbQBzAC0AcABvAHcAZQByAHAAbwBpAG4AdAAuAHMAbABpAGQA
ZQAuAG0AYQBjAHIAbwBFAG4AYQBiAGwAZQBkAC4AMQAyAAELLgBzAGwAZAB4AACAhWEAcABwAGwA
aQBjAGEAdABpAG8AbgAvAHYAbgBkAC4AbwBwAGUAbgB4AG0AbABmAG8AcgBtAGEAdABzAC0AbwBm
AGYAaQBjAGUAZABvAGMAdQBtAGUAbgB0AC4AcAByAGUAcwBlAG4AdABhAHQAaQBvAG4AbQBsAC4A
cwBsAGkAZABlAAEJLgBzAGwAawAAMWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHYAbgBkAC4AbQBz
AC0AZQB4AGMAZQBsAAEJLgBzAGwAbgAAFS4AcwBsAHUAcABrAGcALQBtAHMAATFhAHAAcABsAGkA
YwBhAHQAaQBvAG4ALwB4AC0AbQBzAC0AbABpAGMAZQBuAHMAZQABCS4AcwBtAGQAABdhAHUAZABp
AG8ALwB4AC0AcwBtAGQAAQkuAHMAbQBpAAAJLgBzAG0AeAAACS4AcwBtAHoAAAkuAHMAbgBkAAAR
LgBzAG4AaQBwAHAAZQB0AAAJLgBzAG4AcAAACS4AcwBvAGwAAAkuAHMAbwByAAAJLgBzAHAAYwAA
CS4AcwBwAGwAADFhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBmAHUAdAB1AHIAZQBzAHAAbABhAHMA
aAAACS4AcwByAGMAADNhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AdwBhAGkAcwAtAHMAbwB1
AHIAYwBlAAEJLgBzAHIAZgAALy4AUwBTAEkAUwBEAGUAcABsAG8AeQBtAGUAbgB0AE0AYQBuAGkA
ZgBlAHMAdAAACS4AcwBzAG0AADVhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBzAHQAcgBlAGEAbQBp
AG4AZwBtAGUAZABpAGEAAAkuAHMAcwB0AABBYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBuAGQA
LgBtAHMALQBwAGsAaQAuAGMAZQByAHQAcwB0AG8AcgBlAAEJLgBzAHQAbAAANWEAcABwAGwAaQBj
AGEAdABpAG8AbgAvAHYAbgBkAC4AbQBzAC0AcABrAGkALgBzAHQAbAABES4AcwB2ADQAYwBwAGkA
bwAAK2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQBzAHYANABjAHAAaQBvAAEPLgBzAHYANABj
AHIAYwAAKWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQBzAHYANABjAHIAYwABCS4AcwB2AGMA
AAkuAHMAdwBmAAAFLgB0AAAJLgB0AGEAcgAAI2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQB0
AGEAcgABCS4AdABjAGwAACNhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AdABjAGwAAR0uAHQA
ZQBzAHQAcgB1AG4AYwBvAG4AZgBpAGcAABsuAHQAZQBzAHQAcwBlAHQAdABpAG4AZwBzAAAJLgB0
AGUAeAAAI2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQB0AGUAeAABCy4AdABlAHgAaQAAK2EA
cABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQB0AGUAeABpAG4AZgBvAAERLgB0AGUAeABpAG4AZgBv
AAAJLgB0AGcAegAAMWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQBjAG8AbQBwAHIAZQBzAHMA
ZQBkAAELLgB0AGgAbQB4AAA9YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBuAGQALgBtAHMALQBv
AGYAZgBpAGMAZQB0AGgAZQBtAGUAAQkuAHQAaABuAAAJLgB0AGkAZgAAFWkAbQBhAGcAZQAvAHQA
aQBmAGYAAAsuAHQAaQBmAGYAAAkuAHQAbABoAAAJLgB0AGwAaQAACS4AdABvAGMAAAcuAHQAcgAA
CS4AdAByAG0AADFhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AbQBzAHQAZQByAG0AaQBuAGEA
bAABCS4AdAByAHgAAAcuAHQAcwAACS4AdABzAHYAADN0AGUAeAB0AC8AdABhAGIALQBzAGUAcABh
AHIAYQB0AGUAZAAtAHYAYQBsAHUAZQBzAAEJLgB0AHQAZgAACS4AdAB0AHMAAAkuAHQAeAB0AAAJ
LgB1ADMAMgAACS4AdQBsAHMAABN0AGUAeAB0AC8AaQB1AGwAcwAACy4AdQBzAGUAcgAADS4AdQBz
AHQAYQByAAAnYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHUAcwB0AGEAcgABBy4AdgBiAAAR
LgB2AGIAZABwAHIAbwBqAAAJLgB2AGIAawAADy4AdgBiAHAAcgBvAGoAAAkuAHYAYgBzAAAbdABl
AHgAdAAvAHYAYgBzAGMAcgBpAHAAdAAACS4AdgBjAGYAABl0AGUAeAB0AC8AeAAtAHYAYwBhAHIA
ZAABDy4AdgBjAHAAcgBvAGoAAAkuAHYAYwBzAAARLgB2AGMAeABwAHIAbwBqAAARLgB2AGQAZABw
AHIAbwBqAAAJLgB2AGQAcAAADy4AdgBkAHAAcgBvAGoAAAkuAHYAZAB4AAA/YQBwAHAAbABpAGMA
YQB0AGkAbwBuAC8AdgBuAGQALgBtAHMALQB2AGkAcwBpAG8ALgB2AGkAZQB3AGUAcgABCS4AdgBt
AGwAABUuAHYAcwBjAG8AbgB0AGUAbgB0AAALLgB2AHMAYwB0AAAJLgB2AHMAZAAAK2EAcABwAGwA
aQBjAGEAdABpAG8AbgAvAHYAbgBkAC4AdgBpAHMAaQBvAAAJLgB2AHMAaQAAJWEAcABwAGwAaQBj
AGEAdABpAG8AbgAvAG0AcwAtAHYAcwBpAAELLgB2AHMAaQB4AAAhYQBwAHAAbABpAGMAYQB0AGkA
bwBuAC8AdgBzAGkAeAAAGy4AdgBzAGkAeABsAGEAbgBnAHAAYQBjAGsAABsuAHYAcwBpAHgAbQBh
AG4AaQBmAGUAcwB0AAANLgB2AHMAbQBkAGkAAA8uAHYAcwBwAHMAYwBjAAAJLgB2AHMAcwAADS4A
dgBzAHMAYwBjAAAXLgB2AHMAcwBlAHQAdABpAG4AZwBzAAAPLgB2AHMAcwBzAGMAYwAACS4AdgBz
AHQAABcuAHYAcwB0AGUAbQBwAGwAYQB0AGUAAAsuAHYAcwB0AG8AACthAHAAcABsAGkAYwBhAHQA
aQBvAG4ALwB4AC0AbQBzAC0AdgBzAHQAbwABCS4AdgBzAHcAAAkuAHYAcwB4AAAJLgB2AHQAeAAA
CS4AdwBhAHYAABNhAHUAZABpAG8ALwB3AGEAdgAACy4AdwBhAHYAZQAACS4AdwBhAHgAAB1hAHUA
ZABpAG8ALwB4AC0AbQBzAC0AdwBhAHgAAQkuAHcAYgBrAAALLgB3AGIAbQBwAAAlaQBtAGEAZwBl
AC8AdgBuAGQALgB3AGEAcAAuAHcAYgBtAHAAAAkuAHcAYwBtAAAxYQBwAHAAbABpAGMAYQB0AGkA
bwBuAC8AdgBuAGQALgBtAHMALQB3AG8AcgBrAHMAAQkuAHcAZABiAAAJLgB3AGQAcAAAJWkAbQBh
AGcAZQAvAHYAbgBkAC4AbQBzAC0AcABoAG8AdABvAAEXLgB3AGUAYgBhAHIAYwBoAGkAdgBlAAA/
YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHMAYQBmAGEAcgBpAC0AdwBlAGIAYQByAGMAaABp
AHYAZQABES4AdwBlAGIAdABlAHMAdAAACS4AdwBpAHEAAAkuAHcAaQB6AAAJLgB3AGsAcwAACy4A
VwBMAE0AUAAAMWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHcAbABtAG8AdgBpAGUAbQBhAGsAZQBy
AAAZLgB3AGwAcABnAGkAbgBzAHQAYQBsAGwAADNhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0A
dwBsAHAAZwAtAGQAZQB0AGUAYwB0AAEbLgB3AGwAcABnAGkAbgBzAHQAYQBsAGwAMwAANWEAcABw
AGwAaQBjAGEAdABpAG8AbgAvAHgALQB3AGwAcABnADMALQBkAGUAdABlAGMAdAABBy4AdwBtAAAb
dgBpAGQAZQBvAC8AeAAtAG0AcwAtAHcAbQABCS4AdwBtAGEAAB1hAHUAZABpAG8ALwB4AC0AbQBz
AC0AdwBtAGEAAQkuAHcAbQBkAAApYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAG0AcwAtAHcA
bQBkAAEJLgB3AG0AZgAAMWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQBtAHMAbQBlAHQAYQBm
AGkAbABlAAEJLgB3AG0AbAAAIXQAZQB4AHQALwB2AG4AZAAuAHcAYQBwAC4AdwBtAGwAAAsuAHcA
bQBsAGMAADFhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB2AG4AZAAuAHcAYQBwAC4AdwBtAGwAYwAA
Cy4AdwBtAGwAcwAALXQAZQB4AHQALwB2AG4AZAAuAHcAYQBwAC4AdwBtAGwAcwBjAHIAaQBwAHQA
AA0uAHcAbQBsAHMAYwAAPWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHYAbgBkAC4AdwBhAHAALgB3
AG0AbABzAGMAcgBpAHAAdABjAAAJLgB3AG0AcAAAHXYAaQBkAGUAbwAvAHgALQBtAHMALQB3AG0A
cAABCS4AdwBtAHYAAB12AGkAZABlAG8ALwB4AC0AbQBzAC0AdwBtAHYAAQkuAHcAbQB4AAAddgBp
AGQAZQBvAC8AeAAtAG0AcwAtAHcAbQB4AAEJLgB3AG0AegAAKWEAcABwAGwAaQBjAGEAdABpAG8A
bgAvAHgALQBtAHMALQB3AG0AegABCS4AdwBwAGwAAC1hAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB2
AG4AZAAuAG0AcwAtAHcAcABsAAEJLgB3AHAAcwAACS4AdwByAGkAACthAHAAcABsAGkAYwBhAHQA
aQBvAG4ALwB4AC0AbQBzAHcAcgBpAHQAZQABCS4AdwByAGwAAAkuAHcAcgB6AAAJLgB3AHMAYwAA
Cy4AdwBzAGQAbAAACS4AdwB2AHgAAB12AGkAZABlAG8ALwB4AC0AbQBzAC0AdwB2AHgAAQUuAHgA
ACdhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBkAGkAcgBlAGMAdAB4AAAJLgB4AGEAZgAACy4AeABh
AG0AbAAAKWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgAYQBtAGwAKwB4AG0AbAAACS4AeABhAHAA
ADthAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AcwBpAGwAdgBlAHIAbABpAGcAaAB0AC0AYQBw
AHAAAQsuAHgAYgBhAHAAACthAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AbQBzAC0AeABiAGEA
cAABCS4AeABiAG0AAB9pAG0AYQBnAGUALwB4AC0AeABiAGkAdABtAGEAcAABCS4AeABkAHIAAAku
AHgAaAB0AAArYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeABoAHQAbQBsACsAeABtAGwAAA0uAHgA
aAB0AG0AbAAACS4AeABsAGEAAAsuAHgAbABhAG0AAF1hAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB2
AG4AZAAuAG0AcwAtAGUAeABjAGUAbAAuAGEAZABkAGkAbgAuAG0AYQBjAHIAbwBFAG4AYQBiAGwA
ZQBkAC4AMQAyAAEJLgB4AGwAYwAACS4AeABsAGQAAAkuAHgAbABrAAAJLgB4AGwAbAAACS4AeABs
AG0AAAkuAHgAbABzAAALLgB4AGwAcwBiAABrYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBuAGQA
LgBtAHMALQBlAHgAYwBlAGwALgBzAGgAZQBlAHQALgBiAGkAbgBhAHIAeQAuAG0AYQBjAHIAbwBF
AG4AYQBiAGwAZQBkAC4AMQAyAAELLgB4AGwAcwBtAABdYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8A
dgBuAGQALgBtAHMALQBlAHgAYwBlAGwALgBzAGgAZQBlAHQALgBtAGEAYwByAG8ARQBuAGEAYgBs
AGUAZAAuADEAMgABCy4AeABsAHMAeAAAgINhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB2AG4AZAAu
AG8AcABlAG4AeABtAGwAZgBvAHIAbQBhAHQAcwAtAG8AZgBmAGkAYwBlAGQAbwBjAHUAbQBlAG4A
dAAuAHMAcAByAGUAYQBkAHMAaABlAGUAdABtAGwALgBzAGgAZQBlAHQAAQkuAHgAbAB0AAALLgB4
AGwAdABtAABjYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBuAGQALgBtAHMALQBlAHgAYwBlAGwA
LgB0AGUAbQBwAGwAYQB0AGUALgBtAGEAYwByAG8ARQBuAGEAYgBsAGUAZAAuADEAMgABCy4AeABs
AHQAeAAAgIlhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB2AG4AZAAuAG8AcABlAG4AeABtAGwAZgBv
AHIAbQBhAHQAcwAtAG8AZgBmAGkAYwBlAGQAbwBjAHUAbQBlAG4AdAAuAHMAcAByAGUAYQBkAHMA
aABlAGUAdABtAGwALgB0AGUAbQBwAGwAYQB0AGUAAQkuAHgAbAB3AAAJLgB4AG0AbAAACy4AeABt
AHQAYQAACS4AeABvAGYAAAsuAFgATwBNAEwAAAkuAHgAcABtAAAfaQBtAGEAZwBlAC8AeAAtAHgA
cABpAHgAbQBhAHAAAQkuAHgAcABzAAA9YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBuAGQALgBt
AHMALQB4AHAAcwBkAG8AYwB1AG0AZQBuAHQAAQ8uAHgAcgBtAC0AbQBzAAEJLgB4AHMAYwAACS4A
eABzAGQAAAkuAHgAcwBmAAAJLgB4AHMAbAAACy4AeABzAGwAdAAACS4AeABzAG4AAAkuAHgAcwBz
AAAJLgB4AHQAcAAACS4AeAB3AGQAACdpAG0AYQBnAGUALwB4AC0AeAB3AGkAbgBkAG8AdwBkAHUA
bQBwAAEFLgB6AAAtYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAGMAbwBtAHAAcgBlAHMAcwAB
CS4AegBpAHAAADlhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AegBpAHAALQBjAG8AbQBwAHIA
ZQBzAHMAZQBkAAGAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQA
IABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBh
AGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kA
bgBwAHUAdAAgADAAAAljAGkAdAB5AAAPYwBvAHUAbgB0AHIAeQAADWMAbwB1AG4AdAB5AAATZgBp
AGwAZQBfAHAAYQB0AGgAABNmAGkAbABlAF8AdAB5AHAAZQAAD2kAcwBfAHAAYQBnAGUAAHFTAEMA
XwBmADgAMgAzADAAZAAwADIAYgAwADIAYwA0ADIANQA4ADgANQBhADYANAA5ADkAMwBhADcANAA0
AGQANQBkADMALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAANKgKB/1
xApJqh+m4EbtwXcABCABAQgDIAABBSABARERBCABAQ4FIAEBEV0MBwgODg4ODg4dDh0OAwcBDgQg
AQIOBQACDg4OBhUSOQIODgggAgITABATAQgHBg4ODg4ODgUAAgIODgQgAQgOAyAADgMgAAgFIAIO
Dg4EAAASdQYVEnkCDg4JIAEBFRJ9ARMAByACARMAEwEJIAMBEkEdCBJFAwYSQQMGHQgEIAEOCAUg
AgEIHAQgAQIIAyAAAgcgAgIOEYCFBSABHQgIBSAAEoCJBiABEoCNHAUAABKAkQYgARwSgJUEIAEB
HAgAARKAmRGAnQUgABKAoQcgAgEOEoChCLd6XFYZNOCJCImEXc2AgMyRBwYVEjkCDg4DBhIUAwYS
GAMGEkkDBhJVAwYSWQMGEiAFIAEBEgwEAAEODgYgAR0OHQ4DAAABBCABAQIJIAQBCA4SQRJFBSAB
ARJJBAAAElUEAAASWQUAAQESWQQAABIgAygADgMoAAIECAASVQQIABJZBAgAEiAIAQAIAAAAAAAe
AQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDX2Y4MjMwZDAyYjAy
YzQyNTg4NWE2NDk5M2E3NDRkNWQzAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTcAAEcBABou
TkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBG
cmFtZXdvcmsgNAQBAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3Vy
Y2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVi
bGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNv
dXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAHK4AAAAAAAAAAAAANq4AAAAgAAAAAAAAAAAA
AAAAAAAAAAAAAAAAACiuAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8l
ACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
wAAADgQAAAAAAAAAAAAADgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAGMCqRgAAAEAYwKpGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBG4DAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAEoDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8AZgA4ADIAMwAwAGQAMAAyAGIAMAAyAGMANAAyADUAOAA4ADUAYQA2ADQAOQA5ADMAYQA3ADQA
NABkADUAZAAzAAAAOgANAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMwAx
ADMALgA2ADEAMQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBmADgA
MgAzADAAZAAwADIAYgAwADIAYwA0ADIANQA4ADgANQBhADYANAA5ADkAMwBhADcANAA0AGQANQBk
ADMALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkA
cgBpAGcAaAB0ACAAQAAgACAAMgAwADEANwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBh
AHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMA
QwBfAGYAOAAyADMAMABkADAAMgBiADAAMgBjADQAMgA1ADgAOAA1AGEANgA0ADkAOQAzAGEANwA0
ADQAZAA1AGQAMwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMA
XwBmADgAMgAzADAAZAAwADIAYgAwADIAYwA0ADIANQA4ADgANQBhADYANAA5ADkAMwBhADcANAA0
AGQANQBkADMAAAA+AA0AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYA
MwAxADMALgA2ADEAMQAAAAAAQgANAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgAzADEAMwAuADYAMQAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAADAAAAEg+AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_f8230d02b02c425885a64993a744d5d3</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::city,User::country,User::county,User::file_path,User::file_type,User::is_page</property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">4e769c5ee6aefc6ec5d5e47d87b50eef</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\long log file load\file-conditionals.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file-conditionals.Inputs[Input 0].Columns[request_uri]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="request_uri"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[request_uri]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file-conditionals.Inputs[Input 0].Columns[filename]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="600"
                          cachedName="filename"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[filename]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file-conditionals.Inputs[Input 0].Columns[file_extension]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="600"
                          cachedName="file_extension"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[file_extension]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file-conditionals.Inputs[Input 0].Columns[type_of_file]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="600"
                          cachedName="type_of_file"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[type_of_file]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file-conditionals.Inputs[Input 0].Columns[is_page]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="600"
                          cachedName="is_page"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[is_page]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\file-conditionals.Inputs[Input 0].Columns[path_to_file]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="600"
                          cachedName="path_to_file"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[path_to_file]"
                          usageType="readWrite" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\file-conditionals.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\file-conditionals.Inputs[Input 0]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\long log file load\host dimension"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="host dimension"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[host dimension]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Log File catalog\long log file load\host dimension.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      connectionManagerRefId="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\long log file load\host dimension.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\host dimension.Inputs[OLE DB Destination Input].Columns[server_ip]"
                          cachedDataType="wstr"
                          cachedLength="12"
                          cachedName="server_ip"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\host dimension.Inputs[OLE DB Destination Input].ExternalColumns[server_ip]"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\host dimenstion transformations.Outputs[Derived Column Output].Columns[server_ip]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\host dimension.Inputs[OLE DB Destination Input].Columns[number_connection_attempts]"
                          cachedDataType="i4"
                          cachedName="number_connection_attempts"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\host dimension.Inputs[OLE DB Destination Input].ExternalColumns[number_connection_attempts]"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\host dimenstion transformations.Outputs[Derived Column Output].Columns[number_connection_attempts]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\host dimension.Inputs[OLE DB Destination Input].ExternalColumns[server_ip]"
                          dataType="wstr"
                          length="12"
                          name="server_ip" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\host dimension.Inputs[OLE DB Destination Input].ExternalColumns[number_connection_attempts]"
                          dataType="i4"
                          name="number_connection_attempts" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\host dimension.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\host dimension.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\host dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\host dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\host dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\host dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\long log file load\host dimenstion transformations"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="host dimenstion transformations"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\long log file load\host dimenstion transformations.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\host dimenstion transformations.Inputs[Derived Column Input].Columns[host_ip]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="host_ip"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[host_ip]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\host dimenstion transformations.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\host dimenstion transformations.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\host dimenstion transformations.Outputs[Derived Column Output].Columns[server_ip]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="12"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\host dimenstion transformations.Outputs[Derived Column Output].Columns[server_ip]"
                          name="server_ip"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[host_ip]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">host_ip</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\host dimenstion transformations.Outputs[Derived Column Output].Columns[number_connection_attempts]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\host dimenstion transformations.Outputs[Derived Column Output].Columns[number_connection_attempts]"
                          name="number_connection_attempts"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">0</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">0</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\host dimenstion transformations.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\host dimenstion transformations.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\host dimenstion transformations.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\host dimenstion transformations.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\host dimenstion transformations.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\host dimenstion transformations.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2)"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="2057"
                  name="Input ETL (file type 2)"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">true</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[long_log_file FFCM]"
                      connectionManagerRefId="Package.ConnectionManagers[long_log_file FFCM]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[date]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[date]"
                          name="date"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[time]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[time]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[time]"
                          name="time"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[host_ip]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[host_ip]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[host_ip]"
                          name="host_ip"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[method]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[method]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[method]"
                          name="method"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[request_uri]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[request_uri]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[request_uri]"
                          name="request_uri"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[port]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[port]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[port]"
                          name="port"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[user_ip]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[user_ip]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[user_ip]"
                          name="user_ip"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[user_browser]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[user_browser]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[user_browser]"
                          name="user_browser"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[response_code]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[response_code]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[response_code]"
                          name="response_code"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[substatus]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[substatus]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[substatus]"
                          name="substatus"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[time_taken]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[time_taken]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[time_taken]"
                          name="time_taken"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[cookie]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[cookie]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[cookie]"
                          name="cookie"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[referrer]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[referrer]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[referrer]"
                          name="referrer"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[win32_status]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[win32_status]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[win32_status]"
                          name="win32_status"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[sc_bytes]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[sc_bytes]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[sc_bytes]"
                          name="sc_bytes"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[cs_bytes]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[cs_bytes]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[cs_bytes]"
                          name="cs_bytes"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[date]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[time]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="time" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[host_ip]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="host_ip" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[method]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="method" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[request_uri]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="request_uri" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[junk]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="junk" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[port]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="port" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[junk1]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="junk1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[user_ip]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="user_ip" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[user_browser]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="user_browser" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[response_code]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="response_code" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[substatus]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="substatus" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[time_taken]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="time_taken" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[cookie]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="cookie" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[referrer]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="referrer" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[win32_status]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="win32_status" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[sc_bytes]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="sc_bytes" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].ExternalColumns[cs_bytes]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="cs_bytes" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\long log file load\Multicast"
                  componentClassID="Microsoft.Multicast"
                  contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                  name="Multicast">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\long log file load\Multicast.Inputs[Multicast Input 1]"
                      name="Multicast Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\Multicast.Outputs[Multicast Output 1]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 1"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\Multicast.Outputs[Multicast Output 2]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 2"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\Multicast.Outputs[Multicast Output 3]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 3"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\Multicast.Outputs[Multicast Output 6]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 6"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\Multicast.Outputs[Multicast Output 5]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 5"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\Multicast.Outputs[Multicast Output 4]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 4"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\long log file load\request dimension"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="request dimension"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[request dimension]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Log File catalog\long log file load\request dimension.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      connectionManagerRefId="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\long log file load\request dimension.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\request dimension.Inputs[OLE DB Destination Input].Columns[response_code]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="response_code"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\request dimension.Inputs[OLE DB Destination Input].ExternalColumns[response_code]"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Outputs[Derived Column Output].Columns[response_code]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\request dimension.Inputs[OLE DB Destination Input].Columns[time_taken]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="time_taken"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\request dimension.Inputs[OLE DB Destination Input].ExternalColumns[time_taken]"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Outputs[Derived Column Output].Columns[time_taken]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\request dimension.Inputs[OLE DB Destination Input].Columns[type]"
                          cachedDataType="wstr"
                          cachedLength="7"
                          cachedName="type"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\request dimension.Inputs[OLE DB Destination Input].ExternalColumns[type]"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Outputs[Derived Column Output].Columns[type]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\request dimension.Inputs[OLE DB Destination Input].Columns[request_uri]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="request_uri"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\request dimension.Inputs[OLE DB Destination Input].ExternalColumns[request_uri]"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output].Columns[request_uri]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\request dimension.Inputs[OLE DB Destination Input].ExternalColumns[request_uri]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="request_uri" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\request dimension.Inputs[OLE DB Destination Input].ExternalColumns[response_code]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="response_code" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\request dimension.Inputs[OLE DB Destination Input].ExternalColumns[time_taken]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="time_taken" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\request dimension.Inputs[OLE DB Destination Input].ExternalColumns[type]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="type" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\request dimension.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                          dataType="i4"
                          name="id" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\request dimension.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\request dimension.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\request dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\request dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\request dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\request dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\long log file load\time dimension"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="time dimension"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[time dimension]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Log File catalog\long log file load\time dimension.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      connectionManagerRefId="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\long log file load\time dimension.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\time dimension.Inputs[OLE DB Destination Input].Columns[hour]"
                          cachedDataType="i4"
                          cachedName="hour"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\time dimension.Inputs[OLE DB Destination Input].ExternalColumns[hour]"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[hour]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\time dimension.Inputs[OLE DB Destination Input].Columns[minute]"
                          cachedDataType="i4"
                          cachedName="minute"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\time dimension.Inputs[OLE DB Destination Input].ExternalColumns[minute]"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[minute]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\time dimension.Inputs[OLE DB Destination Input].Columns[second]"
                          cachedDataType="i4"
                          cachedName="second"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\long log file load\time dimension.Inputs[OLE DB Destination Input].ExternalColumns[second]"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[second]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\time dimension.Inputs[OLE DB Destination Input].ExternalColumns[hour]"
                          dataType="i4"
                          name="hour" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\time dimension.Inputs[OLE DB Destination Input].ExternalColumns[minute]"
                          dataType="i4"
                          name="minute" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\time dimension.Inputs[OLE DB Destination Input].ExternalColumns[second]"
                          dataType="i4"
                          name="second" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\time dimension.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\time dimension.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\time dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\time dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\time dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\time dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Time dimension transformations"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Inputs[Derived Column Input].Columns[date_formatted]"
                          cachedDataType="dbDate"
                          cachedName="date_formatted"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Inputs[Derived Column Input].Columns[time_formatted]"
                          cachedDataType="dbTime"
                          cachedName="time_formatted"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[time_formatted]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[month]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[month]"
                          name="month"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[MONTH](#{Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">MONTH(date_formatted)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[year]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[year]"
                          name="year"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[YEAR](#{Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">YEAR(date_formatted)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[day]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[day]"
                          name="day"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[DAY](#{Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">DAY(date_formatted)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[quarter]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[quarter]"
                          name="quarter"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[DATEPART]("quarter",#{Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">DATEPART("quarter",date_formatted)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[hour]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[hour]"
                          name="hour"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[DATEPART]("hour",#{Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[time_formatted]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">DATEPART("hour",time_formatted)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[week]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[week]"
                          name="week"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[DATEPART]("week",#{Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">DATEPART("week",date_formatted)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[minute]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[minute]"
                          name="minute"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[DATEPART]("minute",#{Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">DATEPART("minute",date_formatted)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[second]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[second]"
                          name="second"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[DATEPART]("second",#{Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">DATEPART("second",date_formatted)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[month_name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="9"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[month_name]"
                          name="month_name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">([MONTH](#{Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 1 ? "January" : [MONTH](#{Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 2 ? "February" : [MONTH](#{Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 3 ? "March" : [MONTH](#{Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 4 ? "April" : [MONTH](#{Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 5 ? "May" : [MONTH](#{Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 6 ? "June" : [MONTH](#{Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 7 ? "July" : [MONTH](#{Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 8 ? "August" : [MONTH](#{Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 9 ? "September" : [MONTH](#{Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 10 ? "October" : [MONTH](#{Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 11 ? "November" : [MONTH](#{Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 12 ? "December" : "")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(MONTH(date_formatted) == 1 ? "January" : MONTH(date_formatted) == 2 ? "February" : MONTH(date_formatted) == 3 ? "March" : MONTH(date_formatted) == 4 ? "April" : MONTH(date_formatted) == 5 ? "May" : MONTH(date_formatted) == 6 ? "June" : MONTH(date_formatted) == 7 ? "July" : MONTH(date_formatted) == 8 ? "August" : MONTH(date_formatted) == 9 ? "September" : MONTH(date_formatted) == 10 ? "October" : MONTH(date_formatted) == 11 ? "November" : MONTH(date_formatted) == 12 ? "December" : "")</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Log File catalog\long log file load.Paths[Conditional Split Default Output]"
                  endId="Package\Foreach Loop Log File catalog\long log file load\Multicast.Inputs[Multicast Input 1]"
                  name="Conditional Split Default Output"
                  startId="Package\Foreach Loop Log File catalog\long log file load\Conditional Split.Outputs[Conditional Split Default Output]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\long log file load.Paths[Data Conversion Error Output]"
                  endId="Package\Foreach Loop Log File catalog\long log file load\conversion errors.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Error Output"
                  startId="Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Error Output]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\long log file load.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Inputs[Derived Column Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Log File catalog\long log file load\convert string to date.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\long log file load.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Log File catalog\long log file load\divide codes.Inputs[Input 0]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\long log file load.Paths[Derived Column Output1]"
                  endId="Package\Foreach Loop Log File catalog\long log file load\divide date and time.Inputs[Multicast Input 1]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\long log file load.Paths[Derived Column Output2]"
                  endId="Package\Foreach Loop Log File catalog\long log file load\Conditional Split.Inputs[Conditional Split Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Log File catalog\long log file load\add ID.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\long log file load.Paths[Derived Column Output3]"
                  endId="Package\Foreach Loop Log File catalog\long log file load\client dimension.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\long log file load.Paths[Derived Column Output4]"
                  endId="Package\Foreach Loop Log File catalog\long log file load\file-conditionals.Inputs[Input 0]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\long log file load.Paths[Derived Column Output5]"
                  endId="Package\Foreach Loop Log File catalog\long log file load\host dimension.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Log File catalog\long log file load\host dimenstion transformations.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\long log file load.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Log File catalog\long log file load\add ID.Inputs[Derived Column Input]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2).Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\long log file load.Paths[Multicast Output 1]"
                  endId="Package\Foreach Loop Log File catalog\long log file load\convert string to date.Inputs[Data Conversion Input]"
                  name="Multicast Output 1"
                  startId="Package\Foreach Loop Log File catalog\long log file load\Multicast.Outputs[Multicast Output 1]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\long log file load.Paths[Multicast Output 11]"
                  endId="Package\Foreach Loop Log File catalog\long log file load\time dimension.Inputs[OLE DB Destination Input]"
                  name="Multicast Output 1"
                  startId="Package\Foreach Loop Log File catalog\long log file load\divide date and time.Outputs[Multicast Output 1]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\long log file load.Paths[Multicast Output 2]"
                  endId="Package\Foreach Loop Log File catalog\long log file load\date dimenstion.Inputs[OLE DB Destination Input]"
                  name="Multicast Output 2"
                  startId="Package\Foreach Loop Log File catalog\long log file load\divide date and time.Outputs[Multicast Output 2]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\long log file load.Paths[Multicast Output 21]"
                  endId="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations.Inputs[Derived Column Input]"
                  name="Multicast Output 2"
                  startId="Package\Foreach Loop Log File catalog\long log file load\Multicast.Outputs[Multicast Output 2]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\long log file load.Paths[Multicast Output 3]"
                  endId="Package\Foreach Loop Log File catalog\long log file load\host dimenstion transformations.Inputs[Derived Column Input]"
                  name="Multicast Output 3"
                  startId="Package\Foreach Loop Log File catalog\long log file load\Multicast.Outputs[Multicast Output 3]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\long log file load.Paths[Multicast Output 5]"
                  endId="Package\Foreach Loop Log File catalog\long log file load\Derived Column.Inputs[Derived Column Input]"
                  name="Multicast Output 5"
                  startId="Package\Foreach Loop Log File catalog\long log file load\Multicast.Outputs[Multicast Output 5]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\long log file load.Paths[Multicast Output 6]"
                  endId="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1.Inputs[Derived Column Input]"
                  name="Multicast Output 6"
                  startId="Package\Foreach Loop Log File catalog\long log file load\Multicast.Outputs[Multicast Output 6]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\long log file load.Paths[Output 0]"
                  endId="Package\Foreach Loop Log File catalog\long log file load\request dimension.Inputs[OLE DB Destination Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Log File catalog\long log file load\divide codes.Outputs[Output 0]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\long log file load.Paths[Output 01]"
                  endId="Package\Foreach Loop Log File catalog\long log file load\file dimension.Inputs[OLE DB Destination Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Log File catalog\long log file load\file-conditionals.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Log File catalog\short log file load"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{ED869793-2A8B-417B-9AC7-00C682726635}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="short log file load"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Log File catalog\short log file load\add ID"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="add ID"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\short log file load\add ID.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\add ID.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\add ID.Inputs[Derived Column Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\add ID.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\add ID.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\add ID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\add ID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\add ID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\add ID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\short log file load\client dimension"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="client dimension"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[client dimension]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Log File catalog\short log file load\client dimension.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      connectionManagerRefId="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\short log file load\client dimension.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\client dimension.Inputs[OLE DB Destination Input].Columns[client_ip]"
                          cachedDataType="wstr"
                          cachedLength="15"
                          cachedName="client_ip"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\client dimension.Inputs[OLE DB Destination Input].ExternalColumns[client_ip]"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Outputs[Derived Column Output].Columns[client_ip]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\client dimension.Inputs[OLE DB Destination Input].ExternalColumns[client_ip]"
                          dataType="wstr"
                          length="15"
                          name="client_ip" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\client dimension.Inputs[OLE DB Destination Input].ExternalColumns[city]"
                          dataType="wstr"
                          length="4"
                          name="city" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\client dimension.Inputs[OLE DB Destination Input].ExternalColumns[county]"
                          dataType="wstr"
                          length="7"
                          name="county" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\client dimension.Inputs[OLE DB Destination Input].ExternalColumns[country]"
                          dataType="wstr"
                          length="6"
                          name="country" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\client dimension.Inputs[OLE DB Destination Input].ExternalColumns[session]"
                          dataType="wstr"
                          length="94"
                          name="session" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\client dimension.Inputs[OLE DB Destination Input].ExternalColumns[os]"
                          dataType="wstr"
                          length="94"
                          name="os" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\client dimension.Inputs[OLE DB Destination Input].ExternalColumns[browser]"
                          dataType="wstr"
                          length="94"
                          name="browser" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\client dimension.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\client dimension.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\client dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\client dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\client dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\client dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="client dimension transformations"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Inputs[Derived Column Input].Columns[user_ip]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="user_ip"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[user_ip]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Outputs[Derived Column Output].Columns[client_ip]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="15"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Outputs[Derived Column Output].Columns[client_ip]"
                          name="client_ip"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[user_ip]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">user_ip</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Outputs[Derived Column Output].Columns[city]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Outputs[Derived Column Output].Columns[city]"
                          name="city"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::city]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::city]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Outputs[Derived Column Output].Columns[county]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="7"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Outputs[Derived Column Output].Columns[county]"
                          name="county"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::country]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::country]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Outputs[Derived Column Output].Columns[country]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="6"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Outputs[Derived Column Output].Columns[country]"
                          name="country"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::county]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::county]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Outputs[Derived Column Output].Columns[session]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="2"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Outputs[Derived Column Output].Columns[session]"
                          name="session"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"12"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"12"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Outputs[Derived Column Output].Columns[os]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="2"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Outputs[Derived Column Output].Columns[os]"
                          name="os"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"12"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"12"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Outputs[Derived Column Output].Columns[browser]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="2"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Outputs[Derived Column Output].Columns[browser]"
                          name="browser"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"12"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"12"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\short log file load\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\short log file load\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Conditional Split.Inputs[Conditional Split Input].Columns[date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="date"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[date]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\Conditional Split.Outputs[validate comments]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="validate comments"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[LEFT](#{Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[date]},1) == "#"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">LEFT(date,1) == "#"</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\short log file load\conversion errors"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="conversion errors"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[conversion_errors]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Log File catalog\short log file load\conversion errors.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      connectionManagerRefId="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\short log file load\conversion errors.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\conversion errors.Inputs[OLE DB Destination Input].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\conversion errors.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\conversion errors.Inputs[OLE DB Destination Input].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\conversion errors.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Error Output].Columns[ErrorColumn]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\conversion errors.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          dataType="i4"
                          name="ErrorCode" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\conversion errors.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          dataType="i4"
                          name="ErrorColumn" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\conversion errors.Inputs[OLE DB Destination Input].ExternalColumns[date]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\conversion errors.Inputs[OLE DB Destination Input].ExternalColumns[time]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="time" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\conversion errors.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\conversion errors.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\conversion errors.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\conversion errors.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\conversion errors.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\conversion errors.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\short log file load\convert string to date"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="convert string to date"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\short log file load\convert string to date.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\convert string to date.Inputs[Data Conversion Input].Columns[date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="date"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\convert string to date.Inputs[Data Conversion Input].Columns[time]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="time"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[time]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\convert string to date.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]"
                          name="date_formatted"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[time_formatted]"
                          dataType="dbTime"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[time_formatted]"
                          name="time_formatted"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[time]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\convert string to date.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="date dimenstion"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[date dimenstion]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      connectionManagerRefId="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Inputs[OLE DB Destination Input].Columns[month]"
                          cachedDataType="i4"
                          cachedName="month"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Inputs[OLE DB Destination Input].ExternalColumns[month]"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[month]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Inputs[OLE DB Destination Input].Columns[year]"
                          cachedDataType="i4"
                          cachedName="year"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Inputs[OLE DB Destination Input].ExternalColumns[year]"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[year]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Inputs[OLE DB Destination Input].Columns[day]"
                          cachedDataType="i4"
                          cachedName="day"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Inputs[OLE DB Destination Input].ExternalColumns[day]"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[day]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Inputs[OLE DB Destination Input].Columns[quarter]"
                          cachedDataType="i4"
                          cachedName="quarter"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Inputs[OLE DB Destination Input].ExternalColumns[quarter]"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[quarter]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Inputs[OLE DB Destination Input].Columns[week]"
                          cachedDataType="i4"
                          cachedName="week"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Inputs[OLE DB Destination Input].ExternalColumns[week]"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[week]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Inputs[OLE DB Destination Input].ExternalColumns[month]"
                          dataType="i4"
                          name="month" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Inputs[OLE DB Destination Input].ExternalColumns[year]"
                          dataType="i4"
                          name="year" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Inputs[OLE DB Destination Input].ExternalColumns[day]"
                          dataType="i4"
                          name="day" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Inputs[OLE DB Destination Input].ExternalColumns[quarter]"
                          dataType="i4"
                          name="quarter" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Inputs[OLE DB Destination Input].ExternalColumns[week]"
                          dataType="i4"
                          name="week" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Inputs[OLE DB Destination Input].ExternalColumns[month_name]"
                          dataType="wstr"
                          length="9"
                          name="month_name" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\short log file load\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Inputs[Derived Column Input].Columns[response_code]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="response_code"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[response_code]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Inputs[Derived Column Input].Columns[time_taken]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="time_taken"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[time_taken]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Outputs[Derived Column Output].Columns[response_code]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Outputs[Derived Column Output].Columns[response_code]"
                          name="response_code"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[response_code]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">response_code</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Outputs[Derived Column Output].Columns[time_taken]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Outputs[Derived Column Output].Columns[time_taken]"
                          name="time_taken"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[time_taken]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">time_taken</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Outputs[Derived Column Output].Columns[type]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Outputs[Derived Column Output].Columns[type]"
                          name="type"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"unknown"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"unknown"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\short log file load\divide codes"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="divide codes"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_7c9fdcff1667454baf06d119e342e9e4.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9cc2c472-27ea-41dd-9e5f-cf42913d49f1}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_7c9fdcff1667454baf06d119e342e9e4</RootNamespace>
    <AssemblyName>SC_7c9fdcff1667454baf06d119e342e9e4</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_7c9fdcff1667454baf06d119e342e9e4" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {

        //string browser_column = Row.userbrowser;

        ////so we have few possible status column counts: 4 and 6 + fail safe

        ////split string by spaces
        //string[] tokens = browser_column.Split(' ');

        //if (tokens.Length - 4 >= 0)
        //{


        //    int n;
        //    bool isNumberic = int.TryParse(tokens[tokens.Length - 4], out n);
        //    //if last field is numeric then there are response code
        //    if (isNumberic)
        //    {
        //        if (tokens[tokens.Length - 4] == "-")
        //        {
        //            Row.responsecode = tokens[tokens.Length - 3];
        //            Row.timetaken = tokens[tokens.Length];
        //            //4 fields and type " - - " or " - "

        //        }
        //        else if (tokens[tokens.Length - 4] == ")")
        //        {
        //            //4 fields and type ") " 
        //            Row.responsecode = tokens[tokens.Length - 3];
        //            Row.timetaken = tokens[tokens.Length];
        //        }
        //        else if (tokens[tokens.Length - 4].Length > 4)
        //        {
        //            //4 fields and type "ends with link" 
        //            Row.responsecode = tokens[tokens.Length - 3];
        //            Row.timetaken = tokens[tokens.Length];
        //        }

        //    }
        //}

        //    if (tokens.Length - 6 >= 0)
        //    {


        //        int is6numeric;
        //        bool isNumbericSix = int.TryParse(tokens[tokens.Length - 4], out is6numeric);

        //        if (isNumbericSix)
        //        {
        //            if (tokens[tokens.Length - 6] == "-")
        //            {
        //                //6 fields and type " - - " or " - "
        //                Row.responsecode = tokens[tokens.Length - 5];
        //                Row.timetaken = tokens[tokens.Length];


        //            }

        //            else if (tokens[tokens.Length - 6] == ")")
        //            {
        //                //6 fields and type ") " 
        //                Row.responsecode = tokens[tokens.Length - 5];
        //                Row.timetaken = tokens[tokens.Length];
        //            }
        //            else if (tokens[tokens.Length - 6].Length > 4)
        //            {
        //                //6 fields and type "ends with link" 
        //                Row.responsecode = tokens[tokens.Length - 5];
        //                Row.timetaken = tokens[tokens.Length];
        //            }
        //        }
        //    }
        

        int responseCodeInt;
        bool isResponseNumberic = int.TryParse(Row.responsecode, out responseCodeInt);
        
        if (isResponseNumberic) {
            if (responseCodeInt >= 100 && responseCodeInt<200)
            {
                Row.type = "Informational";
            } else if (responseCodeInt >= 200 && responseCodeInt < 300)
            {
                Row.type = "Sucesses";

            }
            else if (responseCodeInt >= 300 && responseCodeInt < 400)
            {
                Row.type = "Redirections";
            }
            else if (responseCodeInt >= 400 && responseCodeInt < 500)
            {
                Row.type = "Client Errors";
            }
            else if (responseCodeInt >= 500)
            {
                Row.type = "Server Errors";
            }
        } 
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String userbrowser
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool userbrowser_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String responsecode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
        set
        {
            this[1] = value;
        }
    }
    public bool responsecode_IsNull
    {
        get
        {
            return IsNull(1);
        }
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String timetaken
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
        set
        {
            this[2] = value;
        }
    }
    public bool timetaken_IsNull
    {
        get
        {
            return IsNull(2);
        }
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String type
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
        set
        {
            this[3] = value;
        }
    }
    public bool type_IsNull
    {
        get
        {
            return IsNull(3);
        }
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7c9fdcff1667454baf06d119e342e9e4.Properties.Settings.get_Default():SC_7c9fdcff1667454baf06d119e342e9e4.Properties.Sett" +
    "ings")]

namespace SC_7c9fdcff1667454baf06d119e342e9e4.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_7c9fdcff1667454baf06d119e342e9e4</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_7c9fdcff1667454baf06d119e342e9e4</msb:DisplayName>
		<msb:ProjectId>{2B27CAC9-9E5D-4CAD-B649-734834568030}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_7c9fdcff1667454baf06d119e342e9e4.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7c9fdcff1667454baf06d119e342e9e4")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7c9fdcff1667454baf06d119e342e9e4")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7c9fdcff1667454baf06d119e342e9e4.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7c9fdcff1667454baf06d119e342e9e4.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7c9fdcff1667454baf06d119e342e9e4.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7c9fdcff1667454baf06d119e342e9e4.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7c9fdcff1667454baf06d119e342e9e4.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_7c9fdcff1667454baf06d119e342e9e4.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJTD7lgAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAhjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADQ1AABPAAAAAEAAAGwEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAjBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAGwEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABo
NQAAAAAAAEgAAAACAAUA9CIAAIgRAAABAAAAAAAAAHw0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAIAkwAAAAEAABEDbwoAAAYS
ACgSAAAKOYAAAAAGH2QyFAYgyAAAAC8MA3IBAABwbxMAAAYqBiDIAAAAMhQGICwBAAAvDANyHQAA
cG8TAAAGKgYgLAEAADIUBiCQAQAALwwDci8AAHBvEwAABioGIJABAAAyFAYg9AEAAC8MA3JJAABw
bxMAAAYqBiD0AQAAMgsDcmUAAHBvEwAABioeAigYAAAGKioCAwQFKBMAAAoqUgJ7FAAACgJ7FQAA
ChaUbxYAAAoqJgIWAygXAAAKKiICFigYAAAKKloDLAgCFigZAAAKKnKBAABwcxoAAAp6UgJ7FAAA
CgJ7FQAACheUbxYAAAoqJgIXAygXAAAKKiICFygYAAAKKloDLAgCFygZAAAKKnKBAABwcxoAAAp6
UgJ7FAAACgJ7FQAAChiUbxYAAAoqJgIYAygXAAAKKiICGCgYAAAKKloDLAgCGCgZAAAKKnKBAABw
cxoAAAp6UgJ7FAAACgJ7FQAAChmUbxYAAAoqJgIZAygXAAAKKiICGSgYAAAKKloDLAgCGSgZAAAK
KnKBAABwcxoAAAp6HgIoGwAACioeAigcAAAKKn4CKB0AAAoCAnMcAAAGfQEAAAQCAnMdAAAGfQIA
AAQqkgRyHgEAcBpvHgAACiwVAgUCAygfAAAKDgRzBQAABm8aAAAGKkorBwIDbxsAAAYDbxYAAAYt
8SoGKjoCKCAAAAoCA30DAAAEKjoCKCAAAAoCA30EAAAEKh4CKCAAAAoqrn4FAAAELR5yLgEAcNAH
AAACKCEAAApvIgAACnMjAAAKgAUAAAR+BQAABCoafgYAAAQqHgKABgAABCoafgcAAAQqHgIoJAAA
CioucyMAAAaABwAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACkBgAAI34A
ABAHAAAcBwAAI1N0cmluZ3MAAAAALA4AAKABAAAjVVMAzA8AABAAAAAjR1VJRAAAANwPAACsAQAA
I0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPoBMwAWAAABAAAAIAAAAAgAAAAHAAAAJAAAABUAAAAk
AAAAEAAAAAEAAAADAAAACwAAABQAAAABAAAABAAAAAEAAAAAADADAQAAAAAABgAnAlMFBgC7AlMF
BgBzAUAFDwDHBQAABgCgAXUEBgAKAnUEBgDrAXUEBgCiAnUEBgBHAnUEBgBgAnUEBgC3AXUEBgDS
AfYCCgB7AqUACgDyBKUADgDjBKUACgC+BKUACgCNBqUABgBQBhEEBgBWAUAFBgADBXMFBgCyBGAE
EgAmARoDEgCHARoDEgAFAUsEBgA7AVMFBgABABEEBgCHBBEEBgATAxEEBgChBBEEBgDGABEEBgB3
ABEEBgASB3UEAAAAACsAAAAAAAEAAQABABAAQAQAABAAAQABAAEAEADWBAAAOQABAAUAAQAQAG8G
AABFAAEAGAABABAARAYAAEkAAwAcAAEAEAAFBgAASQAEAB0AAAAQAHoF1gVJAAUAHgAAARAANAbW
BWEABwAiAAYARAaAAAYABQaEAAEAfQaIAAEAfQaIABEAGASMABEA9QCQABEARQCUAFAgAAAAAMYA
2QIGAAEAWCAAAAAAxgDkAgYAAQBgIAAAAADGAO8GmAABAP8gAAAAAIYYMwUGAAIAByEAAAAAhhgz
BSYAAgASIQAAAACGCBMFngAFACchAAAAAIYIIwUQAAUAMSEAAAAAhgjSA0gABgA6IQAAAACGCOkD
ogAGAFEhAAAAAIYIVQCeAAcAZiEAAAAAhghmABAABwBwIQAAAACGCFgDSAAIAHkhAAAAAIYIcAOi
AAgAkCEAAAAAhggkBJ4ACQClIQAAAACGCDIEEAAJAK8hAAAAAIYIqANIAAoAuCEAAAAAhgi9A6IA
CgDPIQAAAACGCMsAngALAOQhAAAAAIYI1AAQAAsA7iEAAAAAhgiIA0gADAD3IQAAAACGCJgDogAM
AA4iAAAAAIYABgdIAA0AFiIAAAAAhgBXBkgADQAeIgAAAACGGDMFBgANAD4iAAAAAMYA4ganAA0A
YyIAAAAAxgHbBpgAEQB2IgAAAADGAe8GmAASAHgiAAAAAIYYMwWxABMAhyIAAAAAhhgzBbEAFACW
IgAAAACDGDMFBgAVAJ4iAAAAAJMI/wS3ABUAyiIAAAAAkwjdALwAFQDRIgAAAACTCOkAwQAVANki
AAAAAJYIYwbHABYA4CIAAAAAhhgzBQYAFgDoIgAAAACRGDkFzAAWAAAAAQAKBwAAAQD4BAAAAgAP
BgAAAwDMBAAAAQDwAgAAAQDwAgAAAQDwAgAAAQDwAgAAAQDwAgAAAQDwAgAAAQDwAgAAAQDwAgAA
AQA0AAAAAgCbAAAAAwD4BAAABADMBAAAAQD4BAAAAQAKBwAAAQCTBgAAAQCTBgAAAQDwAgkAMwUB
ABEAMwUGABkAMwUKACkAMwUQADEAMwUQADkAMwUQAEEAMwUQAEkAMwUQAFEAMwUQAFkAMwUQAGEA
MwUQAGkAMwUGAJkAMwUGALkAMwUVAMkAMwUGAIkA2QIGAIkA5AIGANEAHQEfAHEAMwUmAHEA+AQw
AHEADwY0AHkAEAM4AHEACAQ9AHEA+QNDAHEAAAQBANkAMwUQAHEABgdIAHEAVwZIAIkAMwUGAOEA
PQZMAIkAIwZTAJEAMwUGAPEAiQBZAPEADgdgAKEAMwVmAMEAMwUGAC4ACwDnAC4AEwDwAC4AGwAP
AS4AIwAYAS4AKwBBAS4AMwBBAS4AOwBBAS4AQwAYAS4ASwBHAS4AUwBBAS4AWwBeAUMAYwCmAeEA
ewCmAeMAawCmASkBcwAPAUkBcwAPARsAAwABAAcACQAIAAsAAAAnBdAAAADtA9QAAABqANAAAAB0
A9QAAAA2BNAAAADBA9QAAADYANAAAACcA9QAAAADBdgAAAD9AN0AAABnBuIAAgAGAAMAAQAHAAMA
AgAIAAUAAQAJAAUAAgAKAAcAAQALAAcAAgAMAAkAAQANAAkAAgAOAAsAAQAPAAsAAgAQAA0AAQAR
AA0AAgASAA8AAQATAA8AAgAUABEAAQAVABEAAgAfABMAAgAgABUAAQAhABUAAgAiABcABIAAAAEA
AACoGBIJAAAAAAAABwAAAAQAAAAAAAAAAAAAAG4APAAAAAAADAAAAAAAAAAAAAAAdwCdBgAAAAAM
AAAAAAAAAAAAAAB3ALoGAAAAAAQAAAAAAAAAAAAAAG4AEQQAAAAAAAAAAAEAAACEBQAAAAAAAABJ
bnQzMgBTQ183YzlmZGNmZjE2Njc0NTRiYWYwNmQxMTllMzQyZTllNAA8TW9kdWxlPgBJbnB1dElE
AG1zY29ybGliAGRlZmF1bHRJbnN0YW5jZQBnZXRfcmVzcG9uc2Vjb2RlAHNldF9yZXNwb25zZWNv
ZGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X3R5cGUAc2V0X3R5cGUAZ2V0X0N1bHR1
cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAFRy
eVBhcnNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERl
YnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93
c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0
dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9u
c0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRy
aWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21w
YW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9z
dEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBHZXRTdHJpbmcAU3lzdGVt
LkNvbXBvbmVudE1vZGVsAFNDXzdjOWZkY2ZmMTY2NzQ1NGJhZjA2ZDExOWUzNDJlOWU0LmRsbABn
ZXRfcmVzcG9uc2Vjb2RlX0lzTnVsbABzZXRfcmVzcG9uc2Vjb2RlX0lzTnVsbABnZXRfdHlwZV9J
c051bGwAc2V0X3R5cGVfSXNOdWxsAGdldF90aW1ldGFrZW5fSXNOdWxsAHNldF90aW1ldGFrZW5f
SXNOdWxsAGdldF91c2VyYnJvd3Nlcl9Jc051bGwAc2V0X3VzZXJicm93c2VyX0lzTnVsbABTZXRO
dWxsAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBnZXRfdGltZXRha2VuAHNldF90aW1ldGFr
ZW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBT
eXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlz
b24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAASW5wdXQwQnVmZmVyAFBpcGVs
aW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF91c2VyYnJvd3Nl
cgBzZXRfdXNlcmJyb3dzZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfN2M5ZmRjZmYxNjY3
NDU0YmFmMDZkMTE5ZTM0MmU5ZTQuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVn
Z2luZ01vZGVzAFNDXzdjOWZkY2ZmMTY2NzQ1NGJhZjA2ZDExOWUzNDJlOWU0LlByb3BlcnRpZXMA
VmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBF
cXVhbHMAQ29ubmVjdGlvbnMAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21w
b25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVy
LlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNz
SW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQAAABtJAG4A
ZgBvAHIAbQBhAHQAaQBvAG4AYQBsAAARUwB1AGMAZQBzAHMAZQBzAAAZUgBlAGQAaQByAGUAYwB0
AGkAbwBuAHMAABtDAGwAaQBlAG4AdAAgAEUAcgByAG8AcgBzAAAbUwBlAHIAdgBlAHIAIABFAHIA
cgBvAHIAcwAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAA
YgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBs
AHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4A
cAB1AHQAIAAwAABxUwBDAF8ANwBjADkAZgBkAGMAZgBmADEANgA2ADcANAA1ADQAYgBhAGYAMAA2
AGQAMQAxADkAZQAzADQAMgBlADkAZQA0AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAA5Eq37NtgCTaWQDt//nLx8AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZAwcB
CAYAAgIOEAgJIAMBEj0dCBJBAwYSPQMGHQgEIAEOCAUgAgEIHAQgAQIIAyAAAgYgAgIOEXUFIAEd
CAgGAAESeRF9BSAAEoCBByACAQ4SgIEIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEkUDBhJR
AwYSVQMGEiAFIAEBEgwDIAAOBCABAQIJIAQBCA4SPRJBBSABARJFBAAAElEEAAASVQUAAQESVQQA
ABIgAwAAAQMoAA4DKAACBAgAElEECAASVQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhj
ZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ183YzlmZGNmZjE2Njc0NTRiYWYwNmQxMTllMzQy
ZTllNAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE3AABHAQAaLk5FVEZyYW1ld29yayxWZXJz
aW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQEAQAAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAAXDUAAAAAAAAAAAAAdjUAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGg1AAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABAEAAAAAAAAAAAAABAENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQASCagYAAABABIJqBg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARwAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABMAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADcAYwA5AGYAZABjAGYAZgAxADYANgA3ADQANQA0AGIAYQBmADAANgBkADEAMQA5AGUA
MwA0ADIAZQA5AGUANAAAADwADgABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2
ADMAMQAyAC4AMgAzADIAMgAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
NwBjADkAZgBkAGMAZgBmADEANgA2ADcANAA1ADQAYgBhAGYAMAA2AGQAMQAxADkAZQAzADQAMgBl
ADkAZQA0AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADcAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABl
AG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUA
AABTAEMAXwA3AGMAOQBmAGQAYwBmAGYAMQA2ADYANwA0ADUANABiAGEAZgAwADYAZAAxADEAOQBl
ADMANAAyAGUAOQBlADQALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBDAF8ANwBjADkAZgBkAGMAZgBmADEANgA2ADcANAA1ADQAYgBhAGYAMAA2AGQAMQAxADkAZQAz
ADQAMgBlADkAZQA0AAAAQAAOAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA2ADMAMQAyAC4AMgAzADIAMgAAAEQADgABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADYAMwAxADIALgAyADMAMgAyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACINQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_7c9fdcff1667454baf06d119e342e9e4</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">c0631837e67acf41fc539a0e992374ae</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\short log file load\divide codes.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\divide codes.Inputs[Input 0].Columns[user_browser]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="user_browser"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[user_browser]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\divide codes.Inputs[Input 0].Columns[response_code]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="response_code"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Outputs[Derived Column Output].Columns[response_code]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\divide codes.Inputs[Input 0].Columns[time_taken]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="time_taken"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Outputs[Derived Column Output].Columns[time_taken]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\divide codes.Inputs[Input 0].Columns[type]"
                          cachedDataType="wstr"
                          cachedLength="7"
                          cachedName="type"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Outputs[Derived Column Output].Columns[type]"
                          usageType="readWrite" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\divide codes.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\divide codes.Inputs[Input 0]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\short log file load\divide date and time"
                  componentClassID="Microsoft.Multicast"
                  contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                  name="divide date and time">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\short log file load\divide date and time.Inputs[Multicast Input 1]"
                      name="Multicast Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\divide date and time.Outputs[Multicast Output 5]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 5"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\divide date and time.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\divide date and time.Outputs[Multicast Output 1]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 1"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\divide date and time.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\divide date and time.Outputs[Multicast Output 8]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 8"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\divide date and time.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\divide date and time.Outputs[Multicast Output 2]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 2"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\divide date and time.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\divide date and time.Outputs[Multicast Output 9]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 9"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\divide date and time.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\divide date and time.Outputs[Multicast Output 3]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 3"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\divide date and time.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\divide date and time.Outputs[Multicast Output 4]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 4"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\divide date and time.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\divide date and time.Outputs[Multicast Output 6]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 6"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\divide date and time.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\short log file load\file dimension"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="file dimension"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[file_dimension]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      connectionManagerRefId="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Inputs[OLE DB Destination Input].Columns[filename]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="600"
                          cachedName="filename"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Inputs[OLE DB Destination Input].ExternalColumns[filename]"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[filename]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Inputs[OLE DB Destination Input].Columns[file_extension]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="600"
                          cachedName="file_extension"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Inputs[OLE DB Destination Input].ExternalColumns[file_extension]"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[file_extension]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Inputs[OLE DB Destination Input].Columns[path_to_file]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="600"
                          cachedName="path_to_file"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Inputs[OLE DB Destination Input].ExternalColumns[path_to_file]"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[path_to_file]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Inputs[OLE DB Destination Input].Columns[is_page]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="600"
                          cachedName="is_page"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Inputs[OLE DB Destination Input].ExternalColumns[is_page]"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[is_page]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Inputs[OLE DB Destination Input].Columns[type_of_file]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="600"
                          cachedName="type_of_file"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Inputs[OLE DB Destination Input].ExternalColumns[type_of_file]"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[type_of_file]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Inputs[OLE DB Destination Input].ExternalColumns[filename]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="filename" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Inputs[OLE DB Destination Input].ExternalColumns[file_extension]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="file_extension" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Inputs[OLE DB Destination Input].ExternalColumns[path_to_file]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="path_to_file" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Inputs[OLE DB Destination Input].ExternalColumns[is_page]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="is_page" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Inputs[OLE DB Destination Input].ExternalColumns[type_of_file]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="type_of_file" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="file dimension transformations 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Inputs[Derived Column Input].Columns[request_uri]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="request_uri"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[request_uri]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[filename]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="600"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[filename]"
                          name="filename"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[TOKEN](#{Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[request_uri]},"/",[TOKENCOUNT](#{Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[request_uri]},"/"))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">TOKEN(request_uri,"/",TOKENCOUNT(request_uri,"/"))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[file_extension]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="600"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[file_extension]"
                          name="file_extension"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[TOKEN](#{Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[request_uri]},".",[TOKENCOUNT](#{Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[request_uri]},"."))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">TOKEN(request_uri,".",TOKENCOUNT(request_uri,"."))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[type_of_file]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="600"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[type_of_file]"
                          name="type_of_file"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"1"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"1"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[is_page]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="600"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[is_page]"
                          name="is_page"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"1"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"1"</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[path_to_file]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="600"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[path_to_file]"
                          name="path_to_file"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"1"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"1"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\short log file load\file-conditionals"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="file-conditionals"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="33">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String city
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["city"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["city"].Value = value;
        }
    }

    public String country
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["country"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["country"].Value = value;
        }
    }

    public String county
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["county"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["county"].Value = value;
        }
    }

    public String filepath
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["file_path"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["file_path"].Value = value;
        }
    }

    public String filetype
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["file_type"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["file_type"].Value = value;
        }
    }

    public String ispage
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["is_page"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["is_page"].Value = value;
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.IO;
using System.Collections.Generic;
using Microsoft.SqlServer.Dts.Runtime;

#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

   
    
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */

        
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        string uri_row = Row.requesturi;
        string fileName = Row.filename;
        string fileExt = Row.fileextension;
        string file_type = Row.typeoffile;
        string is_page = Row.ispage;
        string file_path = Row.pathtofile;

        string[] input = { uri_row, fileName, fileExt, file_type, is_page, file_path };
        // uri, fileName, filetype, fileExt, ispage, filepath
        string[] result = ProcessFileTypes(input);
        Row.filename = result[1];
        Row.typeoffile = result[2];
        Row.fileextension = result[3];
        Row.ispage = result[4];
        Row.pathtofile = result[5];
       


    }




    private static IDictionary<string, string> _mappings = new Dictionary<string, string>(StringComparer.InvariantCultureIgnoreCase) {

        #region Big freaking list of mime types
        // combination of values from Windows 7 Registry and 
        // from C:\Windows\System32\inetsrv\config\applicationHost.config
        // some added, including .7z and .dat
        {".323", "text/h323"},
        {".3g2", "video/3gpp2"},
        {".3gp", "video/3gpp"},
        {".3gp2", "video/3gpp2"},
        {".3gpp", "video/3gpp"},
        {".7z", "application/x-7z-compressed"},
        {".aa", "audio/audible"},
        {".AAC", "audio/aac"},
        {".aaf", "application/octet-stream"},
        {".aax", "audio/vnd.audible.aax"},
        {".ac3", "audio/ac3"},
        {".aca", "application/octet-stream"},
        {".accda", "application/msaccess.addin"},
        {".accdb", "application/msaccess"},
        {".accdc", "application/msaccess.cab"},
        {".accde", "application/msaccess"},
        {".accdr", "application/msaccess.runtime"},
        {".accdt", "application/msaccess"},
        {".accdw", "application/msaccess.webapplication"},
        {".accft", "application/msaccess.ftemplate"},
        {".acx", "application/internet-property-stream"},
        {".AddIn", "text/xml"},
        {".ade", "application/msaccess"},
        {".adobebridge", "application/x-bridge-url"},
        {".adp", "application/msaccess"},
        {".ADT", "audio/vnd.dlna.adts"},
        {".ADTS", "audio/aac"},
        {".afm", "application/octet-stream"},
        {".ai", "application/postscript"},
        {".aif", "audio/x-aiff"},
        {".aifc", "audio/aiff"},
        {".aiff", "audio/aiff"},
        {".air", "application/vnd.adobe.air-application-installer-package+zip"},
        {".amc", "application/x-mpeg"},
        {".application", "application/x-ms-application"},
        {".art", "image/x-jg"},
        {".asa", "application/xml"},
        {".asax", "application/xml"},
        {".ascx", "application/xml"},
        {".asd", "application/octet-stream"},
        {".asf", "video/x-ms-asf"},
        {".ashx", "application/xml"},
        {".asi", "application/octet-stream"},
        {".asm", "text/plain"},
        {".asmx", "application/xml"},
        {".aspx", "application/xml"},
        {".asr", "video/x-ms-asf"},
        {".asx", "video/x-ms-asf"},
        {".atom", "application/atom+xml"},
        {".au", "audio/basic"},
        {".avi", "video/x-msvideo"},
        {".axs", "application/olescript"},
        {".bas", "text/plain"},
        {".bcpio", "application/x-bcpio"},
        {".bin", "application/octet-stream"},
        {".bmp", "image/bmp"},
        {".c", "text/plain"},
        {".cab", "application/octet-stream"},
        {".caf", "audio/x-caf"},
        {".calx", "application/vnd.ms-office.calx"},
        {".cat", "application/vnd.ms-pki.seccat"},
        {".cc", "text/plain"},
        {".cd", "text/plain"},
        {".cdda", "audio/aiff"},
        {".cdf", "application/x-cdf"},
        {".cer", "application/x-x509-ca-cert"},
        {".chm", "application/octet-stream"},
        {".class", "application/x-java-applet"},
        {".clp", "application/x-msclip"},
        {".cmx", "image/x-cmx"},
        {".cnf", "text/plain"},
        {".cod", "image/cis-cod"},
        {".config", "application/xml"},
        {".contact", "text/x-ms-contact"},
        {".coverage", "application/xml"},
        {".cpio", "application/x-cpio"},
        {".cpp", "text/plain"},
        {".crd", "application/x-mscardfile"},
        {".crl", "application/pkix-crl"},
        {".crt", "application/x-x509-ca-cert"},
        {".cs", "text/plain"},
        {".csdproj", "text/plain"},
        {".csh", "application/x-csh"},
        {".csproj", "text/plain"},
        {".css", "text/css"},
        {".csv", "text/csv"},
        {".cur", "application/octet-stream"},
        {".cxx", "text/plain"},
        {".dat", "application/octet-stream"},
        {".datasource", "application/xml"},
        {".dbproj", "text/plain"},
        {".dcr", "application/x-director"},
        {".def", "text/plain"},
        {".deploy", "application/octet-stream"},
        {".der", "application/x-x509-ca-cert"},
        {".dgml", "application/xml"},
        {".dib", "image/bmp"},
        {".dif", "video/x-dv"},
        {".dir", "application/x-director"},
        {".disco", "text/xml"},
        {".dll", "application/x-msdownload"},
        {".dll.config", "text/xml"},
        {".dlm", "text/dlm"},
        {".doc", "application/msword"},
        {".docm", "application/vnd.ms-word.document.macroEnabled.12"},
        {".docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"},
        {".dot", "application/msword"},
        {".dotm", "application/vnd.ms-word.template.macroEnabled.12"},
        {".dotx", "application/vnd.openxmlformats-officedocument.wordprocessingml.template"},
        {".dsp", "application/octet-stream"},
        {".dsw", "text/plain"},
        {".dtd", "text/xml"},
        {".dtsConfig", "text/xml"},
        {".dv", "video/x-dv"},
        {".dvi", "application/x-dvi"},
        {".dwf", "drawing/x-dwf"},
        {".dwp", "application/octet-stream"},
        {".dxr", "application/x-director"},
        {".eml", "message/rfc822"},
        {".emz", "application/octet-stream"},
        {".eot", "application/octet-stream"},
        {".eps", "application/postscript"},
        {".etl", "application/etl"},
        {".etx", "text/x-setext"},
        {".evy", "application/envoy"},
        {".exe", "application/octet-stream"},
        {".exe.config", "text/xml"},
        {".fdf", "application/vnd.fdf"},
        {".fif", "application/fractals"},
        {".filters", "Application/xml"},
        {".fla", "application/octet-stream"},
        {".flr", "x-world/x-vrml"},
        {".flv", "video/x-flv"},
        {".fsscript", "application/fsharp-script"},
        {".fsx", "application/fsharp-script"},
        {".generictest", "application/xml"},
        {".gif", "image/gif"},
        {".group", "text/x-ms-group"},
        {".gsm", "audio/x-gsm"},
        {".gtar", "application/x-gtar"},
        {".gz", "application/x-gzip"},
        {".h", "text/plain"},
        {".hdf", "application/x-hdf"},
        {".hdml", "text/x-hdml"},
        {".hhc", "application/x-oleobject"},
        {".hhk", "application/octet-stream"},
        {".hhp", "application/octet-stream"},
        {".hlp", "application/winhlp"},
        {".hpp", "text/plain"},
        {".hqx", "application/mac-binhex40"},
        {".hta", "application/hta"},
        {".htc", "text/x-component"},
        {".htm", "text/html"},
        {".html", "text/html"},
        {".htt", "text/webviewhtml"},
        {".hxa", "application/xml"},
        {".hxc", "application/xml"},
        {".hxd", "application/octet-stream"},
        {".hxe", "application/xml"},
        {".hxf", "application/xml"},
        {".hxh", "application/octet-stream"},
        {".hxi", "application/octet-stream"},
        {".hxk", "application/xml"},
        {".hxq", "application/octet-stream"},
        {".hxr", "application/octet-stream"},
        {".hxs", "application/octet-stream"},
        {".hxt", "text/html"},
        {".hxv", "application/xml"},
        {".hxw", "application/octet-stream"},
        {".hxx", "text/plain"},
        {".i", "text/plain"},
        {".ico", "image/x-icon"},
        {".ics", "application/octet-stream"},
        {".idl", "text/plain"},
        {".ief", "image/ief"},
        {".iii", "application/x-iphone"},
        {".inc", "text/plain"},
        {".inf", "application/octet-stream"},
        {".inl", "text/plain"},
        {".ins", "application/x-internet-signup"},
        {".ipa", "application/x-itunes-ipa"},
        {".ipg", "application/x-itunes-ipg"},
        {".ipproj", "text/plain"},
        {".ipsw", "application/x-itunes-ipsw"},
        {".iqy", "text/x-ms-iqy"},
        {".isp", "application/x-internet-signup"},
        {".ite", "application/x-itunes-ite"},
        {".itlp", "application/x-itunes-itlp"},
        {".itms", "application/x-itunes-itms"},
        {".itpc", "application/x-itunes-itpc"},
        {".IVF", "video/x-ivf"},
        {".jar", "application/java-archive"},
        {".java", "application/octet-stream"},
        {".jck", "application/liquidmotion"},
        {".jcz", "application/liquidmotion"},
        {".jfif", "image/pjpeg"},
        {".jnlp", "application/x-java-jnlp-file"},
        {".jpb", "application/octet-stream"},
        {".jpe", "image/jpeg"},
        {".jpeg", "image/jpeg"},
        {".jpg", "image/jpeg"},
        {".js", "application/x-javascript"},
        {".json", "application/json"},
        {".jsx", "text/jscript"},
        {".jsxbin", "text/plain"},
        {".latex", "application/x-latex"},
        {".library-ms", "application/windows-library+xml"},
        {".lit", "application/x-ms-reader"},
        {".loadtest", "application/xml"},
        {".lpk", "application/octet-stream"},
        {".lsf", "video/x-la-asf"},
        {".lst", "text/plain"},
        {".lsx", "video/x-la-asf"},
        {".lzh", "application/octet-stream"},
        {".m13", "application/x-msmediaview"},
        {".m14", "application/x-msmediaview"},
        {".m1v", "video/mpeg"},
        {".m2t", "video/vnd.dlna.mpeg-tts"},
        {".m2ts", "video/vnd.dlna.mpeg-tts"},
        {".m2v", "video/mpeg"},
        {".m3u", "audio/x-mpegurl"},
        {".m3u8", "audio/x-mpegurl"},
        {".m4a", "audio/m4a"},
        {".m4b", "audio/m4b"},
        {".m4p", "audio/m4p"},
        {".m4r", "audio/x-m4r"},
        {".m4v", "video/x-m4v"},
        {".mac", "image/x-macpaint"},
        {".mak", "text/plain"},
        {".man", "application/x-troff-man"},
        {".manifest", "application/x-ms-manifest"},
        {".map", "text/plain"},
        {".master", "application/xml"},
        {".mda", "application/msaccess"},
        {".mdb", "application/x-msaccess"},
        {".mde", "application/msaccess"},
        {".mdp", "application/octet-stream"},
        {".me", "application/x-troff-me"},
        {".mfp", "application/x-shockwave-flash"},
        {".mht", "message/rfc822"},
        {".mhtml", "message/rfc822"},
        {".mid", "audio/mid"},
        {".midi", "audio/mid"},
        {".mix", "application/octet-stream"},
        {".mk", "text/plain"},
        {".mmf", "application/x-smaf"},
        {".mno", "text/xml"},
        {".mny", "application/x-msmoney"},
        {".mod", "video/mpeg"},
        {".mov", "video/quicktime"},
        {".movie", "video/x-sgi-movie"},
        {".mp2", "video/mpeg"},
        {".mp2v", "video/mpeg"},
        {".mp3", "audio/mpeg"},
        {".mp4", "video/mp4"},
        {".mp4v", "video/mp4"},
        {".mpa", "video/mpeg"},
        {".mpe", "video/mpeg"},
        {".mpeg", "video/mpeg"},
        {".mpf", "application/vnd.ms-mediapackage"},
        {".mpg", "video/mpeg"},
        {".mpp", "application/vnd.ms-project"},
        {".mpv2", "video/mpeg"},
        {".mqv", "video/quicktime"},
        {".ms", "application/x-troff-ms"},
        {".msi", "application/octet-stream"},
        {".mso", "application/octet-stream"},
        {".mts", "video/vnd.dlna.mpeg-tts"},
        {".mtx", "application/xml"},
        {".mvb", "application/x-msmediaview"},
        {".mvc", "application/x-miva-compiled"},
        {".mxp", "application/x-mmxp"},
        {".nc", "application/x-netcdf"},
        {".nsc", "video/x-ms-asf"},
        {".nws", "message/rfc822"},
        {".ocx", "application/octet-stream"},
        {".oda", "application/oda"},
        {".odc", "text/x-ms-odc"},
        {".odh", "text/plain"},
        {".odl", "text/plain"},
        {".odp", "application/vnd.oasis.opendocument.presentation"},
        {".ods", "application/oleobject"},
        {".odt", "application/vnd.oasis.opendocument.text"},
        {".one", "application/onenote"},
        {".onea", "application/onenote"},
        {".onepkg", "application/onenote"},
        {".onetmp", "application/onenote"},
        {".onetoc", "application/onenote"},
        {".onetoc2", "application/onenote"},
        {".orderedtest", "application/xml"},
        {".osdx", "application/opensearchdescription+xml"},
        {".p10", "application/pkcs10"},
        {".p12", "application/x-pkcs12"},
        {".p7b", "application/x-pkcs7-certificates"},
        {".p7c", "application/pkcs7-mime"},
        {".p7m", "application/pkcs7-mime"},
        {".p7r", "application/x-pkcs7-certreqresp"},
        {".p7s", "application/pkcs7-signature"},
        {".pbm", "image/x-portable-bitmap"},
        {".pcast", "application/x-podcast"},
        {".pct", "image/pict"},
        {".pcx", "application/octet-stream"},
        {".pcz", "application/octet-stream"},
        {".pdf", "application/pdf"},
        {".pfb", "application/octet-stream"},
        {".pfm", "application/octet-stream"},
        {".pfx", "application/x-pkcs12"},
        {".pgm", "image/x-portable-graymap"},
        {".pic", "image/pict"},
        {".pict", "image/pict"},
        {".pkgdef", "text/plain"},
        {".pkgundef", "text/plain"},
        {".pko", "application/vnd.ms-pki.pko"},
        {".pls", "audio/scpls"},
        {".pma", "application/x-perfmon"},
        {".pmc", "application/x-perfmon"},
        {".php", "text/php"},
        {".pml", "application/x-perfmon"},
        {".pmr", "application/x-perfmon"},
        {".pmw", "application/x-perfmon"},
        {".png", "image/png"},
        {".pnm", "image/x-portable-anymap"},
        {".pnt", "image/x-macpaint"},
        {".pntg", "image/x-macpaint"},
        {".pnz", "image/png"},
        {".pot", "application/vnd.ms-powerpoint"},
        {".potm", "application/vnd.ms-powerpoint.template.macroEnabled.12"},
        {".potx", "application/vnd.openxmlformats-officedocument.presentationml.template"},
        {".ppa", "application/vnd.ms-powerpoint"},
        {".ppam", "application/vnd.ms-powerpoint.addin.macroEnabled.12"},
        {".ppm", "image/x-portable-pixmap"},
        {".pps", "application/vnd.ms-powerpoint"},
        {".ppsm", "application/vnd.ms-powerpoint.slideshow.macroEnabled.12"},
        {".ppsx", "application/vnd.openxmlformats-officedocument.presentationml.slideshow"},
        {".ppt", "application/vnd.ms-powerpoint"},
        {".pptm", "application/vnd.ms-powerpoint.presentation.macroEnabled.12"},
        {".pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation"},
        {".prf", "application/pics-rules"},
        {".prm", "application/octet-stream"},
        {".prx", "application/octet-stream"},
        {".ps", "application/postscript"},
        {".psc1", "application/PowerShell"},
        {".psd", "application/octet-stream"},
        {".psess", "application/xml"},
        {".psm", "application/octet-stream"},
        {".psp", "application/octet-stream"},
        {".pub", "application/x-mspublisher"},
        {".pwz", "application/vnd.ms-powerpoint"},
        {".qht", "text/x-html-insertion"},
        {".qhtm", "text/x-html-insertion"},
        {".qt", "video/quicktime"},
        {".qti", "image/x-quicktime"},
        {".qtif", "image/x-quicktime"},
        {".qtl", "application/x-quicktimeplayer"},
        {".qxd", "application/octet-stream"},
        {".ra", "audio/x-pn-realaudio"},
        {".ram", "audio/x-pn-realaudio"},
        {".rar", "application/octet-stream"},
        {".ras", "image/x-cmu-raster"},
        {".rat", "application/rat-file"},
        {".rc", "text/plain"},
        {".rc2", "text/plain"},
        {".rct", "text/plain"},
        {".rdlc", "application/xml"},
        {".resx", "application/xml"},
        {".rf", "image/vnd.rn-realflash"},
        {".rgb", "image/x-rgb"},
        {".rgs", "text/plain"},
        {".rm", "application/vnd.rn-realmedia"},
        {".rmi", "audio/mid"},
        {".rmp", "application/vnd.rn-rn_music_package"},
        {".roff", "application/x-troff"},
        {".rpm", "audio/x-pn-realaudio-plugin"},
        {".rqy", "text/x-ms-rqy"},
        {".rtf", "application/rtf"},
        {".rtx", "text/richtext"},
        {".ruleset", "application/xml"},
        {".s", "text/plain"},
        {".safariextz", "application/x-safari-safariextz"},
        {".scd", "application/x-msschedule"},
        {".sct", "text/scriptlet"},
        {".sd2", "audio/x-sd2"},
        {".sdp", "application/sdp"},
        {".sea", "application/octet-stream"},
        {".searchConnector-ms", "application/windows-search-connector+xml"},
        {".setpay", "application/set-payment-initiation"},
        {".setreg", "application/set-registration-initiation"},
        {".settings", "application/xml"},
        {".sgimb", "application/x-sgimb"},
        {".sgml", "text/sgml"},
        {".sh", "application/x-sh"},
        {".shar", "application/x-shar"},
        {".shtml", "text/html"},
        {".sit", "application/x-stuffit"},
        {".sitemap", "application/xml"},
        {".skin", "application/xml"},
        {".sldm", "application/vnd.ms-powerpoint.slide.macroEnabled.12"},
        {".sldx", "application/vnd.openxmlformats-officedocument.presentationml.slide"},
        {".slk", "application/vnd.ms-excel"},
        {".sln", "text/plain"},
        {".slupkg-ms", "application/x-ms-license"},
        {".smd", "audio/x-smd"},
        {".smi", "application/octet-stream"},
        {".smx", "audio/x-smd"},
        {".smz", "audio/x-smd"},
        {".snd", "audio/basic"},
        {".snippet", "application/xml"},
        {".snp", "application/octet-stream"},
        {".sol", "text/plain"},
        {".sor", "text/plain"},
        {".spc", "application/x-pkcs7-certificates"},
        {".spl", "application/futuresplash"},
        {".src", "application/x-wais-source"},
        {".srf", "text/plain"},
        {".SSISDeploymentManifest", "text/xml"},
        {".ssm", "application/streamingmedia"},
        {".sst", "application/vnd.ms-pki.certstore"},
        {".stl", "application/vnd.ms-pki.stl"},
        {".sv4cpio", "application/x-sv4cpio"},
        {".sv4crc", "application/x-sv4crc"},
        {".svc", "application/xml"},
        {".swf", "application/x-shockwave-flash"},
        {".t", "application/x-troff"},
        {".tar", "application/x-tar"},
        {".tcl", "application/x-tcl"},
        {".testrunconfig", "application/xml"},
        {".testsettings", "application/xml"},
        {".tex", "application/x-tex"},
        {".texi", "application/x-texinfo"},
        {".texinfo", "application/x-texinfo"},
        {".tgz", "application/x-compressed"},
        {".thmx", "application/vnd.ms-officetheme"},
        {".thn", "application/octet-stream"},
        {".tif", "image/tiff"},
        {".tiff", "image/tiff"},
        {".tlh", "text/plain"},
        {".tli", "text/plain"},
        {".toc", "application/octet-stream"},
        {".tr", "application/x-troff"},
        {".trm", "application/x-msterminal"},
        {".trx", "application/xml"},
        {".ts", "video/vnd.dlna.mpeg-tts"},
        {".tsv", "text/tab-separated-values"},
        {".ttf", "application/octet-stream"},
        {".tts", "video/vnd.dlna.mpeg-tts"},
        {".txt", "text/plain"},
        {".u32", "application/octet-stream"},
        {".uls", "text/iuls"},
        {".user", "text/plain"},
        {".ustar", "application/x-ustar"},
        {".vb", "text/plain"},
        {".vbdproj", "text/plain"},
        {".vbk", "video/mpeg"},
        {".vbproj", "text/plain"},
        {".vbs", "text/vbscript"},
        {".vcf", "text/x-vcard"},
        {".vcproj", "Application/xml"},
        {".vcs", "text/plain"},
        {".vcxproj", "Application/xml"},
        {".vddproj", "text/plain"},
        {".vdp", "text/plain"},
        {".vdproj", "text/plain"},
        {".vdx", "application/vnd.ms-visio.viewer"},
        {".vml", "text/xml"},
        {".vscontent", "application/xml"},
        {".vsct", "text/xml"},
        {".vsd", "application/vnd.visio"},
        {".vsi", "application/ms-vsi"},
        {".vsix", "application/vsix"},
        {".vsixlangpack", "text/xml"},
        {".vsixmanifest", "text/xml"},
        {".vsmdi", "application/xml"},
        {".vspscc", "text/plain"},
        {".vss", "application/vnd.visio"},
        {".vsscc", "text/plain"},
        {".vssettings", "text/xml"},
        {".vssscc", "text/plain"},
        {".vst", "application/vnd.visio"},
        {".vstemplate", "text/xml"},
        {".vsto", "application/x-ms-vsto"},
        {".vsw", "application/vnd.visio"},
        {".vsx", "application/vnd.visio"},
        {".vtx", "application/vnd.visio"},
        {".wav", "audio/wav"},
        {".wave", "audio/wav"},
        {".wax", "audio/x-ms-wax"},
        {".wbk", "application/msword"},
        {".wbmp", "image/vnd.wap.wbmp"},
        {".wcm", "application/vnd.ms-works"},
        {".wdb", "application/vnd.ms-works"},
        {".wdp", "image/vnd.ms-photo"},
        {".webarchive", "application/x-safari-webarchive"},
        {".webtest", "application/xml"},
        {".wiq", "application/xml"},
        {".wiz", "application/msword"},
        {".wks", "application/vnd.ms-works"},
        {".WLMP", "application/wlmoviemaker"},
        {".wlpginstall", "application/x-wlpg-detect"},
        {".wlpginstall3", "application/x-wlpg3-detect"},
        {".wm", "video/x-ms-wm"},
        {".wma", "audio/x-ms-wma"},
        {".wmd", "application/x-ms-wmd"},
        {".wmf", "application/x-msmetafile"},
        {".wml", "text/vnd.wap.wml"},
        {".wmlc", "application/vnd.wap.wmlc"},
        {".wmls", "text/vnd.wap.wmlscript"},
        {".wmlsc", "application/vnd.wap.wmlscriptc"},
        {".wmp", "video/x-ms-wmp"},
        {".wmv", "video/x-ms-wmv"},
        {".wmx", "video/x-ms-wmx"},
        {".wmz", "application/x-ms-wmz"},
        {".wpl", "application/vnd.ms-wpl"},
        {".wps", "application/vnd.ms-works"},
        {".wri", "application/x-mswrite"},
        {".wrl", "x-world/x-vrml"},
        {".wrz", "x-world/x-vrml"},
        {".wsc", "text/scriptlet"},
        {".wsdl", "text/xml"},
        {".wvx", "video/x-ms-wvx"},
        {".x", "application/directx"},
        {".xaf", "x-world/x-vrml"},
        {".xaml", "application/xaml+xml"},
        {".xap", "application/x-silverlight-app"},
        {".xbap", "application/x-ms-xbap"},
        {".xbm", "image/x-xbitmap"},
        {".xdr", "text/plain"},
        {".xht", "application/xhtml+xml"},
        {".xhtml", "application/xhtml+xml"},
        {".xla", "application/vnd.ms-excel"},
        {".xlam", "application/vnd.ms-excel.addin.macroEnabled.12"},
        {".xlc", "application/vnd.ms-excel"},
        {".xld", "application/vnd.ms-excel"},
        {".xlk", "application/vnd.ms-excel"},
        {".xll", "application/vnd.ms-excel"},
        {".xlm", "application/vnd.ms-excel"},
        {".xls", "application/vnd.ms-excel"},
        {".xlsb", "application/vnd.ms-excel.sheet.binary.macroEnabled.12"},
        {".xlsm", "application/vnd.ms-excel.sheet.macroEnabled.12"},
        {".xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"},
        {".xlt", "application/vnd.ms-excel"},
        {".xltm", "application/vnd.ms-excel.template.macroEnabled.12"},
        {".xltx", "application/vnd.openxmlformats-officedocument.spreadsheetml.template"},
        {".xlw", "application/vnd.ms-excel"},
        {".xml", "text/xml"},
        {".xmta", "application/xml"},
        {".xof", "x-world/x-vrml"},
        {".XOML", "text/plain"},
        {".xpm", "image/x-xpixmap"},
        {".xps", "application/vnd.ms-xpsdocument"},
        {".xrm-ms", "text/xml"},
        {".xsc", "application/xml"},
        {".xsd", "text/xml"},
        {".xsf", "text/xml"},
        {".xsl", "text/xml"},
        {".xslt", "text/xml"},
        {".xsn", "application/octet-stream"},
        {".xss", "application/xml"},
        {".xtp", "application/octet-stream"},
        {".xwd", "image/x-xwindowdump"},
        {".z", "application/x-compress"},
        {".zip", "application/x-zip-compressed"},
        #endregion

        };

    public static string GetMimeType(string extension)
    {
        if (extension == null)
        {
            throw new ArgumentNullException("extension");
        }

        if (!extension.StartsWith("."))
        {
            extension = "." + extension;
        }

        string mime;

        return _mappings.TryGetValue(extension, out mime) ? mime : "application/octet-stream";
    }


    public string[] ProcessFileTypes (string[] input)
    {

        //string uri_row, string fileName, string fileExt, string filetype, string ispage, string filepath
        string uri = input[0];
        string fileExt = input[2];
        string fileName = input[1];
        string filetype = input[3];
        string ispage = input[4];
        string filepath = input[5];


        //get type of file it is

        //check if file has an extension or it is not a file
        //if position of the dot in the end -> most likely file?

        if (fileName == "")
        {
            //root of the site
            filetype = "not a file";
            fileExt = "";
            ispage = "1";
            filepath = uri;

        } else if (fileName.IndexOf(".") == -1) { 
            //this is not a file, but path 
            if (uri.ToLower().IndexOf("cache") != -1)
            {
                //this is cache
                filetype = "cache";
                fileExt = "";
                ispage = "0";
                filepath = uri;
            } else
            {
                filetype = "not a file";
                fileExt = "";
                ispage = "0";
                filepath = uri;
            }
        

        } else {

       
        fileExt = "." + fileExt;


        if (fileExt.Length > 0)
        {
            //this is a file
            if (fileExt == ".php")
            {
                filetype = "text/php";
            }
            else
            {


                string mime = GetMimeType(fileExt);
                filetype = mime;
               
            }




            //is it page - hacky way :(

            if (fileExt == ".php" || fileExt == ".html" || fileExt == ".aspx" || fileExt == ".jsp")
            {
                ispage = "1";
            }
            else
            {
                ispage = "0";
            }

        }
        else
        {
            //this is url mod rewrite like / 
            filetype = "not a file";
        }

        //get file path
        if (fileName.Length >0 ) { 
        string path = uri.Replace(fileName, "");
        filepath = path;
        }
        }
        string[] response = new string[] { uri, fileName, filetype, fileExt, ispage, filepath };
        return response;
    }
}

]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_f8230d02b02c425885a64993a744d5d3.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8D3CA7CB-C19F-4A92-B921-8A7A44017037}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_f8230d02b02c425885a64993a744d5d3</RootNamespace>
    <AssemblyName>SC_f8230d02b02c425885a64993a744d5d3</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="MimeTypeMap, Version=2.1.0.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>C:\Users\Vladislavs\AppData\Local\Temp\Vsta\SSIS_SC120\VstacXhAXBEi0E__5KrUZM0__OQw\packages\MediaTypeMap.2.1.0.0\lib\net40\MimeTypeMap.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f8230d02b02c425885a64993a744d5d3.Properties.Settings.get_Default():SC_f8230d02b02c425885a64993a744d5d3.Properties.Sett" +
    "ings")]

namespace SC_f8230d02b02c425885a64993a744d5d3.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String requesturi
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool requesturi_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String filename
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
        set
        {
            this[1] = value;
        }
    }
    public bool filename_IsNull
    {
        get
        {
            return IsNull(1);
        }
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String fileextension
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
        set
        {
            this[2] = value;
        }
    }
    public bool fileextension_IsNull
    {
        get
        {
            return IsNull(2);
        }
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String typeoffile
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
        set
        {
            this[3] = value;
        }
    }
    public bool typeoffile_IsNull
    {
        get
        {
            return IsNull(3);
        }
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ispage
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
        set
        {
            this[4] = value;
        }
    }
    public bool ispage_IsNull
    {
        get
        {
            return IsNull(4);
        }
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String pathtofile
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
        set
        {
            this[5] = value;
        }
    }
    public bool pathtofile_IsNull
    {
        get
        {
            return IsNull(5);
        }
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_f8230d02b02c425885a64993a744d5d3</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_f8230d02b02c425885a64993a744d5d3</msb:DisplayName>
		<msb:ProjectId>{5ABB1723-C327-4C4B-BCEA-B7AA0945927A}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_f8230d02b02c425885a64993a744d5d3.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="packages.config"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f8230d02b02c425885a64993a744d5d3")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_f8230d02b02c425885a64993a744d5d3")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f8230d02b02c425885a64993a744d5d3.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f8230d02b02c425885a64993a744d5d3.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f8230d02b02c425885a64993a744d5d3.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f8230d02b02c425885a64993a744d5d3.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f8230d02b02c425885a64993a744d5d3.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="MediaTypeMap" version="2.1.0.0" targetFramework="net40" />
</packages>]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_f8230d02b02c425885a64993a744d5d3.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOeC7lgAAAAAAAAAAOAAIiALATAAAJAAAAAIAAAAAAAARq4A
AAAgAAAAwAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAAAAAQAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPStAABPAAAAAMAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAOAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAATI4AAAAgAAAAkAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAwAAAAAYAAACSAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAOAAAAACAAAAmAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAo
rgAAAAAAAEgAAAACAAUA1EkAAGhjAAABAAAAAAAAADytAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAQAiwAAAAEAABEDbwkAAAYK
A28NAAAGCwNvEQAABgwDbxUAAAYNA28ZAAAGEwQDbx0AAAYTBRyNGwAAASUWBqIlFweiJRgIoiUZ
CaIlGhEEoiUbEQWiEwYCEQYoBQAABhMHAxEHF5pvDgAABgMRBxiabxYAAAYDEQcZmm8SAAAGAxEH
GppvGgAABgMRBxuabx4AAAYqABMwAwA/AAAAAgAAEQItC3IBAABwcxIAAAp6AnIVAABwbxMAAAot
DXIVAABwAigUAAAKEAB+AQAABAISAG8VAAAKLQZyGQAAcCoGKgATMAQATgEAAAMAABEDFpoKAxia
CwMXmgwDGZoNAxqaEwQDG5oTBQhySwAAcCgWAAAKLBtyTQAAcA1ySwAAcAtyYwAAcBMEBhMFOOsA
AAAIchUAAHBvFwAAChUzSQZvGAAACnJnAABwbxcAAAoVLhtyZwAAcA1ySwAAcAtycwAAcBMEBhMF
OK8AAAByTQAAcA1ySwAAcAtycwAAcBMEBhMFOJQAAAByFQAAcAcoFAAACgsHbxkAAAoWMWIHcncA
AHAoFgAACiwIcoEAAHANKwcHKAQAAAYNB3J3AABwKBYAAAotJwdykwAAcCgWAAAKLRoHcp8AAHAo
FgAACi0NB3KrAABwKBYAAAosCXJjAABwEwQrD3JzAABwEwQrBnJNAABwDQhvGQAAChYxDgYIcksA
AHBvGgAAChMFHI0bAAABJRYGoiUXCKIlGAmiJRkHoiUaEQSiJRsRBaIqHgIoIwAABioAABMwBAAg
IwAAAAAAACgbAAAKcxwAAAolcrUAAHByvwAAcG8dAAAKJXLTAABwct0AAHBvHQAACiVy9QAAcHL/
AABwbx0AAAolchUBAHBy3QAAcG8dAAAKJXIhAQBwcv8AAHBvHQAACiVyLQEAcHI1AQBwbx0AAAol
cm0BAHBydQEAcG8dAAAKJXKRAQBwcpsBAHBvHQAACiVyrwEAcHIZAABwbx0AAAolcrkBAHBywwEA
cG8dAAAKJXLvAQBwcvkBAHBvHQAACiVyDQIAcHIZAABwbx0AAAolchcCAHByJQIAcG8dAAAKJXJb
AgBwcmkCAHBvHQAACiVykwIAcHKhAgBwbx0AAAolctMCAHByaQIAcG8dAAAKJXLhAgBwcu8CAHBv
HQAACiVyKQMAcHJpAgBwbx0AAAolcjcDAHByRQMAcG8dAAAKJXKNAwBwcpsDAHBvHQAACiVy2QMA
cHLjAwBwbx0AAAolci0EAHByOwQAcG8dAAAKJXJNBABwcmkCAHBvHQAACiVyVwQAcHJxBABwbx0A
AAolcqMEAHByaQIAcG8dAAAKJXKtBABwcrcEAHBvHQAACiVy3wQAcHKbAQBwbx0AAAolcusEAHBy
GQAAcG8dAAAKJXL1BABwcv0EAHBvHQAACiVyKwUAcHI1BQBwbx0AAAolck8FAHByWwUAcG8dAAAK
JXJxBQBwclsFAHBvHQAACiVyfQUAcHKHBQBwbx0AAAolcv8FAHByCQYAcG8dAAAKJXIvBgBwckkG
AHBvHQAACiVygwYAcHKNBgBwbx0AAAolcqMGAHByrQYAcG8dAAAKJXLNBgBwcq0GAHBvHQAACiVy
2QYAcHKtBgBwbx0AAAolcuUGAHByGQAAcG8dAAAKJXLvBgBwcvkGAHBvHQAACiVyFwcAcHKtBgBw
bx0AAAolciMHAHByGQAAcG8dAAAKJXItBwBwcjcHAHBvHQAACiVyTQcAcHKtBgBwbx0AAAolcp8A
AHByrQYAcG8dAAAKJXJZBwBwcvkGAHBvHQAACiVyYwcAcHL5BgBwbx0AAAolcm0HAHByeQcAcG8d
AAAKJXKjBwBwcqsHAHBvHQAACiVywwcAcHLNBwBwbx0AAAolcu0HAHBy9wcAcG8dAAAKJXIjCABw
cjcHAHBvHQAACiVyLQgAcHI7CABwbx0AAAolcmMIAHByGQAAcG8dAAAKJXJtCABwcncIAHBvHQAA
CiVyiwgAcHI3BwBwbx0AAAolcpEIAHByGQAAcG8dAAAKJXKbCABwcqUIAHBvHQAACiVyvQgAcHLJ
CABwbx0AAAolcgcJAHByEQkAcG8dAAAKJXJNCQBwcjcHAHBvHQAACiVyVQkAcHI3BwBwbx0AAAol
cl0JAHByWwUAcG8dAAAKJXJpCQBwcnMJAHBvHQAACiVylwkAcHKhCQBwbx0AAAolctcJAHByGQAA
cG8dAAAKJXLhCQBwcu8JAHBvHQAACiVyIwoAcHItCgBwbx0AAAolclcKAHByYQoAcG8dAAAKJXJ5
CgBwcjcHAHBvHQAACiVygwoAcHKNCgBwbx0AAAolcqkKAHByrQYAcG8dAAAKJXK5CgBwcssKAHBv
HQAACiVy7woAcHKtBgBwbx0AAAolcgMLAHByDwsAcG8dAAAKJXI1CwBwcjcHAHBvHQAACiVyPwsA
cHJJCwBwbx0AAAolcnsLAHByhQsAcG8dAAAKJXKvCwBwcqEJAHBvHQAACiVyuQsAcHI3BwBwbx0A
AAolcsELAHByNwcAcG8dAAAKJXLTCwBwct0LAHBvHQAACiVyAQwAcHI3BwBwbx0AAAolchEMAHBy
GwwAcG8dAAAKJXItDABwcjcMAHBvHQAACiVySQwAcHIZAABwbx0AAAolclMMAHByNwcAcG8dAAAK
JXJdDABwchkAAHBvHQAACiVyZwwAcHKtBgBwbx0AAAolcn8MAHByNwcAcG8dAAAKJXKPDABwcpkM
AHBvHQAACiVyxwwAcHI3BwBwbx0AAAolctEMAHByGQAAcG8dAAAKJXLhDABwcqEJAHBvHQAACiVy
6wwAcHKtBgBwbx0AAAolcvcMAHBydwgAcG8dAAAKJXIBDQBwcgsNAHBvHQAACiVyIQ0AcHKZDABw
bx0AAAolcisNAHByOwQAcG8dAAAKJXI5DQBwckMNAHBvHQAACiVydQ0AcHI7BABwbx0AAAolco0N
AHBylw0AcG8dAAAKJXKpDQBwcrMNAHBvHQAACiVy2Q0AcHLlDQBwbx0AAAolckcOAHByUw4AcG8d
AAAKJXLkDgBwcrMNAHBvHQAACiVy7g4AcHL6DgBwbx0AAAolclwPAHByaA8AcG8dAAAKJXL5DwBw
chkAAHBvHQAACiVyAxAAcHI3BwBwbx0AAAolcg0QAHByOwQAcG8dAAAKJXIXEABwcjsEAHBvHQAA
CiVyLRAAcHILDQBwbx0AAAolcjUQAHByPxAAcG8dAAAKJXJjEABwcm0QAHBvHQAACiVyiRAAcHIZ
AABwbx0AAAolcpMQAHBymQwAcG8dAAAKJXKdEABwcqcQAHBvHQAACiVyxRAAcHIZAABwbx0AAAol
cs8QAHByGQAAcG8dAAAKJXLZEABwcv0EAHBvHQAACiVy4xAAcHLtEABwbx0AAAolcg0RAHByFxEA
cG8dAAAKJXIzEQBwcj0RAHBvHQAACiVyYREAcHIZAABwbx0AAAolcmsRAHByOwQAcG8dAAAKJXKD
EQBwco0RAHBvHQAACiVytREAcHK/EQBwbx0AAAolcukRAHBy+xEAcG8dAAAKJXIbEgBwchkAAHBv
HQAACiVyJRIAcHIvEgBwbx0AAAolck0SAHByVxIAcG8dAAAKJXJvEgBwcoMSAHBvHQAACiVytxIA
cHKDEgBwbx0AAAolcsESAHByrQYAcG8dAAAKJXLbEgBwcuUSAHBvHQAACiVy+RIAcHIHEwBwbx0A
AAolcicTAHByMRMAcG8dAAAKJXJJEwBwclUTAHBvHQAACiVyexMAcHKDEwBwbx0AAAolcqkTAHBy
NwcAcG8dAAAKJXKvEwBwcrkTAHBvHQAACiVy3RMAcHLpEwBwbx0AAAolcgEUAHByCxQAcG8dAAAK
JXI7FABwchkAAHBvHQAACiVyRRQAcHIZAABwbx0AAAolck8UAHByWRQAcG8dAAAKJXJ/FABwcjcH
AHBvHQAACiVyiRQAcHKTFABwbx0AAAolcsUUAHByzxQAcG8dAAAKJXLvFABwcvkUAHBvHQAACiVy
GxUAcHIlFQBwbx0AAAolcpMAAHByJRUAcG8dAAAKJXI5FQBwckMVAHBvHQAACiVyZRUAcHKtBgBw
bx0AAAolcm8VAHByrQYAcG8dAAAKJXJ5FQBwchkAAHBvHQAACiVygxUAcHKtBgBwbx0AAAolco0V
AHByrQYAcG8dAAAKJXKXFQBwchkAAHBvHQAACiVyoRUAcHIZAABwbx0AAAolcqsVAHByrQYAcG8d
AAAKJXK1FQBwchkAAHBvHQAACiVyvxUAcHIZAABwbx0AAAolcskVAHByGQAAcG8dAAAKJXLTFQBw
ciUVAHBvHQAACiVy3RUAcHKtBgBwbx0AAAolcucVAHByGQAAcG8dAAAKJXLxFQBwcjcHAHBvHQAA
CiVy+xUAcHI3BwBwbx0AAAolcgEWAHByCxYAcG8dAAAKJXIlFgBwchkAAHBvHQAACiVyLxYAcHI3
BwBwbx0AAAolcjkWAHByQxYAcG8dAAAKJXJXFgBwcmEWAHBvHQAACiVyixYAcHI3BwBwbx0AAAol
cpUWAHByGQAAcG8dAAAKJXKfFgBwcjcHAHBvHQAACiVyqRYAcHKzFgBwbx0AAAolcu8WAHBy+RYA
cG8dAAAKJXIrFwBwcjUXAHBvHQAACiVyZxcAcHI3BwBwbx0AAAolcncXAHBygxcAcG8dAAAKJXK3
FwBwcsEXAHBvHQAACiVy3RcAcHKzFgBwbx0AAAolcucXAHBy8RcAcG8dAAAKJXIjGABwci8YAHBv
HQAACiVyYxgAcHJvGABwbx0AAAolcqMYAHByrxgAcG8dAAAKJXLjGABwcu0YAHBvHQAACiVyBRkA
cHIPGQBwbx0AAAolckEZAHByGQAAcG8dAAAKJXJNGQBwclcZAHBvHQAACiVyiRkAcHJXGQBwbx0A
AAolcpMZAHBynxkAcG8dAAAKJXK3GQBwcsMZAHBvHQAACiVy/RkAcHIZAABwbx0AAAolcgcaAHBy
ERoAcG8dAAAKJXInGgBwchEaAHBvHQAACiVyMxoAcHIRGgBwbx0AAAolcj0aAHByRRoAcG8dAAAK
JXJ3GgBwcoMaAHBvHQAACiVypRoAcHKvGgBwbx0AAAolcskaAHByNwcAcG8dAAAKJXLZGgBwcuca
AHBvHQAACiVyDxsAcHInGwBwbx0AAAolcmcbAHBycRsAcG8dAAAKJXKhGwBwcq0GAHBvHQAACiVy
tRsAcHIZAABwbx0AAAolcr8bAHByyRsAcG8dAAAKJXLnGwBwcjcHAHBvHQAACiVy8RsAcHLJGwBw
bx0AAAolcvsbAHByGQAAcG8dAAAKJXIFHABwcg8cAHBvHQAACiVyQxwAcHIPHABwbx0AAAolck0c
AHByVxwAcG8dAAAKJXJtHABwcnccAHBvHQAACiVypxwAcHJ3HABwbx0AAAolcrMcAHByVxwAcG8d
AAAKJXK9HABwcsccAHBvHQAACiVy5xwAcHLHHABwbx0AAAolcvMcAHBy/RwAcG8dAAAKJXIRHQBw
chsdAHBvHQAACiVyLx0AcHI5HQBwbx0AAAolck0dAHByVx0AcG8dAAAKJXJvHQBwcnkdAHBvHQAA
CiVykR0AcHKbHQBwbx0AAAolcr0dAHByNwcAcG8dAAAKJXLHHQBwctEdAHBvHQAACiVyAR4AcHIV
HgBwbx0AAAolckkeAHByNwcAcG8dAAAKJXJTHgBwcq0GAHBvHQAACiVyYx4AcHJpAgBwbx0AAAol
cm0eAHBydx4AcG8dAAAKJXKlHgBwcmkCAHBvHQAACiVyrx4AcHIZAABwbx0AAAolcrkeAHBywR4A
cG8dAAAKJXLvHgBwcvkeAHBvHQAACiVyNR8AcHKnEABwbx0AAAolcj8fAHBypxAAcG8dAAAKJXJN
HwBwclcfAHBvHQAACiVyax8AcHJXHwBwbx0AAAolcncfAHByGQAAcG8dAAAKJXKBHwBwcjcHAHBv
HQAACiVyiR8AcHKTHwBwbx0AAAolcrkfAHByOwQAcG8dAAAKJXLDHwBwcs0fAHBvHQAACiVy+R8A
cHJXHABwbx0AAAolcgMgAHByDSAAcG8dAAAKJXItIABwcjsgAHBvHQAACiVyXyAAcHJXHABwbx0A
AAolcmkgAHByVxwAcG8dAAAKJXJ1IABwcn8gAHBvHQAACiVylSAAcHKfIABwbx0AAAolcrMgAHBy
nyAAcG8dAAAKJXK/IABwclccAHBvHQAACiVyySAAcHJXHABwbx0AAAolctMgAHByVxwAcG8dAAAK
JXLfIABwcukgAHBvHQAACiVyKSEAcHJXHABwbx0AAAolcjMhAHByPSEAcG8dAAAKJXJzIQBwclcc
AHBvHQAACiVyfyEAcHINIABwbx0AAAolcokhAHBykSEAcG8dAAAKJXK/IQBwchkAAHBvHQAACiVy
ySEAcHIZAABwbx0AAAolctMhAHBydxwAcG8dAAAKJXLdIQBwcq0GAHBvHQAACiVy5yEAcHIPHABw
bx0AAAolcvEhAHBy+yEAcG8dAAAKJXIzIgBwcj0iAHBvHQAACiVyYyIAcHJrIgBwbx0AAAolcpUi
AHBy+QYAcG8dAAAKJXKfIgBwcqcQAHBvHQAACiVyqSIAcHIZAABwbx0AAAolcrMiAHByvSIAcG8d
AAAKJXLdIgBwcuciAHBvHQAACiVyAyMAcHI3BwBwbx0AAAolcg0jAHByNwcAcG8dAAAKJXIXIwBw
ciEjAHBvHQAACiVygSMAcHKLIwBwbx0AAAolcrcjAHBywSMAcG8dAAAKJXIRJABwchskAHBvHQAA
CiVyQyQAcHIbJABwbx0AAAolck8kAHByGyQAcG8dAAAKJXJfJABwchskAHBvHQAACiVybyQAcHIb
JABwbx0AAAolcn8kAHByGyQAcG8dAAAKJXKRJABwcq0GAHBvHQAACiVyqyQAcHK3JABwbx0AAAol
cgMlAHByDSUAcG8dAAAKJXIzJQBwcj0lAHBvHQAACiVyZyUAcHJxJQBwbx0AAAolcrMlAHByvSUA
cG8dAAAKJXLrJQBwcr0lAHBvHQAACiVy9SUAcHL/JQBwbx0AAAolcj8mAHBySSYAcG8dAAAKJXKB
JgBwcosmAHBvHQAACiVyuyYAcHLJJgBwbx0AAAolcvUmAHBy/yYAcG8dAAAKJXIVJwBwchkAAHBv
HQAACiVyHycAcHIZAABwbx0AAAolciknAHByMycAcG8dAAAKJXJTJwBwchkAAHBvHQAACiVyXScA
cHIZAABwbx0AAAolcmcnAHByPSUAcG8dAAAKJXJxJwBwcnsnAHBvHQAACiVyrScAcHL/JgBwbx0A
AAolcrcnAHBy/yYAcG8dAAAKJXLDJwBwcjcHAHBvHQAACiVy0ycAcHI3BwBwbx0AAAolcucnAHBy
8ScAcG8dAAAKJXInKABwcjEoAHBvHQAACiVySSgAcHJTKABwbx0AAAolcn8oAHByUygAcG8dAAAK
JXJ3AABwcoEAAHBvHQAACiVyiSgAcHJTKABwbx0AAAolcpMoAHByUygAcG8dAAAKJXKdKABwclMo
AHBvHQAACiVypygAcHKxKABwbx0AAAolcsUoAHByzygAcG8dAAAKJXL/KABwcpsdAHBvHQAACiVy
CSkAcHKbHQBwbx0AAAolchUpAHBysSgAcG8dAAAKJXIfKQBwcikpAHBvHQAACiVyZSkAcHJxKQBw
bx0AAAolct8pAHBy6ykAcG8dAAAKJXJ4KgBwcikpAHBvHQAACiVygioAcHKOKgBwbx0AAAolcvYq
AHByACsAcG8dAAAKJXIwKwBwcikpAHBvHQAACiVyOisAcHJGKwBwbx0AAAolcrYrAHBywisAcG8d
AAAKJXJRLABwcikpAHBvHQAACiVyWywAcHJnLABwbx0AAAolct0sAHBy6SwAcG8dAAAKJXJ+LQBw
cogtAHBvHQAACiVyti0AcHIZAABwbx0AAAolcsAtAHByGQAAcG8dAAAKJXLKLQBwcv0EAHBvHQAA
CiVy0i0AcHLeLQBwbx0AAAolcgwuAHByGQAAcG8dAAAKJXIWLgBwcq0GAHBvHQAACiVyJC4AcHIZ
AABwbx0AAAolci4uAHByGQAAcG8dAAAKJXI4LgBwckIuAHBvHQAACiVydi4AcHIpKQBwbx0AAAol
coAuAHByii4AcG8dAAAKJXK2LgBwcoouAHBvHQAACiVywi4AcHINIABwbx0AAAolcsouAHBy1C4A
cG8dAAAKJXL4LgBwctQuAHBvHQAACiVyBC8AcHIOLwBwbx0AAAolckovAHByGQAAcG8dAAAKJXJU
LwBwclwvAHBvHQAACiVyhi8AcHJcLwBwbx0AAAolcpAvAHByGQAAcG8dAAAKJXKaLwBwcqQvAHBv
HQAACiVyyi8AcHLULwBwbx0AAAolcv4vAHByNwcAcG8dAAAKJXIGMABwcjcHAHBvHQAACiVyEDAA
cHI3BwBwbx0AAAolchowAHByrQYAcG8dAAAKJXImMABwcq0GAHBvHQAACiVyMjAAcHI6MABwbx0A
AAolcmgwAHBycjAAcG8dAAAKJXKKMABwcjcHAHBvHQAACiVylDAAcHKcMABwbx0AAAolctYwAHBy
Vx8AcG8dAAAKJXLgMABwcuowAHBvHQAACiVyMjEAcHI+MQBwbx0AAAolcmYxAHBycDEAcG8dAAAK
JXKoMQBwcrIxAHBvHQAACiVyzjEAcHLYMQBwbx0AAAolcvgxAHByAjIAcG8dAAAKJXIeMgBwcq0G
AHBvHQAACiVyMDIAcHI3BwBwbx0AAAolcjYyAHByTjIAcG8dAAAKJXKOMgBwcpgyAHBvHQAACiVy
yjIAcHLUMgBwbx0AAAolcvIyAHBy/DIAcG8dAAAKJXIUMwBwch4zAHBvHQAACiVyPjMAcHIZAABw
bx0AAAolckgzAHBycDMAcG8dAAAKJXLCMwBwctIzAHBvHQAACiVyGDQAcHIoNABwbx0AAAolcng0
AHByrQYAcG8dAAAKJXKMNABwcpo0AHBvHQAACiVywjQAcHLONABwbx0AAAolcuI0AHBy6jQAcG8d
AAAKJXIMNQBwchg1AHBvHQAACiVyPjUAcHIlFQBwbx0AAAolckw1AHByVjUAcG8dAAAKJXKCNQBw
cq0GAHBvHQAACiVylDUAcHKtBgBwbx0AAAolcqA1AHByrDUAcG8dAAAKJXIUNgBwciA2AHBvHQAA
CiVypzYAcHKxNgBwbx0AAAolcuM2AHByNwcAcG8dAAAKJXLtNgBwcgM3AHBvHQAACiVyNTcAcHI/
NwBwbx0AAAolclc3AHByGQAAcG8dAAAKJXJhNwBwcj83AHBvHQAACiVyazcAcHI/NwBwbx0AAAol
cnU3AHByqwcAcG8dAAAKJXJ/NwBwcq0GAHBvHQAACiVykTcAcHIZAABwbx0AAAolcps3AHByNwcA
cG8dAAAKJXKlNwBwcjcHAHBvHQAACiVyrzcAcHJxJQBwbx0AAAolcrk3AHBywzcAcG8dAAAKJXL1
NwBwcv83AHBvHQAACiVyMzgAcHI3BwBwbx0AAAolcj04AHByOwQAcG8dAAAKJXJtOABwcnc4AHBv
HQAACiVyrTgAcHK3OABwbx0AAAolcvk4AHByAzkAcG8dAAAKJXI5OQBwcks5AHBvHQAACiVydzkA
cHKHOQBwbx0AAAolcrE5AHByrQYAcG8dAAAKJXK7OQBwcvkeAHBvHQAACiVyxTkAcHI+MQBwbx0A
AAolcss5AHBy1TkAcG8dAAAKJXL5OQBwcgM6AHBvHQAACiVyJzoAcHKtBgBwbx0AAAolckU6AHBy
rQYAcG8dAAAKJXJhOgBwcms6AHBvHQAACiVyjzoAcHKbOgBwbx0AAAolcsc6AHBymzoAcG8dAAAK
JXLZOgBwcuM6AHBvHQAACiVyFTsAcHIhOwBwbx0AAAolcl87AHByGQAAcG8dAAAKJXJpOwBwcnM7
AHBvHQAACiVyiTsAcHJzOwBwbx0AAAolcpU7AHByNwcAcG8dAAAKJXKfOwBwcjcHAHBvHQAACiVy
qTsAcHIZAABwbx0AAAolcrM7AHByPjEAcG8dAAAKJXK7OwBwcsU7AHBvHQAACiVy9zsAcHKtBgBw
bx0AAAolcgE8AHBydxwAcG8dAAAKJXIJPABwchM8AHBvHQAACiVyRzwAcHIZAABwbx0AAAolclE8
AHBydxwAcG8dAAAKJXJbPABwcjcHAHBvHQAACiVyZTwAcHIZAABwbx0AAAolcm88AHByeTwAcG8d
AAAKJXKNPABwcjcHAHBvHQAACiVymTwAcHKnPABwbx0AAAolcs88AHByNwcAcG8dAAAKJXLXPABw
cjcHAHBvHQAACiVy6TwAcHJXHABwbx0AAAolcvM8AHByNwcAcG8dAAAKJXIDPQBwcg09AHBvHQAA
CiVyKT0AcHIzPQBwbx0AAAolck09AHBy+xEAcG8dAAAKJXJdPQBwcjcHAHBvHQAACiVyZz0AcHL7
EQBwbx0AAAolcnk9AHByNwcAcG8dAAAKJXKLPQBwcjcHAHBvHQAACiVylT0AcHI3BwBwbx0AAAol
cqU9AHByrz0AcG8dAAAKJXLvPQBwcjsEAHBvHQAACiVy+T0AcHKtBgBwbx0AAAolcg8+AHByOwQA
cG8dAAAKJXIbPgBwciU+AHBvHQAACiVyUT4AcHJbPgBwbx0AAAolcoE+AHByjT4AcG8dAAAKJXKv
PgBwcjsEAHBvHQAACiVyyz4AcHI7BABwbx0AAAolcuc+AHByrQYAcG8dAAAKJXL1PgBwcjcHAHBv
HQAACiVyBT8AcHIlPgBwbx0AAAolcg8/AHByNwcAcG8dAAAKJXIdPwBwcjsEAHBvHQAACiVyNT8A
cHI3BwBwbx0AAAolckU/AHByJT4AcG8dAAAKJXJPPwBwcjsEAHBvHQAACiVyZz8AcHJzPwBwbx0A
AAolcp8/AHByJT4AcG8dAAAKJXKpPwBwciU+AHBvHQAACiVysz8AcHIlPgBwbx0AAAolcr0/AHBy
xz8AcG8dAAAKJXLbPwBwcsc/AHBvHQAACiVy5z8AcHLxPwBwbx0AAAolcg9AAHBysw0AcG8dAAAK
JXIZQABwciVAAHBvHQAACiVyS0AAcHJVQABwbx0AAAolcodAAHByVUAAcG8dAAAKJXKRQABwcptA
AHBvHQAACiVywUAAcHLZQABwbx0AAAolchlBAHByrQYAcG8dAAAKJXIrQQBwcq0GAHBvHQAACiVy
NUEAcHKzDQBwbx0AAAolcj9BAHByVUAAcG8dAAAKJXJJQQBwclVBAHBvHQAACiVyh0EAcHKhQQBw
bx0AAAolctVBAHBy8UEAcG8dAAAKJXInQgBwci9CAHBvHQAACiVyS0IAcHJVQgBwbx0AAAolcnNC
AHByfUIAcG8dAAAKJXKnQgBwcrFCAHBvHQAACiVy40IAcHLtQgBwbx0AAAolcg9DAHByG0MAcG8d
AAAKJXJNQwBwcllDAHBvHQAACiVyh0MAcHKVQwBwbx0AAAolctNDAHBy3UMAcG8dAAAKJXL7QwBw
cgVEAHBvHQAACiVyI0QAcHItRABwbx0AAAolcktEAHByVUQAcG8dAAAKJXJ/RABwcolEAHBvHQAA
CiVyt0QAcHJVQABwbx0AAAolcsFEAHByy0QAcG8dAAAKJXL3RABwci8SAHBvHQAACiVyAUUAcHIv
EgBwbx0AAAolcgtFAHBy1DIAcG8dAAAKJXIVRQBwcjsEAHBvHQAACiVyIUUAcHIrRQBwbx0AAAol
cklFAHByT0UAcG8dAAAKJXJ3RQBwci8SAHBvHQAACiVygUUAcHKNRQBwbx0AAAolcrdFAHBywUUA
cG8dAAAKJXL9RQBwcglGAHBvHQAACiVyNUYAcHI/RgBwbx0AAAolcl9GAHByNwcAcG8dAAAKJXJp
RgBwcnNGAHBvHQAACiVyn0YAcHJzRgBwbx0AAAolcq1GAHBysTYAcG8dAAAKJXK3RgBwcsNGAHBv
HQAACiVyIUcAcHKxNgBwbx0AAAolcitHAHBysTYAcG8dAAAKJXI1RwBwcrE2AHBvHQAACiVyP0cA
cHKxNgBwbx0AAAolcklHAHBysTYAcG8dAAAKJXJTRwBwcrE2AHBvHQAACiVyXUcAcHJpRwBwbx0A
AAolctVHAHBy4UcAcG8dAAAKJXI/SABwcktIAHBvHQAACiVy0EgAcHKxNgBwbx0AAAolctpIAHBy
5kgAcG8dAAAKJXJKSQBwclZJAHBvHQAACiVy4UkAcHKxNgBwbx0AAAolcutJAHByOwQAcG8dAAAK
JXL1SQBwcq0GAHBvHQAACiVyAUoAcHIvEgBwbx0AAAolcgtKAHByNwcAcG8dAAAKJXIXSgBwciFK
AHBvHQAACiVyQUoAcHJLSgBwbx0AAAolcolKAHByOwQAcG8dAAAKJXKZSgBwcq0GAHBvHQAACiVy
o0oAcHI7BABwbx0AAAolcq1KAHByOwQAcG8dAAAKJXK3SgBwcjsEAHBvHQAACiVywUoAcHI7BABw
bx0AAAolcs1KAHByGQAAcG8dAAAKJXLXSgBwcq0GAHBvHQAACiVy4UoAcHIZAABwbx0AAAolcutK
AHBy9UoAcG8dAAAKJXIdSwBwciNLAHBvHQAACiVyUUsAcHJbSwBwbx0AAAqAAQAABCoqAgMEBSge
AAAKKlICex8AAAoCeyAAAAoWlG8hAAAKKiYCFgMoIgAACioiAhYoIwAACipaAywIAhYoJAAACipy
lUsAcHMlAAAKelICex8AAAoCeyAAAAoXlG8hAAAKKiYCFwMoIgAACioiAhcoIwAACipaAywIAhco
JAAACipylUsAcHMlAAAKelICex8AAAoCeyAAAAoYlG8hAAAKKiYCGAMoIgAACioiAhgoIwAACipa
AywIAhgoJAAACipylUsAcHMlAAAKelICex8AAAoCeyAAAAoZlG8hAAAKKiYCGQMoIgAACioiAhko
IwAACipaAywIAhkoJAAACipylUsAcHMlAAAKelICex8AAAoCeyAAAAoalG8hAAAKKiYCGgMoIgAA
CioiAhooIwAACipaAywIAhooJAAACipylUsAcHMlAAAKelICex8AAAoCeyAAAAoblG8hAAAKKiYC
GwMoIgAACioiAhsoIwAACipaAywIAhsoJAAACipylUsAcHMlAAAKeh4CKCYAAAoqHgIoJwAACip+
AigoAAAKAgJzJwAABn0CAAAEAgJzKAAABn0DAAAEKpIEcjJMAHAabykAAAosFQIFAgMoKgAACg4E
cwgAAAZvJQAABipKKwcCA28mAAAGA28hAAAGLfEqBio6AigrAAAKAgN9BAAABCo6AigrAAAKAgN9
BQAABCqWAnsFAAAEbywAAApyQkwAcG8tAAAKKC4AAApvLwAACnQbAAABKnICewUAAARvLAAACnJC
TABwby0AAAoDbzAAAAoqlgJ7BQAABG8sAAAKckxMAHBvLQAACiguAAAKby8AAAp0GwAAASpyAnsF
AAAEbywAAApyTEwAcG8tAAAKA28wAAAKKpYCewUAAARvLAAACnJcTABwby0AAAooLgAACm8vAAAK
dBsAAAEqcgJ7BQAABG8sAAAKclxMAHBvLQAACgNvMAAACiqWAnsFAAAEbywAAApyakwAcG8tAAAK
KC4AAApvLwAACnQbAAABKnICewUAAARvLAAACnJqTABwby0AAAoDbzAAAAoqlgJ7BQAABG8sAAAK
cn5MAHBvLQAACiguAAAKby8AAAp0GwAAASpyAnsFAAAEbywAAApyfkwAcG8tAAAKA28wAAAKKpYC
ewUAAARvLAAACnKSTABwby0AAAooLgAACm8vAAAKdBsAAAEqcgJ7BQAABG8sAAAKcpJMAHBvLQAA
CgNvMAAACioeAigrAAAKKq5+BgAABC0ecqJMAHDQBwAAAigxAAAKbzIAAApzMwAACoAGAAAEfgYA
AAQqGn4HAAAEKh4CgAcAAAQqGn4IAAAEKh4CKDQAAAoqLnM6AAAGgAgAAAQqAAAAQlNKQgEAAQAA
AAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAnAkAACN+AAAICgAA/AkAACNTdHJpbmdzAAAAAAQU
AAAUTQAAI1VTABhhAAAQAAAAI0dVSUQAAAAoYQAAQAIAACNCbG9iAAAAAAAAAAIAAAFXFaIJCQEA
AAD6ATMAFgAAAQAAACgAAAAIAAAACAAAADsAAAAhAAAANAAAABAAAAADAAAABAAAABUAAAAoAAAA
AgAAAAEAAAAFAAAAAQAAAAAAhwQBAAAAAAAGABIDbQcGAKYDbQcGAF4CWgcPAOEHAAAGAIsCNwYG
APUCNwYGANYCNwYGAI0DNwYGADIDNwYGAEsDNwYGAKICNwYGAL0C/wMKAGYDawEGAE4AmgAKAO0G
awEOAN4GawEKAJYGawEKANYIawEGAJkIywUGAEECWgcGAP4GjQcGAIoGIgYSABECcQQSAHICcQQS
ANoBDQYGACYCbQcGABwEywUGAEkGywUGADYHywUGAE8AmgAGADoAmgAGAF8GywUGAHkGywUWABEA
DgcWAAEADgdLAFIJAAAWACIADgcGAJMBywUGAOcAywUGAKUJNwYAAAAAgAAAAAAAAQABAAEAEADe
BQAAEAABAAEAAQAQANEGAAA9AAIACAABABAAuAgAAEkAAgAjAAEAEACGCAAATQAEACcAAQAQACwI
AABNAAUAKAAAABAAlAfwB00ABgA1AAABEAB2CPAHZQAIADkAEQBsCAMBBgCGCAsBBgAsCA8BAQDG
CBMBAQDGCBMBEQDSBRcBEQDKARsBEQDBAB8BUCAAAAAAxgDEAwYAAQBYIAAAAADGAM8DBgABAGAg
AAAAAMYAggkjAQEA+CAAAAAAlgCMASkBAgBEIQAAAACGADYILgEDAJ4iAAAAAIYYTQcGAAQAqCIA
AAAAkRhTBzUBBADURQAAAACGGE0HhwAEAN9FAAAAAIYIUwRbAAcA9EUAAAAAhghiBBAABwD+RQAA
AACGCFMFqQAIAAdGAAAAAIYIaQU5AQgAHkYAAAAAhghRAVsACQAzRgAAAACGCF4BEAAJAD1GAAAA
AIYIKwWpAAoARkYAAAAAhgg/BTkBCgBdRgAAAACGCOkFWwALAHJGAAAAAIYI+wUQAAsAfEYAAAAA
hgh/BakADACFRgAAAACGCJgFOQEMAJxGAAAAAIYICwFbAA0AsUYAAAAAhggaARAADQC7RgAAAACG
CNMEqQAOAMRGAAAAAIYI6QQ5AQ4A20YAAAAAhgjRAFsADwDwRgAAAACGCNwAEAAPAPpGAAAAAIYI
rwSpABAAA0cAAAAAhgjBBDkBEAAaRwAAAACGCCkBWwARAC9HAAAAAIYIOAEQABEAOUcAAAAAhgj/
BKkAEgBCRwAAAACGCBUFOQESAFlHAAAAAIYAmQmpABMAYUcAAAAAhgCgCKkAEwBpRwAAAACGGE0H
BgATAIlHAAAAAMYAKwk+ARMArkcAAAAAxgEkCSMBFwDBRwAAAADGAYIJIwEYAMNHAAAAAIYYTQdI
ARkA0kcAAAAAhhhNB0gBGgDhRwAAAACGCMYJWwAbAAdIAAAAAIYIzwkQABsAJEgAAAAAhgiuCVsA
HABKSAAAAACGCLoJEAAcAGdIAAAAAIYI5AlbAB0AjUgAAAAAhgjvCRAAHQCqSAAAAACGCCMEWwAe
ANBIAAAAAIYIMAQQAB4A7UgAAAAAhgiYAVsAHwATSQAAAACGCKUBEAAfADBJAAAAAIYI0QBbACAA
VkkAAAAAhgjcABAAIABzSQAAAACDGE0HBgAhAHtJAAAAAJMI+gZOASEAp0kAAAAAkwiyAVMBIQCu
SQAAAACTCL4BWAEhALZJAAAAAJYIrAheASIAvUkAAAAAhhhNBwYAIgDFSQAAAACRGFMHNQEiAAAA
AQCdCQAAAQADBgAAAQA4CQAAAQDzBgAAAgBHCAAAAwCkBgAAAQDxAwAAAQDxAwAAAQDxAwAAAQDx
AwAAAQDxAwAAAQDxAwAAAQDxAwAAAQDxAwAAAQDxAwAAAQDxAwAAAQDxAwAAAQDxAwAAAQCJAAAA
AgBHAQAAAwDzBgAABACkBgAAAQDzBgAAAQCdCQAAAQDcCAAAAQDcCAAAAQDxAwAAAQDxAwAAAQDx
AwAAAQDxAwAAAQDxAwAAAQDxAwAAAQDxAwkATQcBABEATQcGABkATQcKACkATQcQADEATQcQADkA
TQcQAEEATQcQAEkATQcQAFEATQcQAFkATQcQAGEATQcQAGkATQcGAKEATQcGAMEATQcVANEATQcG
AJEAxAMGAJEAzwMGAOEATQcQANkASAQsANkAkggxAAwA5QM+ANkA2AlQANkA9wNWANkARQdbANkA
PQRfANkAuQBjAOkA8gFpABQATQd1ABQAtQB/AHkATQeHAHkA8waRAHkARwiVAIEAGQSZAHkAwgWe
AHkAqgWkAHkAsQUBAAEBTQcQAHkAmQmpAHkAoAipAJEATQcGANkAfwitAJEAWwi1AJkATQcGAJEA
Hwi7ABEBuQXBAJEAbQnIABkBPgnOABkB2wPVADEB+QDaADEBoQnjAKkATQfpAMkATQcGAC4ACwB6
AS4AEwCDAS4AGwCiAS4AIwCrAS4AKwDUAS4AMwDUAS4AOwDUAS4AQwCrAS4ASwDaAS4AUwDUAS4A
WwDxAUMAYwA5AuMAawA5AgEBewA5AmkCcwCiAYkCcwCiARsAKABHAAMAAQAGAA0ABwATAAgAFQAA
AGYEYwEAAG0FZwEAAGIBYwEAAEMFZwEAAP8FYwEAAJwFZwEAAB4BYwEAAO0EZwEAAOAAYwEAAMUE
ZwEAADwBYwEAABkFZwEAANMJYwEAAL4JYwEAAPMJYwEAADQEYwEAAKkBYwEAAOAAYwEAAP4GawEA
ANIBcAEAALAIdQECAAkAAwABAAoAAwACAAsABQABAAwABQACAA0ABwABAA4ABwACAA8ACQABABAA
CQACABEACwABABIACwACABMADQABABQADQACABUADwABABYADwACABcAEQABABgAEQACABkAEwAB
ABoAEwACABsAFQABABwAFQACAB0AFwABAB4AFwACAB8AGQABACAAGQACACkAGwABACoAGwACACsA
HQABACwAHQACAC0AHwABAC4AHwACAC8AIQABADAAIQACADEAIwABADIAIwACADMAJQABADQAJQAC
ADYAJwACADcAKQABADgAKQACADkAKwA3AG4ABIAAAAEAAACnGHuRAAAAAAAAXAAAAAQAAAAAAAAA
AAAAAPEAkQAAAAAADAAAAAAAAAAAAAAA+gDmCAAAAAAMAAAAAAAAAAAAAAD6AAMJAAAAAAQAAAAA
AAAAAAAAAPEAywUAAAAADAAAAAAAAAAAAAAA+gCuBgAAAAAAAAAAAQAAAJ4HAAAAAAAAAElEVFNW
YXJpYWJsZTEwMABJRFRTVmFyaWFibGVzMTAwAElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAElFcXVh
bGl0eUNvbXBhcmVyYDEASURpY3Rpb25hcnlgMgBTQ19mODIzMGQwMmIwMmM0MjU4ODVhNjQ5OTNh
NzQ0ZDVkMwA8TW9kdWxlPgBJbnB1dElEAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5l
cmljAEFkZABSZXBsYWNlAGRlZmF1bHRJbnN0YW5jZQBnZXRfaXNwYWdlAHNldF9pc3BhZ2UAUnVu
dGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X3R5cGVvZmZpbGUAc2V0X3R5cGVv
ZmZpbGUAZ2V0X3BhdGh0b2ZpbGUAc2V0X3BhdGh0b2ZpbGUASW5wdXROYW1lAGdldF9maWxlbmFt
ZQBzZXRfZmlsZW5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAR2V0TWltZVR5
cGUAZ2V0X2ZpbGV0eXBlAHNldF9maWxldHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNv
dXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAZ2V0X0ludmFyaWFudEN1bHR1cmVJ
Z25vcmVDYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JC
cm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRB
dHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUA
UG9zdEV4ZWN1dGUAc2V0X1ZhbHVlAFRyeUdldFZhbHVlAHZhbHVlAEluZGV4T2YAU3lzdGVtLlJ1
bnRpbWUuVmVyc2lvbmluZwBHZXRTdHJpbmcAZ2V0X2ZpbGVwYXRoAHNldF9maWxlcGF0aABnZXRf
TGVuZ3RoAFN0YXJ0c1dpdGgAZ2V0X3JlcXVlc3R1cmkAc2V0X3JlcXVlc3R1cmkAU3lzdGVtLkNv
bXBvbmVudE1vZGVsAFNDX2Y4MjMwZDAyYjAyYzQyNTg4NWE2NDk5M2E3NDRkNWQzLmRsbABnZXRf
aXNwYWdlX0lzTnVsbABzZXRfaXNwYWdlX0lzTnVsbABnZXRfdHlwZW9mZmlsZV9Jc051bGwAc2V0
X3R5cGVvZmZpbGVfSXNOdWxsAGdldF9wYXRodG9maWxlX0lzTnVsbABzZXRfcGF0aHRvZmlsZV9J
c051bGwAZ2V0X2ZpbGVuYW1lX0lzTnVsbABzZXRfZmlsZW5hbWVfSXNOdWxsAGdldF9yZXF1ZXN0
dXJpX0lzTnVsbABzZXRfcmVxdWVzdHVyaV9Jc051bGwAZ2V0X2ZpbGVleHRlbnNpb25fSXNOdWxs
AHNldF9maWxlZXh0ZW5zaW9uX0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3Rl
bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAGdldF9maWxlZXh0ZW5zaW9uAHNldF9maWxlZXh0ZW5z
aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZs
ZWN0aW9uAEFyZ3VtZW50TnVsbEV4Y2VwdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0
cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9z
b2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIA
U2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
UnVudGltZS5XcmFwcGVyAFN0cmluZ0NvbXBhcmVyAFRvTG93ZXIALmN0b3IALmNjdG9yAFN5c3Rl
bS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNv
dXJjZXMAU0NfZjgyMzBkMDJiMDJjNDI1ODg1YTY0OTkzYTc0NGQ1ZDMuUHJvcGVydGllcy5SZXNv
dXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDX2Y4MjMwZDAyYjAyYzQyNTg4NWE2NDk5
M2E3NDRkNWQzLlByb3BlcnRpZXMAZ2V0X1JlYWRXcml0ZVZhcmlhYmxlcwBQcm9jZXNzRmlsZVR5
cGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBfbWFwcGluZ3MAU2V0dGlu
Z3MARXF1YWxzAENvbm5lY3Rpb25zAENvbmNhdABPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1
bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5w
dXQwX1Byb2Nlc3NJbnB1dABpbnB1dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVu
dEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cA
TmV4dFJvdwBnZXRfQXNzZW1ibHkAZ2V0X2NvdW50cnkAc2V0X2NvdW50cnkAZ2V0X2NpdHkAc2V0
X2NpdHkAb3BfRXF1YWxpdHkAZ2V0X2NvdW50eQBzZXRfY291bnR5AAAAABNlAHgAdABlAG4AcwBp
AG8AbgAAAy4AADFhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBvAGMAdABlAHQALQBzAHQAcgBlAGEA
bQABAQAVbgBvAHQAIABhACAAZgBpAGwAZQAAAzEAAAtjAGEAYwBoAGUAAAMwAAAJLgBwAGgAcAAA
EXQAZQB4AHQALwBwAGgAcAAACy4AaAB0AG0AbAAACy4AYQBzAHAAeAAACS4AagBzAHAAAAkuADMA
MgAzAAATdABlAHgAdAAvAGgAMwAyADMAAAkuADMAZwAyAAAXdgBpAGQAZQBvAC8AMwBnAHAAcAAy
AAAJLgAzAGcAcAAAFXYAaQBkAGUAbwAvADMAZwBwAHAAAAsuADMAZwBwADIAAAsuADMAZwBwAHAA
AAcuADcAegAAN2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQA3AHoALQBjAG8AbQBwAHIAZQBz
AHMAZQBkAAEHLgBhAGEAABthAHUAZABpAG8ALwBhAHUAZABpAGIAbABlAAAJLgBBAEEAQwAAE2EA
dQBkAGkAbwAvAGEAYQBjAAAJLgBhAGEAZgAACS4AYQBhAHgAACthAHUAZABpAG8ALwB2AG4AZAAu
AGEAdQBkAGkAYgBsAGUALgBhAGEAeAAACS4AYQBjADMAABNhAHUAZABpAG8ALwBhAGMAMwAACS4A
YQBjAGEAAA0uAGEAYwBjAGQAYQAANWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAG0AcwBhAGMAYwBl
AHMAcwAuAGEAZABkAGkAbgAADS4AYQBjAGMAZABiAAApYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8A
bQBzAGEAYwBjAGUAcwBzAAANLgBhAGMAYwBkAGMAADFhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBt
AHMAYQBjAGMAZQBzAHMALgBjAGEAYgAADS4AYQBjAGMAZABlAAANLgBhAGMAYwBkAHIAADlhAHAA
cABsAGkAYwBhAHQAaQBvAG4ALwBtAHMAYQBjAGMAZQBzAHMALgByAHUAbgB0AGkAbQBlAAANLgBh
AGMAYwBkAHQAAA0uAGEAYwBjAGQAdwAAR2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAG0AcwBhAGMA
YwBlAHMAcwAuAHcAZQBiAGEAcABwAGwAaQBjAGEAdABpAG8AbgAADS4AYQBjAGMAZgB0AAA9YQBw
AHAAbABpAGMAYQB0AGkAbwBuAC8AbQBzAGEAYwBjAGUAcwBzAC4AZgB0AGUAbQBwAGwAYQB0AGUA
AAkuAGEAYwB4AABJYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AaQBuAHQAZQByAG4AZQB0AC0AcABy
AG8AcABlAHIAdAB5AC0AcwB0AHIAZQBhAG0AAQ0uAEEAZABkAEkAbgAAEXQAZQB4AHQALwB4AG0A
bAAACS4AYQBkAGUAABkuAGEAZABvAGIAZQBiAHIAaQBkAGcAZQAAMWEAcABwAGwAaQBjAGEAdABp
AG8AbgAvAHgALQBiAHIAaQBkAGcAZQAtAHUAcgBsAAEJLgBhAGQAcAAACS4AQQBEAFQAACdhAHUA
ZABpAG8ALwB2AG4AZAAuAGQAbABuAGEALgBhAGQAdABzAAALLgBBAEQAVABTAAAJLgBhAGYAbQAA
By4AYQBpAAAtYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AcABvAHMAdABzAGMAcgBpAHAAdAAACS4A
YQBpAGYAABlhAHUAZABpAG8ALwB4AC0AYQBpAGYAZgABCy4AYQBpAGYAYwAAFWEAdQBkAGkAbwAv
AGEAaQBmAGYAAAsuAGEAaQBmAGYAAAkuAGEAaQByAAB3YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8A
dgBuAGQALgBhAGQAbwBiAGUALgBhAGkAcgAtAGEAcABwAGwAaQBjAGEAdABpAG8AbgAtAGkAbgBz
AHQAYQBsAGwAZQByAC0AcABhAGMAawBhAGcAZQArAHoAaQBwAAEJLgBhAG0AYwAAJWEAcABwAGwA
aQBjAGEAdABpAG8AbgAvAHgALQBtAHAAZQBnAAEZLgBhAHAAcABsAGkAYwBhAHQAaQBvAG4AADlh
AHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AbQBzAC0AYQBwAHAAbABpAGMAYQB0AGkAbwBuAAEJ
LgBhAHIAdAAAFWkAbQBhAGcAZQAvAHgALQBqAGcAAQkuAGEAcwBhAAAfYQBwAHAAbABpAGMAYQB0
AGkAbwBuAC8AeABtAGwAAAsuAGEAcwBhAHgAAAsuAGEAcwBjAHgAAAkuAGEAcwBkAAAJLgBhAHMA
ZgAAHXYAaQBkAGUAbwAvAHgALQBtAHMALQBhAHMAZgABCy4AYQBzAGgAeAAACS4AYQBzAGkAAAku
AGEAcwBtAAAVdABlAHgAdAAvAHAAbABhAGkAbgAACy4AYQBzAG0AeAAACS4AYQBzAHIAAAkuAGEA
cwB4AAALLgBhAHQAbwBtAAApYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AYQB0AG8AbQArAHgAbQBs
AAAHLgBhAHUAABdhAHUAZABpAG8ALwBiAGEAcwBpAGMAAAkuAGEAdgBpAAAfdgBpAGQAZQBvAC8A
eAAtAG0AcwB2AGkAZABlAG8AAQkuAGEAeABzAAArYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AbwBs
AGUAcwBjAHIAaQBwAHQAAAkuAGIAYQBzAAANLgBiAGMAcABpAG8AACdhAHAAcABsAGkAYwBhAHQA
aQBvAG4ALwB4AC0AYgBjAHAAaQBvAAEJLgBiAGkAbgAACS4AYgBtAHAAABNpAG0AYQBnAGUALwBi
AG0AcAAABS4AYwAACS4AYwBhAGIAAAkuAGMAYQBmAAAXYQB1AGQAaQBvAC8AeAAtAGMAYQBmAAEL
LgBjAGEAbAB4AAA9YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBuAGQALgBtAHMALQBvAGYAZgBp
AGMAZQAuAGMAYQBsAHgAAQkuAGMAYQB0AAA7YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBuAGQA
LgBtAHMALQBwAGsAaQAuAHMAZQBjAGMAYQB0AAEHLgBjAGMAAAcuAGMAZAAACy4AYwBkAGQAYQAA
CS4AYwBkAGYAACNhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AYwBkAGYAAQkuAGMAZQByAAA1
YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHgANQAwADkALQBjAGEALQBjAGUAcgB0AAEJLgBj
AGgAbQAADS4AYwBsAGEAcwBzAAAzYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAGoAYQB2AGEA
LQBhAHAAcABsAGUAdAABCS4AYwBsAHAAAClhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AbQBz
AGMAbABpAHAAAQkuAGMAbQB4AAAXaQBtAGEAZwBlAC8AeAAtAGMAbQB4AAEJLgBjAG4AZgAACS4A
YwBvAGQAABtpAG0AYQBnAGUALwBjAGkAcwAtAGMAbwBkAAEPLgBjAG8AbgBmAGkAZwAAES4AYwBv
AG4AdABhAGMAdAAAI3QAZQB4AHQALwB4AC0AbQBzAC0AYwBvAG4AdABhAGMAdAABEy4AYwBvAHYA
ZQByAGEAZwBlAAALLgBjAHAAaQBvAAAlYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAGMAcABp
AG8AAQkuAGMAcABwAAAJLgBjAHIAZAAAMWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQBtAHMA
YwBhAHIAZABmAGkAbABlAAEJLgBjAHIAbAAAKWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHAAawBp
AHgALQBjAHIAbAABCS4AYwByAHQAAAcuAGMAcwAAES4AYwBzAGQAcAByAG8AagAACS4AYwBzAGgA
ACNhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AYwBzAGgAAQ8uAGMAcwBwAHIAbwBqAAAJLgBj
AHMAcwAAEXQAZQB4AHQALwBjAHMAcwAACS4AYwBzAHYAABF0AGUAeAB0AC8AYwBzAHYAAAkuAGMA
dQByAAAJLgBjAHgAeAAACS4AZABhAHQAABcuAGQAYQB0AGEAcwBvAHUAcgBjAGUAAA8uAGQAYgBw
AHIAbwBqAAAJLgBkAGMAcgAALWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQBkAGkAcgBlAGMA
dABvAHIAAQkuAGQAZQBmAAAPLgBkAGUAcABsAG8AeQAACS4AZABlAHIAAAsuAGQAZwBtAGwAAAku
AGQAaQBiAAAJLgBkAGkAZgAAFXYAaQBkAGUAbwAvAHgALQBkAHYAAQkuAGQAaQByAAANLgBkAGkA
cwBjAG8AAAkuAGQAbABsAAAxYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAG0AcwBkAG8AdwBu
AGwAbwBhAGQAARcuAGQAbABsAC4AYwBvAG4AZgBpAGcAAAkuAGQAbABtAAARdABlAHgAdAAvAGQA
bABtAAAJLgBkAG8AYwAAJWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAG0AcwB3AG8AcgBkAAALLgBk
AG8AYwBtAABhYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBuAGQALgBtAHMALQB3AG8AcgBkAC4A
ZABvAGMAdQBtAGUAbgB0AC4AbQBhAGMAcgBvAEUAbgBhAGIAbABlAGQALgAxADIAAQsuAGQAbwBj
AHgAAICPYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBuAGQALgBvAHAAZQBuAHgAbQBsAGYAbwBy
AG0AYQB0AHMALQBvAGYAZgBpAGMAZQBkAG8AYwB1AG0AZQBuAHQALgB3AG8AcgBkAHAAcgBvAGMA
ZQBzAHMAaQBuAGcAbQBsAC4AZABvAGMAdQBtAGUAbgB0AAEJLgBkAG8AdAAACy4AZABvAHQAbQAA
YWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHYAbgBkAC4AbQBzAC0AdwBvAHIAZAAuAHQAZQBtAHAA
bABhAHQAZQAuAG0AYQBjAHIAbwBFAG4AYQBiAGwAZQBkAC4AMQAyAAELLgBkAG8AdAB4AACAj2EA
cABwAGwAaQBjAGEAdABpAG8AbgAvAHYAbgBkAC4AbwBwAGUAbgB4AG0AbABmAG8AcgBtAGEAdABz
AC0AbwBmAGYAaQBjAGUAZABvAGMAdQBtAGUAbgB0AC4AdwBvAHIAZABwAHIAbwBjAGUAcwBzAGkA
bgBnAG0AbAAuAHQAZQBtAHAAbABhAHQAZQABCS4AZABzAHAAAAkuAGQAcwB3AAAJLgBkAHQAZAAA
FS4AZAB0AHMAQwBvAG4AZgBpAGcAAAcuAGQAdgAACS4AZAB2AGkAACNhAHAAcABsAGkAYwBhAHQA
aQBvAG4ALwB4AC0AZAB2AGkAAQkuAGQAdwBmAAAbZAByAGEAdwBpAG4AZwAvAHgALQBkAHcAZgAB
CS4AZAB3AHAAAAkuAGQAeAByAAAJLgBlAG0AbAAAHW0AZQBzAHMAYQBnAGUALwByAGYAYwA4ADIA
MgAACS4AZQBtAHoAAAkuAGUAbwB0AAAJLgBlAHAAcwAACS4AZQB0AGwAAB9hAHAAcABsAGkAYwBh
AHQAaQBvAG4ALwBlAHQAbAAACS4AZQB0AHgAABt0AGUAeAB0AC8AeAAtAHMAZQB0AGUAeAB0AAEJ
LgBlAHYAeQAAI2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAGUAbgB2AG8AeQAACS4AZQB4AGUAABcu
AGUAeABlAC4AYwBvAG4AZgBpAGcAAAkuAGYAZABmAAAnYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8A
dgBuAGQALgBmAGQAZgAACS4AZgBpAGYAAClhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBmAHIAYQBj
AHQAYQBsAHMAABEuAGYAaQBsAHQAZQByAHMAAB9BAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AG0A
bAAACS4AZgBsAGEAAAkuAGYAbAByAAAdeAAtAHcAbwByAGwAZAAvAHgALQB2AHIAbQBsAAEJLgBm
AGwAdgAAF3YAaQBkAGUAbwAvAHgALQBmAGwAdgABEy4AZgBzAHMAYwByAGkAcAB0AAAzYQBwAHAA
bABpAGMAYQB0AGkAbwBuAC8AZgBzAGgAYQByAHAALQBzAGMAcgBpAHAAdAABCS4AZgBzAHgAABku
AGcAZQBuAGUAcgBpAGMAdABlAHMAdAAACS4AZwBpAGYAABNpAG0AYQBnAGUALwBnAGkAZgAADS4A
ZwByAG8AdQBwAAAfdABlAHgAdAAvAHgALQBtAHMALQBnAHIAbwB1AHAAAQkuAGcAcwBtAAAXYQB1
AGQAaQBvAC8AeAAtAGcAcwBtAAELLgBnAHQAYQByAAAlYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8A
eAAtAGcAdABhAHIAAQcuAGcAegAAJWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQBnAHoAaQBw
AAEFLgBoAAAJLgBoAGQAZgAAI2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQBoAGQAZgABCy4A
aABkAG0AbAAAF3QAZQB4AHQALwB4AC0AaABkAG0AbAABCS4AaABoAGMAAC9hAHAAcABsAGkAYwBh
AHQAaQBvAG4ALwB4AC0AbwBsAGUAbwBiAGoAZQBjAHQAAQkuAGgAaABrAAAJLgBoAGgAcAAACS4A
aABsAHAAACVhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB3AGkAbgBoAGwAcAAACS4AaABwAHAAAAku
AGgAcQB4AAAxYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AbQBhAGMALQBiAGkAbgBoAGUAeAA0ADAA
AQkuAGgAdABhAAAfYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AaAB0AGEAAAkuAGgAdABjAAAhdABl
AHgAdAAvAHgALQBjAG8AbQBwAG8AbgBlAG4AdAABCS4AaAB0AG0AABN0AGUAeAB0AC8AaAB0AG0A
bAAACS4AaAB0AHQAACF0AGUAeAB0AC8AdwBlAGIAdgBpAGUAdwBoAHQAbQBsAAAJLgBoAHgAYQAA
CS4AaAB4AGMAAAkuAGgAeABkAAAJLgBoAHgAZQAACS4AaAB4AGYAAAkuAGgAeABoAAAJLgBoAHgA
aQAACS4AaAB4AGsAAAkuAGgAeABxAAAJLgBoAHgAcgAACS4AaAB4AHMAAAkuAGgAeAB0AAAJLgBo
AHgAdgAACS4AaAB4AHcAAAkuAGgAeAB4AAAFLgBpAAAJLgBpAGMAbwAAGWkAbQBhAGcAZQAvAHgA
LQBpAGMAbwBuAAEJLgBpAGMAcwAACS4AaQBkAGwAAAkuAGkAZQBmAAATaQBtAGEAZwBlAC8AaQBl
AGYAAAkuAGkAaQBpAAApYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAGkAcABoAG8AbgBlAAEJ
LgBpAG4AYwAACS4AaQBuAGYAAAkuAGkAbgBsAAAJLgBpAG4AcwAAO2EAcABwAGwAaQBjAGEAdABp
AG8AbgAvAHgALQBpAG4AdABlAHIAbgBlAHQALQBzAGkAZwBuAHUAcAABCS4AaQBwAGEAADFhAHAA
cABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AaQB0AHUAbgBlAHMALQBpAHAAYQABCS4AaQBwAGcAADFh
AHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AaQB0AHUAbgBlAHMALQBpAHAAZwABDy4AaQBwAHAA
cgBvAGoAAAsuAGkAcABzAHcAADNhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AaQB0AHUAbgBl
AHMALQBpAHAAcwB3AAEJLgBpAHEAeQAAG3QAZQB4AHQALwB4AC0AbQBzAC0AaQBxAHkAAQkuAGkA
cwBwAAAJLgBpAHQAZQAAMWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQBpAHQAdQBuAGUAcwAt
AGkAdABlAAELLgBpAHQAbABwAAAzYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAGkAdAB1AG4A
ZQBzAC0AaQB0AGwAcAABCy4AaQB0AG0AcwAAM2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQBp
AHQAdQBuAGUAcwAtAGkAdABtAHMAAQsuAGkAdABwAGMAADNhAHAAcABsAGkAYwBhAHQAaQBvAG4A
LwB4AC0AaQB0AHUAbgBlAHMALQBpAHQAcABjAAEJLgBJAFYARgAAF3YAaQBkAGUAbwAvAHgALQBp
AHYAZgABCS4AagBhAHIAADFhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBqAGEAdgBhAC0AYQByAGMA
aABpAHYAZQABCy4AagBhAHYAYQAACS4AagBjAGsAADFhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBs
AGkAcQB1AGkAZABtAG8AdABpAG8AbgAACS4AagBjAHoAAAsuAGoAZgBpAGYAABdpAG0AYQBnAGUA
LwBwAGoAcABlAGcAAAsuAGoAbgBsAHAAADlhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AagBh
AHYAYQAtAGoAbgBsAHAALQBmAGkAbABlAAEJLgBqAHAAYgAACS4AagBwAGUAABVpAG0AYQBnAGUA
LwBqAHAAZQBnAAALLgBqAHAAZQBnAAAJLgBqAHAAZwAABy4AagBzAAAxYQBwAHAAbABpAGMAYQB0
AGkAbwBuAC8AeAAtAGoAYQB2AGEAcwBjAHIAaQBwAHQAAQsuAGoAcwBvAG4AACFhAHAAcABsAGkA
YwBhAHQAaQBvAG4ALwBqAHMAbwBuAAAJLgBqAHMAeAAAGXQAZQB4AHQALwBqAHMAYwByAGkAcAB0
AAAPLgBqAHMAeABiAGkAbgAADS4AbABhAHQAZQB4AAAnYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8A
eAAtAGwAYQB0AGUAeAABFy4AbABpAGIAcgBhAHIAeQAtAG0AcwABP2EAcABwAGwAaQBjAGEAdABp
AG8AbgAvAHcAaQBuAGQAbwB3AHMALQBsAGkAYgByAGEAcgB5ACsAeABtAGwAAQkuAGwAaQB0AAAv
YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAG0AcwAtAHIAZQBhAGQAZQByAAETLgBsAG8AYQBk
AHQAZQBzAHQAAAkuAGwAcABrAAAJLgBsAHMAZgAAHXYAaQBkAGUAbwAvAHgALQBsAGEALQBhAHMA
ZgABCS4AbABzAHQAAAkuAGwAcwB4AAAJLgBsAHoAaAAACS4AbQAxADMAADNhAHAAcABsAGkAYwBh
AHQAaQBvAG4ALwB4AC0AbQBzAG0AZQBkAGkAYQB2AGkAZQB3AAEJLgBtADEANAAACS4AbQAxAHYA
ABV2AGkAZABlAG8ALwBtAHAAZQBnAAAJLgBtADIAdAAAL3YAaQBkAGUAbwAvAHYAbgBkAC4AZABs
AG4AYQAuAG0AcABlAGcALQB0AHQAcwABCy4AbQAyAHQAcwAACS4AbQAyAHYAAAkuAG0AMwB1AAAf
YQB1AGQAaQBvAC8AeAAtAG0AcABlAGcAdQByAGwAAQsuAG0AMwB1ADgAAAkuAG0ANABhAAATYQB1
AGQAaQBvAC8AbQA0AGEAAAkuAG0ANABiAAATYQB1AGQAaQBvAC8AbQA0AGIAAAkuAG0ANABwAAAT
YQB1AGQAaQBvAC8AbQA0AHAAAAkuAG0ANAByAAAXYQB1AGQAaQBvAC8AeAAtAG0ANAByAAEJLgBt
ADQAdgAAF3YAaQBkAGUAbwAvAHgALQBtADQAdgABCS4AbQBhAGMAACFpAG0AYQBnAGUALwB4AC0A
bQBhAGMAcABhAGkAbgB0AAEJLgBtAGEAawAACS4AbQBhAG4AAC9hAHAAcABsAGkAYwBhAHQAaQBv
AG4ALwB4AC0AdAByAG8AZgBmAC0AbQBhAG4AARMuAG0AYQBuAGkAZgBlAHMAdAAAM2EAcABwAGwA
aQBjAGEAdABpAG8AbgAvAHgALQBtAHMALQBtAGEAbgBpAGYAZQBzAHQAAQkuAG0AYQBwAAAPLgBt
AGEAcwB0AGUAcgAACS4AbQBkAGEAAAkuAG0AZABiAAAtYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8A
eAAtAG0AcwBhAGMAYwBlAHMAcwABCS4AbQBkAGUAAAkuAG0AZABwAAAHLgBtAGUAAC1hAHAAcABs
AGkAYwBhAHQAaQBvAG4ALwB4AC0AdAByAG8AZgBmAC0AbQBlAAEJLgBtAGYAcAAAO2EAcABwAGwA
aQBjAGEAdABpAG8AbgAvAHgALQBzAGgAbwBjAGsAdwBhAHYAZQAtAGYAbABhAHMAaAABCS4AbQBo
AHQAAA0uAG0AaAB0AG0AbAAACS4AbQBpAGQAABNhAHUAZABpAG8ALwBtAGkAZAAACy4AbQBpAGQA
aQAACS4AbQBpAHgAAAcuAG0AawAACS4AbQBtAGYAACVhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4
AC0AcwBtAGEAZgABCS4AbQBuAG8AAAkuAG0AbgB5AAArYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8A
eAAtAG0AcwBtAG8AbgBlAHkAAQkuAG0AbwBkAAAJLgBtAG8AdgAAH3YAaQBkAGUAbwAvAHEAdQBp
AGMAawB0AGkAbQBlAAANLgBtAG8AdgBpAGUAACN2AGkAZABlAG8ALwB4AC0AcwBnAGkALQBtAG8A
dgBpAGUAAQkuAG0AcAAyAAALLgBtAHAAMgB2AAAJLgBtAHAAMwAAFWEAdQBkAGkAbwAvAG0AcABl
AGcAAAkuAG0AcAA0AAATdgBpAGQAZQBvAC8AbQBwADQAAAsuAG0AcAA0AHYAAAkuAG0AcABhAAAJ
LgBtAHAAZQAACy4AbQBwAGUAZwAACS4AbQBwAGYAAD9hAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB2
AG4AZAAuAG0AcwAtAG0AZQBkAGkAYQBwAGEAYwBrAGEAZwBlAAEJLgBtAHAAZwAACS4AbQBwAHAA
ADVhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB2AG4AZAAuAG0AcwAtAHAAcgBvAGoAZQBjAHQAAQsu
AG0AcAB2ADIAAAkuAG0AcQB2AAAHLgBtAHMAAC1hAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0A
dAByAG8AZgBmAC0AbQBzAAEJLgBtAHMAaQAACS4AbQBzAG8AAAkuAG0AdABzAAAJLgBtAHQAeAAA
CS4AbQB2AGIAAAkuAG0AdgBjAAA3YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAG0AaQB2AGEA
LQBjAG8AbQBwAGkAbABlAGQAAQkuAG0AeABwAAAlYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAt
AG0AbQB4AHAAAQcuAG4AYwAAKWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQBuAGUAdABjAGQA
ZgABCS4AbgBzAGMAAAkuAG4AdwBzAAAJLgBvAGMAeAAACS4AbwBkAGEAAB9hAHAAcABsAGkAYwBh
AHQAaQBvAG4ALwBvAGQAYQAACS4AbwBkAGMAABt0AGUAeAB0AC8AeAAtAG0AcwAtAG8AZABjAAEJ
LgBvAGQAaAAACS4AbwBkAGwAAAkuAG8AZABwAABfYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBu
AGQALgBvAGEAcwBpAHMALgBvAHAAZQBuAGQAbwBjAHUAbQBlAG4AdAAuAHAAcgBlAHMAZQBuAHQA
YQB0AGkAbwBuAAAJLgBvAGQAcwAAK2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAG8AbABlAG8AYgBq
AGUAYwB0AAAJLgBvAGQAdAAAT2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAHYAbgBkAC4AbwBhAHMA
aQBzAC4AbwBwAGUAbgBkAG8AYwB1AG0AZQBuAHQALgB0AGUAeAB0AAAJLgBvAG4AZQAAJ2EAcABw
AGwAaQBjAGEAdABpAG8AbgAvAG8AbgBlAG4AbwB0AGUAAAsuAG8AbgBlAGEAAA8uAG8AbgBlAHAA
awBnAAAPLgBvAG4AZQB0AG0AcAAADy4AbwBuAGUAdABvAGMAABEuAG8AbgBlAHQAbwBjADIAABku
AG8AcgBkAGUAcgBlAGQAdABlAHMAdAAACy4AbwBzAGQAeAAAS2EAcABwAGwAaQBjAGEAdABpAG8A
bgAvAG8AcABlAG4AcwBlAGEAcgBjAGgAZABlAHMAYwByAGkAcAB0AGkAbwBuACsAeABtAGwAAAku
AHAAMQAwAAAlYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AcABrAGMAcwAxADAAAAkuAHAAMQAyAAAp
YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHAAawBjAHMAMQAyAAEJLgBwADcAYgAAQWEAcABw
AGwAaQBjAGEAdABpAG8AbgAvAHgALQBwAGsAYwBzADcALQBjAGUAcgB0AGkAZgBpAGMAYQB0AGUA
cwABCS4AcAA3AGMAAC1hAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBwAGsAYwBzADcALQBtAGkAbQBl
AAEJLgBwADcAbQAACS4AcAA3AHIAAD9hAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AcABrAGMA
cwA3AC0AYwBlAHIAdAByAGUAcQByAGUAcwBwAAEJLgBwADcAcwAAN2EAcABwAGwAaQBjAGEAdABp
AG8AbgAvAHAAawBjAHMANwAtAHMAaQBnAG4AYQB0AHUAcgBlAAEJLgBwAGIAbQAAL2kAbQBhAGcA
ZQAvAHgALQBwAG8AcgB0AGEAYgBsAGUALQBiAGkAdABtAGEAcAABDS4AcABjAGEAcwB0AAArYQBw
AHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHAAbwBkAGMAYQBzAHQAAQkuAHAAYwB0AAAVaQBtAGEA
ZwBlAC8AcABpAGMAdAAACS4AcABjAHgAAAkuAHAAYwB6AAAJLgBwAGQAZgAAH2EAcABwAGwAaQBj
AGEAdABpAG8AbgAvAHAAZABmAAAJLgBwAGYAYgAACS4AcABmAG0AAAkuAHAAZgB4AAAJLgBwAGcA
bQAAMWkAbQBhAGcAZQAvAHgALQBwAG8AcgB0AGEAYgBsAGUALQBnAHIAYQB5AG0AYQBwAAEJLgBw
AGkAYwAACy4AcABpAGMAdAAADy4AcABrAGcAZABlAGYAABMuAHAAawBnAHUAbgBkAGUAZgAACS4A
cABrAG8AADVhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB2AG4AZAAuAG0AcwAtAHAAawBpAC4AcABr
AG8AAQkuAHAAbABzAAAXYQB1AGQAaQBvAC8AcwBjAHAAbABzAAAJLgBwAG0AYQAAK2EAcABwAGwA
aQBjAGEAdABpAG8AbgAvAHgALQBwAGUAcgBmAG0AbwBuAAEJLgBwAG0AYwAACS4AcABtAGwAAAku
AHAAbQByAAAJLgBwAG0AdwAACS4AcABuAGcAABNpAG0AYQBnAGUALwBwAG4AZwAACS4AcABuAG0A
AC9pAG0AYQBnAGUALwB4AC0AcABvAHIAdABhAGIAbABlAC0AYQBuAHkAbQBhAHAAAQkuAHAAbgB0
AAALLgBwAG4AdABnAAAJLgBwAG4AegAACS4AcABvAHQAADthAHAAcABsAGkAYwBhAHQAaQBvAG4A
LwB2AG4AZAAuAG0AcwAtAHAAbwB3AGUAcgBwAG8AaQBuAHQAAQsuAHAAbwB0AG0AAG1hAHAAcABs
AGkAYwBhAHQAaQBvAG4ALwB2AG4AZAAuAG0AcwAtAHAAbwB3AGUAcgBwAG8AaQBuAHQALgB0AGUA
bQBwAGwAYQB0AGUALgBtAGEAYwByAG8ARQBuAGEAYgBsAGUAZAAuADEAMgABCy4AcABvAHQAeAAA
gIthAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB2AG4AZAAuAG8AcABlAG4AeABtAGwAZgBvAHIAbQBh
AHQAcwAtAG8AZgBmAGkAYwBlAGQAbwBjAHUAbQBlAG4AdAAuAHAAcgBlAHMAZQBuAHQAYQB0AGkA
bwBuAG0AbAAuAHQAZQBtAHAAbABhAHQAZQABCS4AcABwAGEAAAsuAHAAcABhAG0AAGdhAHAAcABs
AGkAYwBhAHQAaQBvAG4ALwB2AG4AZAAuAG0AcwAtAHAAbwB3AGUAcgBwAG8AaQBuAHQALgBhAGQA
ZABpAG4ALgBtAGEAYwByAG8ARQBuAGEAYgBsAGUAZAAuADEAMgABCS4AcABwAG0AAC9pAG0AYQBn
AGUALwB4AC0AcABvAHIAdABhAGIAbABlAC0AcABpAHgAbQBhAHAAAQkuAHAAcABzAAALLgBwAHAA
cwBtAABvYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBuAGQALgBtAHMALQBwAG8AdwBlAHIAcABv
AGkAbgB0AC4AcwBsAGkAZABlAHMAaABvAHcALgBtAGEAYwByAG8ARQBuAGEAYgBsAGUAZAAuADEA
MgABCy4AcABwAHMAeAAAgI1hAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB2AG4AZAAuAG8AcABlAG4A
eABtAGwAZgBvAHIAbQBhAHQAcwAtAG8AZgBmAGkAYwBlAGQAbwBjAHUAbQBlAG4AdAAuAHAAcgBl
AHMAZQBuAHQAYQB0AGkAbwBuAG0AbAAuAHMAbABpAGQAZQBzAGgAbwB3AAEJLgBwAHAAdAAACy4A
cABwAHQAbQAAdWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHYAbgBkAC4AbQBzAC0AcABvAHcAZQBy
AHAAbwBpAG4AdAAuAHAAcgBlAHMAZQBuAHQAYQB0AGkAbwBuAC4AbQBhAGMAcgBvAEUAbgBhAGIA
bABlAGQALgAxADIAAQsuAHAAcAB0AHgAAICTYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBuAGQA
LgBvAHAAZQBuAHgAbQBsAGYAbwByAG0AYQB0AHMALQBvAGYAZgBpAGMAZQBkAG8AYwB1AG0AZQBu
AHQALgBwAHIAZQBzAGUAbgB0AGEAdABpAG8AbgBtAGwALgBwAHIAZQBzAGUAbgB0AGEAdABpAG8A
bgABCS4AcAByAGYAAC1hAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBwAGkAYwBzAC0AcgB1AGwAZQBz
AAEJLgBwAHIAbQAACS4AcAByAHgAAAcuAHAAcwAACy4AcABzAGMAMQAALWEAcABwAGwAaQBjAGEA
dABpAG8AbgAvAFAAbwB3AGUAcgBTAGgAZQBsAGwAAAkuAHAAcwBkAAANLgBwAHMAZQBzAHMAAAku
AHAAcwBtAAAJLgBwAHMAcAAACS4AcAB1AGIAADNhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0A
bQBzAHAAdQBiAGwAaQBzAGgAZQByAAEJLgBwAHcAegAACS4AcQBoAHQAACt0AGUAeAB0AC8AeAAt
AGgAdABtAGwALQBpAG4AcwBlAHIAdABpAG8AbgABCy4AcQBoAHQAbQAABy4AcQB0AAAJLgBxAHQA
aQAAI2kAbQBhAGcAZQAvAHgALQBxAHUAaQBjAGsAdABpAG0AZQABCy4AcQB0AGkAZgAACS4AcQB0
AGwAADthAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AcQB1AGkAYwBrAHQAaQBtAGUAcABsAGEA
eQBlAHIAAQkuAHEAeABkAAAHLgByAGEAAClhAHUAZABpAG8ALwB4AC0AcABuAC0AcgBlAGEAbABh
AHUAZABpAG8AAQkuAHIAYQBtAAAJLgByAGEAcgAACS4AcgBhAHMAACVpAG0AYQBnAGUALwB4AC0A
YwBtAHUALQByAGEAcwB0AGUAcgABCS4AcgBhAHQAAClhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBy
AGEAdAAtAGYAaQBsAGUAAQcuAHIAYwAACS4AcgBjADIAAAkuAHIAYwB0AAALLgByAGQAbABjAAAL
LgByAGUAcwB4AAAHLgByAGYAAC1pAG0AYQBnAGUALwB2AG4AZAAuAHIAbgAtAHIAZQBhAGwAZgBs
AGEAcwBoAAEJLgByAGcAYgAAF2kAbQBhAGcAZQAvAHgALQByAGcAYgABCS4AcgBnAHMAAAcuAHIA
bQAAOWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHYAbgBkAC4AcgBuAC0AcgBlAGEAbABtAGUAZABp
AGEAAQkuAHIAbQBpAAAJLgByAG0AcAAAR2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAHYAbgBkAC4A
cgBuAC0AcgBuAF8AbQB1AHMAaQBjAF8AcABhAGMAawBhAGcAZQABCy4AcgBvAGYAZgAAJ2EAcABw
AGwAaQBjAGEAdABpAG8AbgAvAHgALQB0AHIAbwBmAGYAAQkuAHIAcABtAAA3YQB1AGQAaQBvAC8A
eAAtAHAAbgAtAHIAZQBhAGwAYQB1AGQAaQBvAC0AcABsAHUAZwBpAG4AAQkuAHIAcQB5AAAbdABl
AHgAdAAvAHgALQBtAHMALQByAHEAeQABCS4AcgB0AGYAAB9hAHAAcABsAGkAYwBhAHQAaQBvAG4A
LwByAHQAZgAACS4AcgB0AHgAABt0AGUAeAB0AC8AcgBpAGMAaAB0AGUAeAB0AAARLgByAHUAbABl
AHMAZQB0AAAFLgBzAAAXLgBzAGEAZgBhAHIAaQBlAHgAdAB6AAA/YQBwAHAAbABpAGMAYQB0AGkA
bwBuAC8AeAAtAHMAYQBmAGEAcgBpAC0AcwBhAGYAYQByAGkAZQB4AHQAegABCS4AcwBjAGQAADFh
AHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AbQBzAHMAYwBoAGUAZAB1AGwAZQABCS4AcwBjAHQA
AB10AGUAeAB0AC8AcwBjAHIAaQBwAHQAbABlAHQAAAkuAHMAZAAyAAAXYQB1AGQAaQBvAC8AeAAt
AHMAZAAyAAEJLgBzAGQAcAAAH2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAHMAZABwAAAJLgBzAGUA
YQAAJy4AcwBlAGEAcgBjAGgAQwBvAG4AbgBlAGMAdABvAHIALQBtAHMAAVFhAHAAcABsAGkAYwBh
AHQAaQBvAG4ALwB3AGkAbgBkAG8AdwBzAC0AcwBlAGEAcgBjAGgALQBjAG8AbgBuAGUAYwB0AG8A
cgArAHgAbQBsAAEPLgBzAGUAdABwAGEAeQAARWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHMAZQB0
AC0AcABhAHkAbQBlAG4AdAAtAGkAbgBpAHQAaQBhAHQAaQBvAG4AAQ8uAHMAZQB0AHIAZQBnAABP
YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AcwBlAHQALQByAGUAZwBpAHMAdAByAGEAdABpAG8AbgAt
AGkAbgBpAHQAaQBhAHQAaQBvAG4AARMuAHMAZQB0AHQAaQBuAGcAcwAADS4AcwBnAGkAbQBiAAAn
YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHMAZwBpAG0AYgABCy4AcwBnAG0AbAAAE3QAZQB4
AHQALwBzAGcAbQBsAAAHLgBzAGgAACFhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AcwBoAAEL
LgBzAGgAYQByAAAlYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHMAaABhAHIAAQ0uAHMAaAB0
AG0AbAAACS4AcwBpAHQAACthAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AcwB0AHUAZgBmAGkA
dAABES4AcwBpAHQAZQBtAGEAcAAACy4AcwBrAGkAbgAACy4AcwBsAGQAbQAAZ2EAcABwAGwAaQBj
AGEAdABpAG8AbgAvAHYAbgBkAC4AbQBzAC0AcABvAHcAZQByAHAAbwBpAG4AdAAuAHMAbABpAGQA
ZQAuAG0AYQBjAHIAbwBFAG4AYQBiAGwAZQBkAC4AMQAyAAELLgBzAGwAZAB4AACAhWEAcABwAGwA
aQBjAGEAdABpAG8AbgAvAHYAbgBkAC4AbwBwAGUAbgB4AG0AbABmAG8AcgBtAGEAdABzAC0AbwBm
AGYAaQBjAGUAZABvAGMAdQBtAGUAbgB0AC4AcAByAGUAcwBlAG4AdABhAHQAaQBvAG4AbQBsAC4A
cwBsAGkAZABlAAEJLgBzAGwAawAAMWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHYAbgBkAC4AbQBz
AC0AZQB4AGMAZQBsAAEJLgBzAGwAbgAAFS4AcwBsAHUAcABrAGcALQBtAHMAATFhAHAAcABsAGkA
YwBhAHQAaQBvAG4ALwB4AC0AbQBzAC0AbABpAGMAZQBuAHMAZQABCS4AcwBtAGQAABdhAHUAZABp
AG8ALwB4AC0AcwBtAGQAAQkuAHMAbQBpAAAJLgBzAG0AeAAACS4AcwBtAHoAAAkuAHMAbgBkAAAR
LgBzAG4AaQBwAHAAZQB0AAAJLgBzAG4AcAAACS4AcwBvAGwAAAkuAHMAbwByAAAJLgBzAHAAYwAA
CS4AcwBwAGwAADFhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBmAHUAdAB1AHIAZQBzAHAAbABhAHMA
aAAACS4AcwByAGMAADNhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AdwBhAGkAcwAtAHMAbwB1
AHIAYwBlAAEJLgBzAHIAZgAALy4AUwBTAEkAUwBEAGUAcABsAG8AeQBtAGUAbgB0AE0AYQBuAGkA
ZgBlAHMAdAAACS4AcwBzAG0AADVhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBzAHQAcgBlAGEAbQBp
AG4AZwBtAGUAZABpAGEAAAkuAHMAcwB0AABBYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBuAGQA
LgBtAHMALQBwAGsAaQAuAGMAZQByAHQAcwB0AG8AcgBlAAEJLgBzAHQAbAAANWEAcABwAGwAaQBj
AGEAdABpAG8AbgAvAHYAbgBkAC4AbQBzAC0AcABrAGkALgBzAHQAbAABES4AcwB2ADQAYwBwAGkA
bwAAK2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQBzAHYANABjAHAAaQBvAAEPLgBzAHYANABj
AHIAYwAAKWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQBzAHYANABjAHIAYwABCS4AcwB2AGMA
AAkuAHMAdwBmAAAFLgB0AAAJLgB0AGEAcgAAI2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQB0
AGEAcgABCS4AdABjAGwAACNhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AdABjAGwAAR0uAHQA
ZQBzAHQAcgB1AG4AYwBvAG4AZgBpAGcAABsuAHQAZQBzAHQAcwBlAHQAdABpAG4AZwBzAAAJLgB0
AGUAeAAAI2EAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQB0AGUAeAABCy4AdABlAHgAaQAAK2EA
cABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQB0AGUAeABpAG4AZgBvAAERLgB0AGUAeABpAG4AZgBv
AAAJLgB0AGcAegAAMWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQBjAG8AbQBwAHIAZQBzAHMA
ZQBkAAELLgB0AGgAbQB4AAA9YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBuAGQALgBtAHMALQBv
AGYAZgBpAGMAZQB0AGgAZQBtAGUAAQkuAHQAaABuAAAJLgB0AGkAZgAAFWkAbQBhAGcAZQAvAHQA
aQBmAGYAAAsuAHQAaQBmAGYAAAkuAHQAbABoAAAJLgB0AGwAaQAACS4AdABvAGMAAAcuAHQAcgAA
CS4AdAByAG0AADFhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AbQBzAHQAZQByAG0AaQBuAGEA
bAABCS4AdAByAHgAAAcuAHQAcwAACS4AdABzAHYAADN0AGUAeAB0AC8AdABhAGIALQBzAGUAcABh
AHIAYQB0AGUAZAAtAHYAYQBsAHUAZQBzAAEJLgB0AHQAZgAACS4AdAB0AHMAAAkuAHQAeAB0AAAJ
LgB1ADMAMgAACS4AdQBsAHMAABN0AGUAeAB0AC8AaQB1AGwAcwAACy4AdQBzAGUAcgAADS4AdQBz
AHQAYQByAAAnYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHUAcwB0AGEAcgABBy4AdgBiAAAR
LgB2AGIAZABwAHIAbwBqAAAJLgB2AGIAawAADy4AdgBiAHAAcgBvAGoAAAkuAHYAYgBzAAAbdABl
AHgAdAAvAHYAYgBzAGMAcgBpAHAAdAAACS4AdgBjAGYAABl0AGUAeAB0AC8AeAAtAHYAYwBhAHIA
ZAABDy4AdgBjAHAAcgBvAGoAAAkuAHYAYwBzAAARLgB2AGMAeABwAHIAbwBqAAARLgB2AGQAZABw
AHIAbwBqAAAJLgB2AGQAcAAADy4AdgBkAHAAcgBvAGoAAAkuAHYAZAB4AAA/YQBwAHAAbABpAGMA
YQB0AGkAbwBuAC8AdgBuAGQALgBtAHMALQB2AGkAcwBpAG8ALgB2AGkAZQB3AGUAcgABCS4AdgBt
AGwAABUuAHYAcwBjAG8AbgB0AGUAbgB0AAALLgB2AHMAYwB0AAAJLgB2AHMAZAAAK2EAcABwAGwA
aQBjAGEAdABpAG8AbgAvAHYAbgBkAC4AdgBpAHMAaQBvAAAJLgB2AHMAaQAAJWEAcABwAGwAaQBj
AGEAdABpAG8AbgAvAG0AcwAtAHYAcwBpAAELLgB2AHMAaQB4AAAhYQBwAHAAbABpAGMAYQB0AGkA
bwBuAC8AdgBzAGkAeAAAGy4AdgBzAGkAeABsAGEAbgBnAHAAYQBjAGsAABsuAHYAcwBpAHgAbQBh
AG4AaQBmAGUAcwB0AAANLgB2AHMAbQBkAGkAAA8uAHYAcwBwAHMAYwBjAAAJLgB2AHMAcwAADS4A
dgBzAHMAYwBjAAAXLgB2AHMAcwBlAHQAdABpAG4AZwBzAAAPLgB2AHMAcwBzAGMAYwAACS4AdgBz
AHQAABcuAHYAcwB0AGUAbQBwAGwAYQB0AGUAAAsuAHYAcwB0AG8AACthAHAAcABsAGkAYwBhAHQA
aQBvAG4ALwB4AC0AbQBzAC0AdgBzAHQAbwABCS4AdgBzAHcAAAkuAHYAcwB4AAAJLgB2AHQAeAAA
CS4AdwBhAHYAABNhAHUAZABpAG8ALwB3AGEAdgAACy4AdwBhAHYAZQAACS4AdwBhAHgAAB1hAHUA
ZABpAG8ALwB4AC0AbQBzAC0AdwBhAHgAAQkuAHcAYgBrAAALLgB3AGIAbQBwAAAlaQBtAGEAZwBl
AC8AdgBuAGQALgB3AGEAcAAuAHcAYgBtAHAAAAkuAHcAYwBtAAAxYQBwAHAAbABpAGMAYQB0AGkA
bwBuAC8AdgBuAGQALgBtAHMALQB3AG8AcgBrAHMAAQkuAHcAZABiAAAJLgB3AGQAcAAAJWkAbQBh
AGcAZQAvAHYAbgBkAC4AbQBzAC0AcABoAG8AdABvAAEXLgB3AGUAYgBhAHIAYwBoAGkAdgBlAAA/
YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHMAYQBmAGEAcgBpAC0AdwBlAGIAYQByAGMAaABp
AHYAZQABES4AdwBlAGIAdABlAHMAdAAACS4AdwBpAHEAAAkuAHcAaQB6AAAJLgB3AGsAcwAACy4A
VwBMAE0AUAAAMWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHcAbABtAG8AdgBpAGUAbQBhAGsAZQBy
AAAZLgB3AGwAcABnAGkAbgBzAHQAYQBsAGwAADNhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0A
dwBsAHAAZwAtAGQAZQB0AGUAYwB0AAEbLgB3AGwAcABnAGkAbgBzAHQAYQBsAGwAMwAANWEAcABw
AGwAaQBjAGEAdABpAG8AbgAvAHgALQB3AGwAcABnADMALQBkAGUAdABlAGMAdAABBy4AdwBtAAAb
dgBpAGQAZQBvAC8AeAAtAG0AcwAtAHcAbQABCS4AdwBtAGEAAB1hAHUAZABpAG8ALwB4AC0AbQBz
AC0AdwBtAGEAAQkuAHcAbQBkAAApYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAG0AcwAtAHcA
bQBkAAEJLgB3AG0AZgAAMWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQBtAHMAbQBlAHQAYQBm
AGkAbABlAAEJLgB3AG0AbAAAIXQAZQB4AHQALwB2AG4AZAAuAHcAYQBwAC4AdwBtAGwAAAsuAHcA
bQBsAGMAADFhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB2AG4AZAAuAHcAYQBwAC4AdwBtAGwAYwAA
Cy4AdwBtAGwAcwAALXQAZQB4AHQALwB2AG4AZAAuAHcAYQBwAC4AdwBtAGwAcwBjAHIAaQBwAHQA
AA0uAHcAbQBsAHMAYwAAPWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHYAbgBkAC4AdwBhAHAALgB3
AG0AbABzAGMAcgBpAHAAdABjAAAJLgB3AG0AcAAAHXYAaQBkAGUAbwAvAHgALQBtAHMALQB3AG0A
cAABCS4AdwBtAHYAAB12AGkAZABlAG8ALwB4AC0AbQBzAC0AdwBtAHYAAQkuAHcAbQB4AAAddgBp
AGQAZQBvAC8AeAAtAG0AcwAtAHcAbQB4AAEJLgB3AG0AegAAKWEAcABwAGwAaQBjAGEAdABpAG8A
bgAvAHgALQBtAHMALQB3AG0AegABCS4AdwBwAGwAAC1hAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB2
AG4AZAAuAG0AcwAtAHcAcABsAAEJLgB3AHAAcwAACS4AdwByAGkAACthAHAAcABsAGkAYwBhAHQA
aQBvAG4ALwB4AC0AbQBzAHcAcgBpAHQAZQABCS4AdwByAGwAAAkuAHcAcgB6AAAJLgB3AHMAYwAA
Cy4AdwBzAGQAbAAACS4AdwB2AHgAAB12AGkAZABlAG8ALwB4AC0AbQBzAC0AdwB2AHgAAQUuAHgA
ACdhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBkAGkAcgBlAGMAdAB4AAAJLgB4AGEAZgAACy4AeABh
AG0AbAAAKWEAcABwAGwAaQBjAGEAdABpAG8AbgAvAHgAYQBtAGwAKwB4AG0AbAAACS4AeABhAHAA
ADthAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AcwBpAGwAdgBlAHIAbABpAGcAaAB0AC0AYQBw
AHAAAQsuAHgAYgBhAHAAACthAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AbQBzAC0AeABiAGEA
cAABCS4AeABiAG0AAB9pAG0AYQBnAGUALwB4AC0AeABiAGkAdABtAGEAcAABCS4AeABkAHIAAAku
AHgAaAB0AAArYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeABoAHQAbQBsACsAeABtAGwAAA0uAHgA
aAB0AG0AbAAACS4AeABsAGEAAAsuAHgAbABhAG0AAF1hAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB2
AG4AZAAuAG0AcwAtAGUAeABjAGUAbAAuAGEAZABkAGkAbgAuAG0AYQBjAHIAbwBFAG4AYQBiAGwA
ZQBkAC4AMQAyAAEJLgB4AGwAYwAACS4AeABsAGQAAAkuAHgAbABrAAAJLgB4AGwAbAAACS4AeABs
AG0AAAkuAHgAbABzAAALLgB4AGwAcwBiAABrYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBuAGQA
LgBtAHMALQBlAHgAYwBlAGwALgBzAGgAZQBlAHQALgBiAGkAbgBhAHIAeQAuAG0AYQBjAHIAbwBF
AG4AYQBiAGwAZQBkAC4AMQAyAAELLgB4AGwAcwBtAABdYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8A
dgBuAGQALgBtAHMALQBlAHgAYwBlAGwALgBzAGgAZQBlAHQALgBtAGEAYwByAG8ARQBuAGEAYgBs
AGUAZAAuADEAMgABCy4AeABsAHMAeAAAgINhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB2AG4AZAAu
AG8AcABlAG4AeABtAGwAZgBvAHIAbQBhAHQAcwAtAG8AZgBmAGkAYwBlAGQAbwBjAHUAbQBlAG4A
dAAuAHMAcAByAGUAYQBkAHMAaABlAGUAdABtAGwALgBzAGgAZQBlAHQAAQkuAHgAbAB0AAALLgB4
AGwAdABtAABjYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBuAGQALgBtAHMALQBlAHgAYwBlAGwA
LgB0AGUAbQBwAGwAYQB0AGUALgBtAGEAYwByAG8ARQBuAGEAYgBsAGUAZAAuADEAMgABCy4AeABs
AHQAeAAAgIlhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB2AG4AZAAuAG8AcABlAG4AeABtAGwAZgBv
AHIAbQBhAHQAcwAtAG8AZgBmAGkAYwBlAGQAbwBjAHUAbQBlAG4AdAAuAHMAcAByAGUAYQBkAHMA
aABlAGUAdABtAGwALgB0AGUAbQBwAGwAYQB0AGUAAQkuAHgAbAB3AAAJLgB4AG0AbAAACy4AeABt
AHQAYQAACS4AeABvAGYAAAsuAFgATwBNAEwAAAkuAHgAcABtAAAfaQBtAGEAZwBlAC8AeAAtAHgA
cABpAHgAbQBhAHAAAQkuAHgAcABzAAA9YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AdgBuAGQALgBt
AHMALQB4AHAAcwBkAG8AYwB1AG0AZQBuAHQAAQ8uAHgAcgBtAC0AbQBzAAEJLgB4AHMAYwAACS4A
eABzAGQAAAkuAHgAcwBmAAAJLgB4AHMAbAAACy4AeABzAGwAdAAACS4AeABzAG4AAAkuAHgAcwBz
AAAJLgB4AHQAcAAACS4AeAB3AGQAACdpAG0AYQBnAGUALwB4AC0AeAB3AGkAbgBkAG8AdwBkAHUA
bQBwAAEFLgB6AAAtYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAGMAbwBtAHAAcgBlAHMAcwAB
CS4AegBpAHAAADlhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AegBpAHAALQBjAG8AbQBwAHIA
ZQBzAHMAZQBkAAGAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQA
IABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBh
AGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kA
bgBwAHUAdAAgADAAAAljAGkAdAB5AAAPYwBvAHUAbgB0AHIAeQAADWMAbwB1AG4AdAB5AAATZgBp
AGwAZQBfAHAAYQB0AGgAABNmAGkAbABlAF8AdAB5AHAAZQAAD2kAcwBfAHAAYQBnAGUAAHFTAEMA
XwBmADgAMgAzADAAZAAwADIAYgAwADIAYwA0ADIANQA4ADgANQBhADYANAA5ADkAMwBhADcANAA0
AGQANQBkADMALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAJd7Rhwg
CuFEs+g8y8eItkMABCABAQgDIAABBSABARERBCABAQ4FIAEBEV0MBwgODg4ODg4dDh0OAwcBDgQg
AQIOBQACDg4OBhUSOQIODgggAgITABATAQgHBg4ODg4ODgUAAgIODgQgAQgOAyAADgMgAAgFIAIO
Dg4EAAASdQYVEnkCDg4JIAEBFRJ9ARMAByACARMAEwEJIAMBEkEdCBJFAwYSQQMGHQgEIAEOCAUg
AgEIHAQgAQIIAyAAAgcgAgIOEYCFBSABHQgIBSAAEoCJBiABEoCNHAUAABKAkQYgARwSgJUEIAEB
HAgAARKAmRGAnQUgABKAoQcgAgEOEoChCLd6XFYZNOCJCImEXc2AgMyRBwYVEjkCDg4DBhIUAwYS
GAMGEkkDBhJVAwYSWQMGEiAFIAEBEgwEAAEODgYgAR0OHQ4DAAABBCABAQIJIAQBCA4SQRJFBSAB
ARJJBAAAElUEAAASWQUAAQESWQQAABIgAygADgMoAAIECAASVQQIABJZBAgAEiAIAQAIAAAAAAAe
AQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDX2Y4MjMwZDAyYjAy
YzQyNTg4NWE2NDk5M2E3NDRkNWQzAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTcAAEcBABou
TkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBG
cmFtZXdvcmsgNAQBAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3Vy
Y2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVi
bGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNv
dXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAHK4AAAAAAAAAAAAANq4AAAAgAAAAAAAAAAAA
AAAAAAAAAAAAAAAAACiuAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8l
ACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
wAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAHuRpxgAAAEAe5GnGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBD
AF8AZgA4ADIAMwAwAGQAMAAyAGIAMAAyAGMANAAyADUAOAA4ADUAYQA2ADQAOQA5ADMAYQA3ADQA
NABkADUAZAAzAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMwAx
ADEALgAzADcAMgA0ADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8A
ZgA4ADIAMwAwAGQAMAAyAGIAMAAyAGMANAAyADUAOAA4ADUAYQA2ADQAOQA5ADMAYQA3ADQANABk
ADUAZAAzAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADcAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABl
AG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUA
AABTAEMAXwBmADgAMgAzADAAZAAwADIAYgAwADIAYwA0ADIANQA4ADgANQBhADYANAA5ADkAMwBh
ADcANAA0AGQANQBkADMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBDAF8AZgA4ADIAMwAwAGQAMAAyAGIAMAAyAGMANAAyADUAOAA4ADUAYQA2ADQAOQA5ADMAYQA3
ADQANABkADUAZAAzAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA2ADMAMQAxAC4AMwA3ADIANAAzAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA2ADMAMQAxAC4AMwA3ADIANAAzAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAADAAAAEg+AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_f8230d02b02c425885a64993a744d5d3</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::city,User::country,User::county,User::file_path,User::file_type,User::is_page</property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">4e769c5ee6aefc6ec5d5e47d87b50eef</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\short log file load\file-conditionals.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file-conditionals.Inputs[Input 0].Columns[request_uri]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="request_uri"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[request_uri]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file-conditionals.Inputs[Input 0].Columns[filename]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="600"
                          cachedName="filename"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[filename]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file-conditionals.Inputs[Input 0].Columns[file_extension]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="600"
                          cachedName="file_extension"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[file_extension]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file-conditionals.Inputs[Input 0].Columns[type_of_file]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="600"
                          cachedName="type_of_file"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[type_of_file]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file-conditionals.Inputs[Input 0].Columns[is_page]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="600"
                          cachedName="is_page"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[is_page]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\file-conditionals.Inputs[Input 0].Columns[path_to_file]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="600"
                          cachedName="path_to_file"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Output].Columns[path_to_file]"
                          usageType="readWrite" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\file-conditionals.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\file-conditionals.Inputs[Input 0]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\short log file load\host dimension"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="host dimension"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[host dimension]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Log File catalog\short log file load\host dimension.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      connectionManagerRefId="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\short log file load\host dimension.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\host dimension.Inputs[OLE DB Destination Input].Columns[server_ip]"
                          cachedDataType="wstr"
                          cachedLength="12"
                          cachedName="server_ip"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\host dimension.Inputs[OLE DB Destination Input].ExternalColumns[server_ip]"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\host dimenstion transformations.Outputs[Derived Column Output].Columns[server_ip]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\host dimension.Inputs[OLE DB Destination Input].Columns[number_connection_attempts]"
                          cachedDataType="i4"
                          cachedName="number_connection_attempts"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\host dimension.Inputs[OLE DB Destination Input].ExternalColumns[number_connection_attempts]"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\host dimenstion transformations.Outputs[Derived Column Output].Columns[number_connection_attempts]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\host dimension.Inputs[OLE DB Destination Input].ExternalColumns[server_ip]"
                          dataType="wstr"
                          length="12"
                          name="server_ip" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\host dimension.Inputs[OLE DB Destination Input].ExternalColumns[number_connection_attempts]"
                          dataType="i4"
                          name="number_connection_attempts" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\host dimension.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\host dimension.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\host dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\host dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\host dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\host dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\short log file load\host dimenstion transformations"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="host dimenstion transformations"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\short log file load\host dimenstion transformations.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\host dimenstion transformations.Inputs[Derived Column Input].Columns[host_ip]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="host_ip"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[host_ip]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\host dimenstion transformations.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\host dimenstion transformations.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\host dimenstion transformations.Outputs[Derived Column Output].Columns[server_ip]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="12"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\host dimenstion transformations.Outputs[Derived Column Output].Columns[server_ip]"
                          name="server_ip"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[host_ip]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">host_ip</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\host dimenstion transformations.Outputs[Derived Column Output].Columns[number_connection_attempts]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\host dimenstion transformations.Outputs[Derived Column Output].Columns[number_connection_attempts]"
                          name="number_connection_attempts"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">0</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">0</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\host dimenstion transformations.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\host dimenstion transformations.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\host dimenstion transformations.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\host dimenstion transformations.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\host dimenstion transformations.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\host dimenstion transformations.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1)"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="2057"
                  name="Input ETL (file type 1)"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">true</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[short_log_file FFCM]"
                      connectionManagerRefId="Package.ConnectionManagers[short_log_file FFCM]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[date]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[date]"
                          name="date"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[time]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[time]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[time]"
                          name="time"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[host_ip]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[host_ip]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[host_ip]"
                          name="host_ip"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[method]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[method]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[method]"
                          name="method"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[request_uri]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[request_uri]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[request_uri]"
                          name="request_uri"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[port]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[port]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[port]"
                          name="port"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[user_ip]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[user_ip]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[user_ip]"
                          name="user_ip"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[user_browser]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="IgnoreFailure"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[user_browser]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[user_browser]"
                          name="user_browser"
                          truncationRowDisposition="IgnoreFailure">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[response_code]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[response_code]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[response_code]"
                          name="response_code"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[substatus]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[substatus]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[substatus]"
                          name="substatus"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[win32status]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[win32status]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[win32status]"
                          name="win32status"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[time_taken]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[time_taken]"
                          length="500"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[time_taken]"
                          name="time_taken"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[date]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[time]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="time" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[host_ip]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="host_ip" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[method]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="method" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[request_uri]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="request_uri" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[junk]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="junk" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[port]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="port" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[junk1]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="junk1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[user_ip]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="user_ip" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[user_browser]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="user_browser" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[response_code]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="response_code" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[substatus]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="substatus" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[win32status]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="win32status" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].ExternalColumns[time_taken]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="time_taken" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\short log file load\Multicast"
                  componentClassID="Microsoft.Multicast"
                  contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                  name="Multicast">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\short log file load\Multicast.Inputs[Multicast Input 1]"
                      name="Multicast Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\Multicast.Outputs[Multicast Output 1]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 1"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\Multicast.Outputs[Multicast Output 2]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 2"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\Multicast.Outputs[Multicast Output 3]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 3"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\Multicast.Outputs[Multicast Output 6]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 6"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\Multicast.Outputs[Multicast Output 5]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 5"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\Multicast.Outputs[Multicast Output 4]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 4"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\short log file load\request dimension"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="request dimension"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[request dimension]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Log File catalog\short log file load\request dimension.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      connectionManagerRefId="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\short log file load\request dimension.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\request dimension.Inputs[OLE DB Destination Input].Columns[response_code]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="response_code"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\request dimension.Inputs[OLE DB Destination Input].ExternalColumns[response_code]"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Outputs[Derived Column Output].Columns[response_code]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\request dimension.Inputs[OLE DB Destination Input].Columns[time_taken]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="time_taken"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\request dimension.Inputs[OLE DB Destination Input].ExternalColumns[time_taken]"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Outputs[Derived Column Output].Columns[time_taken]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\request dimension.Inputs[OLE DB Destination Input].Columns[type]"
                          cachedDataType="wstr"
                          cachedLength="7"
                          cachedName="type"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\request dimension.Inputs[OLE DB Destination Input].ExternalColumns[type]"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Outputs[Derived Column Output].Columns[type]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\request dimension.Inputs[OLE DB Destination Input].Columns[request_uri]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="request_uri"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\request dimension.Inputs[OLE DB Destination Input].ExternalColumns[request_uri]"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output].Columns[request_uri]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\request dimension.Inputs[OLE DB Destination Input].ExternalColumns[request_uri]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="request_uri" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\request dimension.Inputs[OLE DB Destination Input].ExternalColumns[response_code]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="response_code" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\request dimension.Inputs[OLE DB Destination Input].ExternalColumns[time_taken]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="time_taken" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\request dimension.Inputs[OLE DB Destination Input].ExternalColumns[type]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="type" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\request dimension.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                          dataType="i4"
                          name="id" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\request dimension.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\request dimension.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\request dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\request dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\request dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\request dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\short log file load\time dimension"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="time dimension"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[time dimension]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Log File catalog\short log file load\time dimension.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      connectionManagerRefId="Package.ConnectionManagers[WORK-PC\VIGNATJEVS_SQL.db_business_intelligence]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\short log file load\time dimension.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\time dimension.Inputs[OLE DB Destination Input].Columns[hour]"
                          cachedDataType="i4"
                          cachedName="hour"
                          externalMetadataColumnId="Package\Foreach Loop Log File catalog\short log file load\time dimension.Inputs[OLE DB Destination Input].ExternalColumns[hour]"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[hour]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\time dimension.Inputs[OLE DB Destination Input].ExternalColumns[hour]"
                          dataType="i4"
                          name="hour" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\time dimension.Inputs[OLE DB Destination Input].ExternalColumns[minute]"
                          dataType="i4"
                          name="minute" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\time dimension.Inputs[OLE DB Destination Input].ExternalColumns[second]"
                          dataType="i4"
                          name="second" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\time dimension.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\time dimension.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\time dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\time dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\time dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\time dimension.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Time dimension transformations"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Inputs[Derived Column Input].Columns[date_formatted]"
                          cachedDataType="dbDate"
                          cachedName="date_formatted"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]" />
                        <inputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Inputs[Derived Column Input].Columns[time_formatted]"
                          cachedDataType="dbTime"
                          cachedName="time_formatted"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[time_formatted]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[month]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[month]"
                          name="month"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[MONTH](#{Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">MONTH(date_formatted)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[year]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[year]"
                          name="year"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[YEAR](#{Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">YEAR(date_formatted)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[day]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[day]"
                          name="day"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[DAY](#{Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">DAY(date_formatted)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[quarter]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[quarter]"
                          name="quarter"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[DATEPART]("quarter",#{Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">DATEPART("quarter",date_formatted)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[hour]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[hour]"
                          name="hour"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[DATEPART]("hour",#{Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[time_formatted]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">DATEPART("hour",time_formatted)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[week]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[week]"
                          name="week"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[DATEPART]("week",#{Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">DATEPART("week",date_formatted)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[minute]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[minute]"
                          name="minute"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[DATEPART]("minute",#{Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">DATEPART("minute",date_formatted)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[second]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[second]"
                          name="second"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[DATEPART]("second",#{Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">DATEPART("second",date_formatted)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[month_name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="9"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output].Columns[month_name]"
                          name="month_name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">([MONTH](#{Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 1 ? "January" : [MONTH](#{Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 2 ? "February" : [MONTH](#{Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 3 ? "March" : [MONTH](#{Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 4 ? "April" : [MONTH](#{Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 5 ? "May" : [MONTH](#{Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 6 ? "June" : [MONTH](#{Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 7 ? "July" : [MONTH](#{Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 8 ? "August" : [MONTH](#{Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 9 ? "September" : [MONTH](#{Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 10 ? "October" : [MONTH](#{Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 11 ? "November" : [MONTH](#{Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output].Columns[date_formatted]}) == 12 ? "December" : "")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(MONTH(date_formatted) == 1 ? "January" : MONTH(date_formatted) == 2 ? "February" : MONTH(date_formatted) == 3 ? "March" : MONTH(date_formatted) == 4 ? "April" : MONTH(date_formatted) == 5 ? "May" : MONTH(date_formatted) == 6 ? "June" : MONTH(date_formatted) == 7 ? "July" : MONTH(date_formatted) == 8 ? "August" : MONTH(date_formatted) == 9 ? "September" : MONTH(date_formatted) == 10 ? "October" : MONTH(date_formatted) == 11 ? "November" : MONTH(date_formatted) == 12 ? "December" : "")</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Log File catalog\short log file load.Paths[Conditional Split Default Output]"
                  endId="Package\Foreach Loop Log File catalog\short log file load\Multicast.Inputs[Multicast Input 1]"
                  name="Conditional Split Default Output"
                  startId="Package\Foreach Loop Log File catalog\short log file load\Conditional Split.Outputs[Conditional Split Default Output]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\short log file load.Paths[Data Conversion Error Output]"
                  endId="Package\Foreach Loop Log File catalog\short log file load\conversion errors.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Error Output"
                  startId="Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Error Output]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\short log file load.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Inputs[Derived Column Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Log File catalog\short log file load\convert string to date.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\short log file load.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Log File catalog\short log file load\divide date and time.Inputs[Multicast Input 1]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\short log file load.Paths[Derived Column Output1]"
                  endId="Package\Foreach Loop Log File catalog\short log file load\Conditional Split.Inputs[Conditional Split Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Log File catalog\short log file load\add ID.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\short log file load.Paths[Derived Column Output2]"
                  endId="Package\Foreach Loop Log File catalog\short log file load\client dimension.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\short log file load.Paths[Derived Column Output3]"
                  endId="Package\Foreach Loop Log File catalog\short log file load\file-conditionals.Inputs[Input 0]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\short log file load.Paths[Derived Column Output4]"
                  endId="Package\Foreach Loop Log File catalog\short log file load\host dimension.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Log File catalog\short log file load\host dimenstion transformations.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\short log file load.Paths[Derived Column Output5]"
                  endId="Package\Foreach Loop Log File catalog\short log file load\divide codes.Inputs[Input 0]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\short log file load.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Log File catalog\short log file load\add ID.Inputs[Derived Column Input]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1).Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\short log file load.Paths[Multicast Output 1]"
                  endId="Package\Foreach Loop Log File catalog\short log file load\time dimension.Inputs[OLE DB Destination Input]"
                  name="Multicast Output 1"
                  startId="Package\Foreach Loop Log File catalog\short log file load\divide date and time.Outputs[Multicast Output 1]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\short log file load.Paths[Multicast Output 11]"
                  endId="Package\Foreach Loop Log File catalog\short log file load\convert string to date.Inputs[Data Conversion Input]"
                  name="Multicast Output 1"
                  startId="Package\Foreach Loop Log File catalog\short log file load\Multicast.Outputs[Multicast Output 1]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\short log file load.Paths[Multicast Output 2]"
                  endId="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations.Inputs[Derived Column Input]"
                  name="Multicast Output 2"
                  startId="Package\Foreach Loop Log File catalog\short log file load\Multicast.Outputs[Multicast Output 2]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\short log file load.Paths[Multicast Output 21]"
                  endId="Package\Foreach Loop Log File catalog\short log file load\date dimenstion.Inputs[OLE DB Destination Input]"
                  name="Multicast Output 2"
                  startId="Package\Foreach Loop Log File catalog\short log file load\divide date and time.Outputs[Multicast Output 2]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\short log file load.Paths[Multicast Output 3]"
                  endId="Package\Foreach Loop Log File catalog\short log file load\host dimenstion transformations.Inputs[Derived Column Input]"
                  name="Multicast Output 3"
                  startId="Package\Foreach Loop Log File catalog\short log file load\Multicast.Outputs[Multicast Output 3]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\short log file load.Paths[Multicast Output 5]"
                  endId="Package\Foreach Loop Log File catalog\short log file load\Derived Column.Inputs[Derived Column Input]"
                  name="Multicast Output 5"
                  startId="Package\Foreach Loop Log File catalog\short log file load\Multicast.Outputs[Multicast Output 5]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\short log file load.Paths[Multicast Output 6]"
                  endId="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1.Inputs[Derived Column Input]"
                  name="Multicast Output 6"
                  startId="Package\Foreach Loop Log File catalog\short log file load\Multicast.Outputs[Multicast Output 6]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\short log file load.Paths[Output 0]"
                  endId="Package\Foreach Loop Log File catalog\short log file load\file dimension.Inputs[OLE DB Destination Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Log File catalog\short log file load\file-conditionals.Outputs[Output 0]" />
                <path
                  refId="Package\Foreach Loop Log File catalog\short log file load.Paths[Output 01]"
                  endId="Package\Foreach Loop Log File catalog\short log file load\request dimension.Inputs[OLE DB Destination Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Log File catalog\short log file load\divide codes.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Log File catalog.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{391C67AC-A8ED-43AC-8FAD-4C9BBC4C6961}"
          DTS:EvalOp="1"
          DTS:Expression="!ISNULL( @[User::log_filename_short] ) &amp;&amp; @[User::log_filename_short] != &quot;log_filename_short&quot;"
          DTS:From="Package\Foreach Loop Log File catalog\check file type"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Log File catalog\short log file load" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Log File catalog.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{7282D571-0B9D-4FC6-B24D-C646C2D00A08}"
          DTS:EvalOp="1"
          DTS:Expression="!ISNULL( @[User::log_filename_long] )  &amp;&amp; @[User::log_filename_long] != &quot;log_filename_long&quot;"
          DTS:From="Package\Foreach Loop Log File catalog\check file type"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Log File catalog\long log file load" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{34A41BEA-E9E8-4CAC-96DB-43B4C0826043}"
          DTS:ObjectName="{34A41BEA-E9E8-4CAC-96DB-43B4C0826043}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::LogFile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{8BBB2B98-AD90-437B-A848-C3941E699B49}"
      DTS:From="Package\Divide files by column count"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Loop Log File catalog" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="281,42"
          Id="Package\assign geodata for distinct(save api usage)"
          TopLeft="93.7142857142857,37.4285714285714" />
        <NodeLayout
          Size="252,42"
          Id="Package\calculate counts for measurable data"
          TopLeft="135.571428571429,146.714285714286" />
        <NodeLayout
          Size="163,42"
          Id="Package\Divide files by column count\file allocation task"
          TopLeft="61.5,70.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="244,197"
          Size="244,240"
          Id="Package\Divide files by column count"
          TopLeft="1263.71428571429,59.8571428571429" />
        <NodeLayout
          Size="147,42"
          Id="Package\Foreach Loop Log File catalog\check file type"
          TopLeft="432.285714285714,174.714285714286" />
        <NodeLayout
          Size="157,42"
          Id="Package\Foreach Loop Log File catalog\long log file load"
          TopLeft="111.5,433" />
        <NodeLayout
          Size="161,42"
          Id="Package\Foreach Loop Log File catalog\short log file load"
          TopLeft="100.071428571428,31.9285714285714" />
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog.PrecedenceConstraints[Constraint]"
          TopLeft="505.785714285714,174.714285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-325.214285714286,-100.785714285715"
              Start="0,0"
              End="-325.214285714286,-93.2857142857146">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-46.3928571428573" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-46.3928571428573"
                    Point2="0,-50.3928571428573"
                    Point3="-4,-50.3928571428573" />
                  <mssgle:LineSegment
                    End="-321.214285714286,-50.3928571428573" />
                  <mssgle:CubicBezierSegment
                    Point1="-321.214285714286,-50.3928571428573"
                    Point2="-325.214285714286,-50.3928571428573"
                    Point3="-325.214285714286,-54.3928571428573" />
                  <mssgle:LineSegment
                    End="-325.214285714286,-93.2857142857146" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-170.607142857143,-45.3928571428573,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog.PrecedenceConstraints[Constraint 1]"
          TopLeft="505.785714285714,216.714285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-315.785714285714,216.285714285714"
              Start="0,0"
              End="-315.785714285714,208.785714285714">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,104.142857142857" />
                  <mssgle:CubicBezierSegment
                    Point1="0,104.142857142857"
                    Point2="0,108.142857142857"
                    Point3="-4,108.142857142857" />
                  <mssgle:LineSegment
                    End="-311.785714285714,108.142857142857" />
                  <mssgle:CubicBezierSegment
                    Point1="-311.785714285714,108.142857142857"
                    Point2="-315.785714285714,108.142857142857"
                    Point3="-315.785714285714,112.142857142857" />
                  <mssgle:LineSegment
                    End="-315.785714285714,208.785714285714" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-165.892857142857,113.142857142857,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="692,546"
          Size="692,589"
          Id="Package\Foreach Loop Log File catalog"
          TopLeft="414.714285714286,10.4285714285714" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="1263.71428571429,179.857142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-157.000000000004,125.071428571428"
              Start="0,0"
              End="-149.500000000004,125.071428571428">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-74.500000000002,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-74.500000000002,0"
                    Point2="-78.500000000002,0"
                    Point3="-78.500000000002,4" />
                  <mssgle:LineSegment
                    End="-78.500000000002,121.071428571428" />
                  <mssgle:CubicBezierSegment
                    Point1="-78.500000000002,121.071428571428"
                    Point2="-78.500000000002,125.071428571428"
                    Point3="-82.500000000002,125.071428571428" />
                  <mssgle:LineSegment
                    End="-149.500000000004,125.071428571428" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\assign geodata for distinct(save api usage)">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="150,42"
          Id="Package\assign geodata for distinct(save api usage)\OLE DB Source"
          TopLeft="1069,60" />
        <NodeLayout
          Size="163,42"
          Id="Package\assign geodata for distinct(save api usage)\Script Component"
          TopLeft="562,41" />
        <NodeLayout
          Size="117,42"
          Id="Package\assign geodata for distinct(save api usage)\getType"
          TopLeft="834,53" />
        <NodeLayout
          Size="131,42"
          Id="Package\assign geodata for distinct(save api usage)\destination"
          TopLeft="125,22" />
        <EdgeLayout
          Id="Package\assign geodata for distinct(save api usage).Paths[OLE DB Source Output]"
          TopLeft="1069,77.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-118,0"
              Start="0,0"
              End="-110.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-110.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-63.25,5,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\assign geodata for distinct(save api usage).Paths[mozilla]"
          TopLeft="834,74">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-109,-12"
              Start="0,0"
              End="-101.5,-12">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-50.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-50.5,0"
                    Point2="-54.5,0"
                    Point3="-54.5,-4" />
                  <mssgle:LineSegment
                    End="-54.5,-8" />
                  <mssgle:CubicBezierSegment
                    Point1="-54.5,-8"
                    Point2="-54.5,-12"
                    Point3="-58.5,-12" />
                  <mssgle:LineSegment
                    End="-101.5,-12" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.04998046875,1,31.0999609375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\assign geodata for distinct(save api usage)\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\assign geodata for distinct(save api usage)\destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\calculate counts for measurable data">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="150,42"
          Id="Package\calculate counts for measurable data\OLE DB Source"
          TopLeft="1069,60" />
        <NodeLayout
          Size="163,42"
          Id="Package\calculate counts for measurable data\Script Component"
          TopLeft="562,41" />
        <NodeLayout
          Size="117,42"
          Id="Package\calculate counts for measurable data\getType"
          TopLeft="834,53" />
        <NodeLayout
          Size="131,42"
          Id="Package\calculate counts for measurable data\destination"
          TopLeft="125,22" />
        <EdgeLayout
          Id="Package\calculate counts for measurable data.Paths[OLE DB Source Output]"
          TopLeft="1069,77.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-118,0"
              Start="0,0"
              End="-110.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-110.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-63.25,5,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\calculate counts for measurable data.Paths[mozilla]"
          TopLeft="834,74">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-109,-12"
              Start="0,0"
              End="-101.5,-12">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-50.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-50.5,0"
                    Point2="-54.5,0"
                    Point3="-54.5,-4" />
                  <mssgle:LineSegment
                    End="-54.5,-8" />
                  <mssgle:CubicBezierSegment
                    Point1="-54.5,-8"
                    Point2="-54.5,-12"
                    Point3="-58.5,-12" />
                  <mssgle:LineSegment
                    End="-101.5,-12" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.04998046875,1,31.0999609375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Divide files by column count\file allocation task">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="107,42"
          Id="Package\Divide files by column count\file allocation task\ID file"
          TopLeft="315,80" />
        <NodeLayout
          Size="125,42"
          Id="Package\Divide files by column count\file allocation task\file_name"
          TopLeft="243.75,180.75" />
        <NodeLayout
          Size="171,42"
          Id="Package\Divide files by column count\file allocation task\OLE DB Destination"
          TopLeft="113.75,316.25" />
        <NodeLayout
          Size="183,42"
          Id="Package\Divide files by column count\file allocation task\Input ETL (file type 2)"
          TopLeft="977.083333333333,133.388888888889" />
        <NodeLayout
          Size="119,42"
          Id="Package\Divide files by column count\file allocation task\file_type"
          TopLeft="528.75,107.5" />
        <NodeLayout
          Size="155,42"
          Id="Package\Divide files by column count\file allocation task\Conditional Split"
          TopLeft="779.583333333333,95.1388888888889" />
        <EdgeLayout
          Id="Package\Divide files by column count\file allocation task.Paths[Flat File Source Output]"
          TopLeft="977.083333333333,154.388888888889">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-42.5000000000001,-38.25"
              Start="0,0"
              End="-35.0000000000001,-38.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-17.2500000000001,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-17.2500000000001,0"
                    Point2="-21.2500000000001,0"
                    Point3="-21.2500000000001,-4" />
                  <mssgle:LineSegment
                    End="-21.2500000000001,-34.25" />
                  <mssgle:CubicBezierSegment
                    Point1="-21.2500000000001,-34.25"
                    Point2="-21.2500000000001,-38.25"
                    Point3="-25.2500000000001,-38.25" />
                  <mssgle:LineSegment
                    End="-35.0000000000001,-38.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Divide files by column count\file allocation task.Paths[Derived Column Output1]"
          TopLeft="528.75,128.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-106.75,-27.5"
              Start="0,0"
              End="-99.25,-27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-49.375,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-49.375,0"
                    Point2="-53.375,0"
                    Point3="-53.375,-4" />
                  <mssgle:LineSegment
                    End="-53.375,-23.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-53.375,-23.5"
                    Point2="-53.375,-27.5"
                    Point3="-57.375,-27.5" />
                  <mssgle:LineSegment
                    End="-99.25,-27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Divide files by column count\file allocation task.Paths[Derived Column Output]"
          TopLeft="306.25,222.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-107,93.5"
              Start="0,0"
              End="-107,86">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.75"
                    Point2="0,46.75"
                    Point3="-4,46.75" />
                  <mssgle:LineSegment
                    End="-103,46.75" />
                  <mssgle:CubicBezierSegment
                    Point1="-103,46.75"
                    Point2="-107,46.75"
                    Point3="-107,50.75" />
                  <mssgle:LineSegment
                    End="-107,86" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Divide files by column count\file allocation task.Paths[Output 0]"
          TopLeft="368.5,122">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-62.25,58.75"
              Start="0,0"
              End="-62.25,51.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.375" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.375"
                    Point2="0,29.375"
                    Point3="-4,29.375" />
                  <mssgle:LineSegment
                    End="-58.25,29.375" />
                  <mssgle:CubicBezierSegment
                    Point1="-58.25,29.375"
                    Point2="-62.25,29.375"
                    Point3="-62.25,33.375" />
                  <mssgle:LineSegment
                    End="-62.25,51.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Divide files by column count\file allocation task.Paths[headers_row]"
          TopLeft="779.583333333333,116.138888888889">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-131.833333333333,12.3611111111111"
              Start="0,0"
              End="-124.333333333333,12.3611111111111">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-61.9166666666667,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-61.9166666666667,0"
                    Point2="-65.9166666666667,0"
                    Point3="-65.9166666666667,4" />
                  <mssgle:LineSegment
                    End="-65.9166666666667,8.36111111111111" />
                  <mssgle:CubicBezierSegment
                    Point1="-65.9166666666667,8.36111111111111"
                    Point2="-65.9166666666667,12.3611111111111"
                    Point3="-69.9166666666667,12.3611111111111" />
                  <mssgle:LineSegment
                    End="-124.333333333333,12.3611111111111" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-94.9373307291667,-17.0625,58.041328125,11.0625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Divide files by column count\file allocation task\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Log File catalog\check file type">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach Loop Log File catalog\check file type\Script Component"
          TopLeft="324,176" />
        <NodeLayout
          Size="150,42"
          Id="Package\Foreach Loop Log File catalog\check file type\OLE DB Source"
          TopLeft="569,151" />
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\check file type.Paths[OLE DB Source Output]"
          TopLeft="569,172">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-82,25"
              Start="0,0"
              End="-74.5,25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-37,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-37,0"
                    Point2="-41,0"
                    Point3="-41,4" />
                  <mssgle:LineSegment
                    End="-41,21" />
                  <mssgle:CubicBezierSegment
                    Point1="-41,21"
                    Point2="-41,25"
                    Point3="-45,25" />
                  <mssgle:LineSegment
                    End="-74.5,25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Log File catalog\check file type\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Log File catalog\long log file load">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="160,42"
          Id="Package\Foreach Loop Log File catalog\long log file load\conversion errors"
          TopLeft="974.206349206349,60" />
        <NodeLayout
          Size="144,42"
          Id="Package\Foreach Loop Log File catalog\long log file load\file dimension"
          TopLeft="92.1587301587304,419.428571428571" />
        <NodeLayout
          Size="137,42"
          Id="Package\Foreach Loop Log File catalog\long log file load\divide codes"
          TopLeft="1233.73015873015,515.47619047619" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Log File catalog\long log file load\date dimenstion"
          TopLeft="62.1587301587304,224.904761904762" />
        <NodeLayout
          Size="155,42"
          Id="Package\Foreach Loop Log File catalog\long log file load\Conditional Split"
          TopLeft="1156.44444444444,174.761904761905" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Log File catalog\long log file load\Derived Column"
          TopLeft="1188.01587301587,362.619047619048" />
        <NodeLayout
          Size="150,43"
          Id="Package\Foreach Loop Log File catalog\long log file load\host dimension"
          TopLeft="152.634920634921,563.47619047619" />
        <NodeLayout
          Size="155,42"
          Id="Package\Foreach Loop Log File catalog\long log file load\client dimension"
          TopLeft="109.301587301587,311.904761904762" />
        <NodeLayout
          Size="143,42"
          Id="Package\Foreach Loop Log File catalog\long log file load\file dimension transformations 1"
          TopLeft="784.206349206349,362.619047619048" />
        <NodeLayout
          Size="183,42"
          Id="Package\Foreach Loop Log File catalog\long log file load\Input ETL (file type 2)"
          TopLeft="1650.9761904762,109.849206349207" />
        <NodeLayout
          Size="180,42"
          Id="Package\Foreach Loop Log File catalog\long log file load\convert string to date"
          TopLeft="823.730158730159,175.47619047619" />
        <NodeLayout
          Size="165,42"
          Id="Package\Foreach Loop Log File catalog\long log file load\request dimension"
          TopLeft="805.492063492064,579.428571428572" />
        <NodeLayout
          Size="151,42"
          Id="Package\Foreach Loop Log File catalog\long log file load\time dimension"
          TopLeft="60,165.396825396826" />
        <NodeLayout
          Size="232,42"
          Id="Package\Foreach Loop Log File catalog\long log file load\client dimension transformations"
          TopLeft="381.825396825397,293.095238095238" />
        <NodeLayout
          Size="231,42"
          Id="Package\Foreach Loop Log File catalog\long log file load\host dimenstion transformations"
          TopLeft="496.587301587302,465.47619047619" />
        <NodeLayout
          Size="152,42"
          Id="Package\Foreach Loop Log File catalog\long log file load\file-conditionals"
          TopLeft="534.682539682539,357.619047619048" />
        <NodeLayout
          Size="175,42"
          Id="Package\Foreach Loop Log File catalog\long log file load\divide date and time"
          TopLeft="353.333333333333,199.904761904762" />
        <NodeLayout
          Size="231,42"
          Id="Package\Foreach Loop Log File catalog\long log file load\Time dimension transformations"
          TopLeft="562.301587301587,172.619047619048" />
        <NodeLayout
          Size="120,42"
          Id="Package\Foreach Loop Log File catalog\long log file load\Multicast"
          TopLeft="1018.25396825397,339.52380952381" />
        <NodeLayout
          Size="111,42"
          Id="Package\Foreach Loop Log File catalog\long log file load\add ID"
          TopLeft="1372.53968253968,180.952380952381" />
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\long log file load.Paths[Output 01]"
          TopLeft="534.682539682539,378.619047619048">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-298.523809523809,61.8095238095233"
              Start="0,0"
              End="-291.023809523809,61.8095238095233">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-145.261904761905,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-145.261904761905,0"
                    Point2="-149.261904761905,0"
                    Point3="-149.261904761905,4" />
                  <mssgle:LineSegment
                    End="-149.261904761905,57.8095238095233" />
                  <mssgle:CubicBezierSegment
                    Point1="-149.261904761905,57.8095238095233"
                    Point2="-149.261904761905,61.8095238095233"
                    Point3="-153.261904761905,61.8095238095233" />
                  <mssgle:LineSegment
                    End="-291.023809523809,61.8095238095233" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\long log file load.Paths[Output 0]"
          TopLeft="1233.73015873015,536.47619047619">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-263.238095238095,63.9523809523814"
              Start="0,0"
              End="-255.738095238095,63.9523809523814">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-127.619047619047,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-127.619047619047,0"
                    Point2="-131.619047619047,0"
                    Point3="-131.619047619047,4" />
                  <mssgle:LineSegment
                    End="-131.619047619047,59.9523809523814" />
                  <mssgle:CubicBezierSegment
                    Point1="-131.619047619047,59.9523809523814"
                    Point2="-131.619047619047,63.9523809523814"
                    Point3="-135.619047619047,63.9523809523814" />
                  <mssgle:LineSegment
                    End="-255.738095238095,63.9523809523814" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\long log file load.Paths[Multicast Output 6]"
          TopLeft="1018.25396825397,366.190476190476">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-91.0476190476192,17.4285714285715"
              Start="0,0"
              End="-83.5476190476192,17.4285714285715">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-34.4237658366098,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-34.4237658366098,0"
                    Point2="-38.4237658366098,0"
                    Point3="-38.4237658366098,4" />
                  <mssgle:LineSegment
                    End="-38.4237658366098,13.4285714285715" />
                  <mssgle:CubicBezierSegment
                    Point1="-38.4237658366098,13.4285714285715"
                    Point2="-38.4237658366098,17.4285714285715"
                    Point3="-42.4237658366098,17.4285714285715" />
                  <mssgle:LineSegment
                    End="-83.5476190476192,17.4285714285715" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\long log file load.Paths[Multicast Output 5]"
          TopLeft="1138.25396825396,360.52380952381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="49.7619047619071,23.095238095238"
              Start="0,0"
              End="42.2619047619071,23.095238095238">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="20.8809523809537,0" />
                  <mssgle:CubicBezierSegment
                    Point1="20.8809523809537,0"
                    Point2="24.8809523809537,0"
                    Point3="24.8809523809537,4" />
                  <mssgle:LineSegment
                    End="24.8809523809537,19.095238095238" />
                  <mssgle:CubicBezierSegment
                    Point1="24.8809523809537,19.095238095238"
                    Point2="24.8809523809537,23.095238095238"
                    Point3="28.8809523809537,23.095238095238" />
                  <mssgle:LineSegment
                    End="42.2619047619071,23.095238095238" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\long log file load.Paths[Multicast Output 3]"
          TopLeft="1059.5873015873,381.52380952381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-447.5,83.952380952381"
              Start="0,0"
              End="-447.5,76.452380952381">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.2437343358396" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.2437343358396"
                    Point2="0,34.2437343358396"
                    Point3="-4,34.2437343358396" />
                  <mssgle:LineSegment
                    End="-443.5,34.2437343358396" />
                  <mssgle:CubicBezierSegment
                    Point1="-443.5,34.2437343358396"
                    Point2="-447.5,34.2437343358396"
                    Point3="-447.5,38.2437343358396" />
                  <mssgle:LineSegment
                    End="-447.5,76.452380952381" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\long log file load.Paths[Multicast Output 21]"
          TopLeft="1018.25396825397,354.857142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-404.428571428571,-40.7619047619048"
              Start="0,0"
              End="-396.928571428571,-40.7619047619048">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-166.67627785059,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-166.67627785059,0"
                    Point2="-170.67627785059,0"
                    Point3="-170.67627785059,-4" />
                  <mssgle:LineSegment
                    End="-170.67627785059,-36.7619047619048" />
                  <mssgle:CubicBezierSegment
                    Point1="-170.67627785059,-36.7619047619048"
                    Point2="-170.67627785059,-40.7619047619048"
                    Point3="-174.67627785059,-40.7619047619048" />
                  <mssgle:LineSegment
                    End="-396.928571428571,-40.7619047619048" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\long log file load.Paths[Multicast Output 2]"
          TopLeft="353.333333333333,226.571428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-137.174603174603,19.3333333333334"
              Start="0,0"
              End="-129.674603174603,19.3333333333334">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-53.8901995048783,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-53.8901995048783,0"
                    Point2="-57.8901995048783,0"
                    Point3="-57.8901995048783,4" />
                  <mssgle:LineSegment
                    End="-57.8901995048783,15.3333333333334" />
                  <mssgle:CubicBezierSegment
                    Point1="-57.8901995048783,15.3333333333334"
                    Point2="-57.8901995048783,19.3333333333334"
                    Point3="-61.8901995048783,19.3333333333334" />
                  <mssgle:LineSegment
                    End="-129.674603174603,19.3333333333334" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\long log file load.Paths[Multicast Output 11]"
          TopLeft="353.333333333333,220.904761904762">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-142.333333333333,-34.5079365079367"
              Start="0,0"
              End="-134.833333333333,-34.5079365079367">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-67.1666666666667,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-67.1666666666667,0"
                    Point2="-71.1666666666667,0"
                    Point3="-71.1666666666667,-4" />
                  <mssgle:LineSegment
                    End="-71.1666666666667,-30.5079365079367" />
                  <mssgle:CubicBezierSegment
                    Point1="-71.1666666666667,-30.5079365079367"
                    Point2="-71.1666666666667,-34.5079365079367"
                    Point3="-75.1666666666667,-34.5079365079367" />
                  <mssgle:LineSegment
                    End="-134.833333333333,-34.5079365079367" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\long log file load.Paths[Multicast Output 1]"
          TopLeft="1059.5873015873,339.52380952381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-145.857142857143,-122.047619047619"
              Start="0,0"
              End="-145.857142857143,-114.547619047619">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-45.782581453634" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-45.782581453634"
                    Point2="0,-49.782581453634"
                    Point3="-4,-49.782581453634" />
                  <mssgle:LineSegment
                    End="-141.857142857143,-49.782581453634" />
                  <mssgle:CubicBezierSegment
                    Point1="-141.857142857143,-49.782581453634"
                    Point2="-145.857142857143,-49.782581453634"
                    Point3="-145.857142857143,-53.782581453634" />
                  <mssgle:LineSegment
                    End="-145.857142857143,-114.547619047619" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\long log file load.Paths[Flat File Source Output]"
          TopLeft="1742.4761904762,151.849206349207">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-314.43650793652,29.103174603174"
              Start="0,0"
              End="-314.43650793652,21.603174603174">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.551587301587" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.551587301587"
                    Point2="0,14.551587301587"
                    Point3="-4,14.551587301587" />
                  <mssgle:LineSegment
                    End="-310.43650793652,14.551587301587" />
                  <mssgle:CubicBezierSegment
                    Point1="-310.43650793652,14.551587301587"
                    Point2="-314.43650793652,14.551587301587"
                    Point3="-314.43650793652,18.551587301587" />
                  <mssgle:LineSegment
                    End="-314.43650793652,21.603174603174" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\long log file load.Paths[Derived Column Output5]"
          TopLeft="612.087301587302,507.47619047619">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-384.452380952381,56.0000000000005"
              Start="0,0"
              End="-384.452380952381,48.5000000000005">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.0000000000002" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.0000000000002"
                    Point2="0,28.0000000000002"
                    Point3="-4,28.0000000000002" />
                  <mssgle:LineSegment
                    End="-380.452380952381,28.0000000000002" />
                  <mssgle:CubicBezierSegment
                    Point1="-380.452380952381,28.0000000000002"
                    Point2="-384.452380952381,28.0000000000002"
                    Point3="-384.452380952381,32.0000000000002" />
                  <mssgle:LineSegment
                    End="-384.452380952381,48.5000000000005" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\long log file load.Paths[Derived Column Output4]"
          TopLeft="784.206349206349,381.119047619048">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-97.5238095238096,0"
              Start="0,0"
              End="-90.0238095238096,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-90.0238095238096,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\long log file load.Paths[Derived Column Output3]"
          TopLeft="381.825396825397,314.095238095238">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-117.52380952381,18.8095238095239"
              Start="0,0"
              End="-110.02380952381,18.8095238095239">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-54.761904761905,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-54.761904761905,0"
                    Point2="-58.761904761905,0"
                    Point3="-58.761904761905,4" />
                  <mssgle:LineSegment
                    End="-58.761904761905,14.8095238095239" />
                  <mssgle:CubicBezierSegment
                    Point1="-58.761904761905,14.8095238095239"
                    Point2="-58.761904761905,18.8095238095239"
                    Point3="-62.761904761905,18.8095238095239" />
                  <mssgle:LineSegment
                    End="-110.02380952381,18.8095238095239" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\long log file load.Paths[Derived Column Output2]"
          TopLeft="1372.53968253968,198.857142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-61.0952380952383,0"
              Start="0,0"
              End="-53.5952380952383,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-53.5952380952383,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\long log file load.Paths[Derived Column Output1]"
          TopLeft="562.301587301587,193.619047619048">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-33.9682539682541,27.2857142857147"
              Start="0,0"
              End="-26.4682539682541,27.2857142857147">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-12.984126984127,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-12.984126984127,0"
                    Point2="-16.984126984127,0"
                    Point3="-16.984126984127,4" />
                  <mssgle:LineSegment
                    End="-16.984126984127,23.2857142857147" />
                  <mssgle:CubicBezierSegment
                    Point1="-16.984126984127,23.2857142857147"
                    Point2="-16.984126984127,27.2857142857147"
                    Point3="-20.984126984127,27.2857142857147" />
                  <mssgle:LineSegment
                    End="-26.4682539682541,27.2857142857147" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\long log file load.Paths[Derived Column Output]"
          TopLeft="1265.01587301587,404.619047619048">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="37.2142857142858,110.857142857143"
              Start="0,0"
              End="37.2142857142858,103.357142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.4285714285714" />
                  <mssgle:CubicBezierSegment
                    Point1="0,51.4285714285714"
                    Point2="0,55.4285714285714"
                    Point3="4,55.4285714285714" />
                  <mssgle:LineSegment
                    End="33.2142857142858,55.4285714285714" />
                  <mssgle:CubicBezierSegment
                    Point1="33.2142857142858,55.4285714285714"
                    Point2="37.2142857142858,55.4285714285714"
                    Point3="37.2142857142858,59.4285714285714" />
                  <mssgle:LineSegment
                    End="37.2142857142858,103.357142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\long log file load.Paths[Data Conversion Output]"
          TopLeft="823.730158730159,195.047619047619">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-30.4285714285717,0"
              Start="0,0"
              End="-22.9285714285717,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-22.9285714285717,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\long log file load.Paths[Data Conversion Error Output]"
          TopLeft="913.730158730159,175.47619047619">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="140.47619047619,-73.4761904761904"
              Start="0,0"
              End="140.47619047619,-65.9761904761904">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-32.7380952380952" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-32.7380952380952"
                    Point2="0,-36.7380952380952"
                    Point3="4,-36.7380952380952" />
                  <mssgle:LineSegment
                    End="136.47619047619,-36.7380952380952" />
                  <mssgle:CubicBezierSegment
                    Point1="136.47619047619,-36.7380952380952"
                    Point2="140.47619047619,-36.7380952380952"
                    Point3="140.47619047619,-40.7380952380952" />
                  <mssgle:LineSegment
                    End="140.47619047619,-65.9761904761904" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="4.15170851934501,-31.7380952380952,132.1727734375,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\long log file load.Paths[Conditional Split Default Output]"
          TopLeft="1233.94444444444,216.761904761905">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-137.023809523812,122.761904761905"
              Start="0,0"
              End="-137.023809523812,115.261904761905">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,68.6879699248121" />
                  <mssgle:CubicBezierSegment
                    Point1="0,68.6879699248121"
                    Point2="0,72.6879699248121"
                    Point3="-4,72.6879699248121" />
                  <mssgle:LineSegment
                    End="-133.023809523812,72.6879699248121" />
                  <mssgle:CubicBezierSegment
                    Point1="-133.023809523812,72.6879699248121"
                    Point2="-137.023809523812,72.6879699248121"
                    Point3="-137.023809523812,76.6879699248121" />
                  <mssgle:LineSegment
                    End="-137.023809523812,115.261904761905" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-139.125811011906,77.6879699248121,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Log File catalog\long log file load\file dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Log File catalog\long log file load\date dimenstion">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Log File catalog\long log file load\host dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Log File catalog\long log file load\client dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Log File catalog\long log file load\request dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Log File catalog\long log file load\time dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Log File catalog\short log file load">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="160,42"
          Id="Package\Foreach Loop Log File catalog\short log file load\conversion errors"
          TopLeft="914.761904761904,15.9523809523809" />
        <NodeLayout
          Size="120,42"
          Id="Package\Foreach Loop Log File catalog\short log file load\Multicast"
          TopLeft="958.809523809521,295.476190476191" />
        <NodeLayout
          Size="144,42"
          Id="Package\Foreach Loop Log File catalog\short log file load\file dimension"
          TopLeft="32.7142857142856,375.380952380952" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Log File catalog\short log file load\date dimenstion"
          TopLeft="2.71428571428564,180.857142857143" />
        <NodeLayout
          Size="183,42"
          Id="Package\Foreach Loop Log File catalog\short log file load\Input ETL (file type 1)"
          TopLeft="1591.53174603175,65.8015873015875" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Log File catalog\short log file load\Derived Column"
          TopLeft="1128.57142857143,318.571428571429" />
        <NodeLayout
          Size="150,43"
          Id="Package\Foreach Loop Log File catalog\short log file load\host dimension"
          TopLeft="93.1904761904763,519.428571428571" />
        <NodeLayout
          Size="231,42"
          Id="Package\Foreach Loop Log File catalog\short log file load\Time dimension transformations"
          TopLeft="502.857142857142,128.571428571429" />
        <NodeLayout
          Size="155,42"
          Id="Package\Foreach Loop Log File catalog\short log file load\Conditional Split"
          TopLeft="1097,130.714285714286" />
        <NodeLayout
          Size="230,42"
          Id="Package\Foreach Loop Log File catalog\short log file load\file dimension transformations 1"
          TopLeft="724.761904761904,317.571428571429" />
        <NodeLayout
          Size="180,42"
          Id="Package\Foreach Loop Log File catalog\short log file load\convert string to date"
          TopLeft="764.285714285714,131.428571428571" />
        <NodeLayout
          Size="152,42"
          Id="Package\Foreach Loop Log File catalog\short log file load\file-conditionals"
          TopLeft="546.904761904761,311.904761904762" />
        <NodeLayout
          Size="232,42"
          Id="Package\Foreach Loop Log File catalog\short log file load\client dimension transformations"
          TopLeft="322.380952380952,249.047619047619" />
        <NodeLayout
          Size="165,42"
          Id="Package\Foreach Loop Log File catalog\short log file load\request dimension"
          TopLeft="746.047619047619,535.380952380953" />
        <NodeLayout
          Size="175,42"
          Id="Package\Foreach Loop Log File catalog\short log file load\divide date and time"
          TopLeft="293.888888888888,155.857142857143" />
        <NodeLayout
          Size="231,42"
          Id="Package\Foreach Loop Log File catalog\short log file load\host dimenstion transformations"
          TopLeft="437.142857142857,421.428571428571" />
        <NodeLayout
          Size="155,42"
          Id="Package\Foreach Loop Log File catalog\short log file load\client dimension"
          TopLeft="49.8571428571423,267.857142857143" />
        <NodeLayout
          Size="137,42"
          Id="Package\Foreach Loop Log File catalog\short log file load\divide codes"
          TopLeft="1174.28571428571,471.428571428571" />
        <NodeLayout
          Size="151,42"
          Id="Package\Foreach Loop Log File catalog\short log file load\time dimension"
          TopLeft="0.55555555555523,121.349206349207" />
        <NodeLayout
          Size="111,42"
          Id="Package\Foreach Loop Log File catalog\short log file load\add ID"
          TopLeft="1313.09523809524,136.904761904762" />
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\short log file load.Paths[Multicast Output 21]"
          TopLeft="293.888888888888,182.52380952381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-137.174603174603,19.3333333333334"
              Start="0,0"
              End="-129.674603174603,19.3333333333334">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-53.8901995048783,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-53.8901995048783,0"
                    Point2="-57.8901995048783,0"
                    Point3="-57.8901995048783,4" />
                  <mssgle:LineSegment
                    End="-57.8901995048783,15.3333333333334" />
                  <mssgle:CubicBezierSegment
                    Point1="-57.8901995048783,15.3333333333334"
                    Point2="-57.8901995048783,19.3333333333334"
                    Point3="-61.8901995048783,19.3333333333334" />
                  <mssgle:LineSegment
                    End="-129.674603174603,19.3333333333334" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\short log file load.Paths[Multicast Output 2]"
          TopLeft="958.809523809521,310.809523809524">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-404.428571428571,-40.7619047619048"
              Start="0,0"
              End="-396.928571428571,-40.7619047619048">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-166.67627785059,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-166.67627785059,0"
                    Point2="-170.67627785059,0"
                    Point3="-170.67627785059,-4" />
                  <mssgle:LineSegment
                    End="-170.67627785059,-36.7619047619048" />
                  <mssgle:CubicBezierSegment
                    Point1="-170.67627785059,-36.7619047619048"
                    Point2="-170.67627785059,-40.7619047619048"
                    Point3="-174.67627785059,-40.7619047619048" />
                  <mssgle:LineSegment
                    End="-396.928571428571,-40.7619047619048" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\short log file load.Paths[Multicast Output 11]"
          TopLeft="1000.14285714286,295.476190476191">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-145.857142857143,-122.047619047619"
              Start="0,0"
              End="-145.857142857143,-114.547619047619">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-45.782581453634" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-45.782581453634"
                    Point2="0,-49.782581453634"
                    Point3="-4,-49.782581453634" />
                  <mssgle:LineSegment
                    End="-141.857142857143,-49.782581453634" />
                  <mssgle:CubicBezierSegment
                    Point1="-141.857142857143,-49.782581453634"
                    Point2="-145.857142857143,-49.782581453634"
                    Point3="-145.857142857143,-53.782581453634" />
                  <mssgle:LineSegment
                    End="-145.857142857143,-114.547619047619" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\short log file load.Paths[Multicast Output 1]"
          TopLeft="293.888888888888,176.857142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-142.333333333333,-34.5079365079367"
              Start="0,0"
              End="-134.833333333333,-34.5079365079367">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-67.1666666666667,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-67.1666666666667,0"
                    Point2="-71.1666666666667,0"
                    Point3="-71.1666666666667,-4" />
                  <mssgle:LineSegment
                    End="-71.1666666666667,-30.5079365079367" />
                  <mssgle:CubicBezierSegment
                    Point1="-71.1666666666667,-30.5079365079367"
                    Point2="-71.1666666666667,-34.5079365079367"
                    Point3="-75.1666666666667,-34.5079365079367" />
                  <mssgle:LineSegment
                    End="-134.833333333333,-34.5079365079367" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\short log file load.Paths[Flat File Source Output]"
          TopLeft="1683.03174603175,107.801587301587">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-314.43650793651,29.1031746031745"
              Start="0,0"
              End="-314.43650793651,21.6031746031745">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.5515873015873" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.5515873015873"
                    Point2="0,14.5515873015873"
                    Point3="-4,14.5515873015873" />
                  <mssgle:LineSegment
                    End="-310.43650793651,14.5515873015873" />
                  <mssgle:CubicBezierSegment
                    Point1="-310.43650793651,14.5515873015873"
                    Point2="-314.43650793651,14.5515873015873"
                    Point3="-314.43650793651,18.5515873015873" />
                  <mssgle:LineSegment
                    End="-314.43650793651,21.6031746031745" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\short log file load.Paths[Derived Column Output5]"
          TopLeft="1205.57142857143,360.571428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="37.2142857142858,110.857142857143"
              Start="0,0"
              End="37.2142857142858,103.357142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.4285714285714" />
                  <mssgle:CubicBezierSegment
                    Point1="0,51.4285714285714"
                    Point2="0,55.4285714285714"
                    Point3="4,55.4285714285714" />
                  <mssgle:LineSegment
                    End="33.2142857142858,55.4285714285714" />
                  <mssgle:CubicBezierSegment
                    Point1="33.2142857142858,55.4285714285714"
                    Point2="37.2142857142858,55.4285714285714"
                    Point3="37.2142857142858,59.4285714285714" />
                  <mssgle:LineSegment
                    End="37.2142857142858,103.357142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\short log file load.Paths[Derived Column Output4]"
          TopLeft="552.642857142857,463.428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-384.452380952381,56.0000000000005"
              Start="0,0"
              End="-384.452380952381,48.5000000000005">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.0000000000002" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.0000000000002"
                    Point2="0,28.0000000000002"
                    Point3="-4,28.0000000000002" />
                  <mssgle:LineSegment
                    End="-380.452380952381,28.0000000000002" />
                  <mssgle:CubicBezierSegment
                    Point1="-380.452380952381,28.0000000000002"
                    Point2="-384.452380952381,28.0000000000002"
                    Point3="-384.452380952381,32.0000000000002" />
                  <mssgle:LineSegment
                    End="-384.452380952381,48.5000000000005" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\short log file load.Paths[Derived Column Output3]"
          TopLeft="724.761904761904,335.738095238096">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-25.857142857143,0"
              Start="0,0"
              End="-18.357142857143,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-18.357142857143,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\short log file load.Paths[Derived Column Output2]"
          TopLeft="322.380952380952,270.047619047619">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-117.52380952381,18.8095238095239"
              Start="0,0"
              End="-110.02380952381,18.8095238095239">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-54.761904761905,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-54.761904761905,0"
                    Point2="-58.761904761905,0"
                    Point3="-58.761904761905,4" />
                  <mssgle:LineSegment
                    End="-58.761904761905,14.8095238095239" />
                  <mssgle:CubicBezierSegment
                    Point1="-58.761904761905,14.8095238095239"
                    Point2="-58.761904761905,18.8095238095239"
                    Point3="-62.761904761905,18.8095238095239" />
                  <mssgle:LineSegment
                    End="-110.02380952381,18.8095238095239" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\short log file load.Paths[Derived Column Output1]"
          TopLeft="1313.09523809524,154.809523809524">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-61.0952380952399,0"
              Start="0,0"
              End="-53.5952380952399,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-53.5952380952399,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\short log file load.Paths[Derived Column Output]"
          TopLeft="502.857142857142,149.571428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-33.9682539682541,27.2857142857147"
              Start="0,0"
              End="-26.4682539682541,27.2857142857147">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-12.984126984127,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-12.984126984127,0"
                    Point2="-16.984126984127,0"
                    Point3="-16.984126984127,4" />
                  <mssgle:LineSegment
                    End="-16.984126984127,23.2857142857147" />
                  <mssgle:CubicBezierSegment
                    Point1="-16.984126984127,23.2857142857147"
                    Point2="-16.984126984127,27.2857142857147"
                    Point3="-20.984126984127,27.2857142857147" />
                  <mssgle:LineSegment
                    End="-26.4682539682541,27.2857142857147" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\short log file load.Paths[Data Conversion Output]"
          TopLeft="764.285714285714,151">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-30.4285714285717,0"
              Start="0,0"
              End="-22.9285714285717,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-22.9285714285717,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\short log file load.Paths[Data Conversion Error Output]"
          TopLeft="854.285714285714,131.428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="140.47619047619,-73.4761904761904"
              Start="0,0"
              End="140.47619047619,-65.9761904761904">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-32.7380952380952" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-32.7380952380952"
                    Point2="0,-36.7380952380952"
                    Point3="4,-36.7380952380952" />
                  <mssgle:LineSegment
                    End="136.47619047619,-36.7380952380952" />
                  <mssgle:CubicBezierSegment
                    Point1="136.47619047619,-36.7380952380952"
                    Point2="140.47619047619,-36.7380952380952"
                    Point3="140.47619047619,-40.7380952380952" />
                  <mssgle:LineSegment
                    End="140.47619047619,-65.9761904761904" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="4.15170851934501,-31.7380952380952,132.1727734375,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\short log file load.Paths[Conditional Split Default Output]"
          TopLeft="1174.5,172.714285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-127.690476190479,122.761904761905"
              Start="0,0"
              End="-127.690476190479,115.261904761905">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,76.0621118012425" />
                  <mssgle:CubicBezierSegment
                    Point1="0,76.0621118012425"
                    Point2="0,80.0621118012425"
                    Point3="-4,80.0621118012425" />
                  <mssgle:LineSegment
                    End="-123.690476190479,80.0621118012425" />
                  <mssgle:CubicBezierSegment
                    Point1="-123.690476190479,80.0621118012425"
                    Point2="-127.690476190479,80.0621118012425"
                    Point3="-127.690476190479,84.0621118012425" />
                  <mssgle:LineSegment
                    End="-127.690476190479,115.261904761905" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-134.459144345239,85.0621118012425,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\short log file load.Paths[Output 01]"
          TopLeft="1174.28571428571,492.428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-263.238095238095,63.9523809523814"
              Start="0,0"
              End="-255.738095238095,63.9523809523814">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-127.619047619047,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-127.619047619047,0"
                    Point2="-131.619047619047,0"
                    Point3="-131.619047619047,4" />
                  <mssgle:LineSegment
                    End="-131.619047619047,59.9523809523814" />
                  <mssgle:CubicBezierSegment
                    Point1="-131.619047619047,59.9523809523814"
                    Point2="-131.619047619047,63.9523809523814"
                    Point3="-135.619047619047,63.9523809523814" />
                  <mssgle:LineSegment
                    End="-255.738095238095,63.9523809523814" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\short log file load.Paths[Output 0]"
          TopLeft="546.904761904761,332.904761904762">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-370.190476190475,63.47619047619"
              Start="0,0"
              End="-362.690476190475,63.47619047619">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-181.095238095238,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-181.095238095238,0"
                    Point2="-185.095238095238,0"
                    Point3="-185.095238095238,4" />
                  <mssgle:LineSegment
                    End="-185.095238095238,59.47619047619" />
                  <mssgle:CubicBezierSegment
                    Point1="-185.095238095238,59.47619047619"
                    Point2="-185.095238095238,63.47619047619"
                    Point3="-189.095238095238,63.47619047619" />
                  <mssgle:LineSegment
                    End="-362.690476190475,63.47619047619" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\short log file load.Paths[Multicast Output 6]"
          TopLeft="990.809523809521,295.476190476191">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-151.047619047617,22.095238095238"
              Start="0,0"
              End="-151.047619047617,14.595238095238">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-18.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-18.5"
                    Point2="0,-22.5"
                    Point3="-4,-22.5" />
                  <mssgle:LineSegment
                    End="-147.047619047617,-22.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-147.047619047617,-22.5"
                    Point2="-151.047619047617,-22.5"
                    Point3="-151.047619047617,-18.5" />
                  <mssgle:LineSegment
                    End="-151.047619047617,14.595238095238" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\short log file load.Paths[Multicast Output 5]"
          TopLeft="1078.80952380952,316.476190476191">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="49.7619047619071,23.095238095238"
              Start="0,0"
              End="42.2619047619071,23.095238095238">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="20.8809523809537,0" />
                  <mssgle:CubicBezierSegment
                    Point1="20.8809523809537,0"
                    Point2="24.8809523809537,0"
                    Point3="24.8809523809537,4" />
                  <mssgle:LineSegment
                    End="24.8809523809537,19.095238095238" />
                  <mssgle:CubicBezierSegment
                    Point1="24.8809523809537,19.095238095238"
                    Point2="24.8809523809537,23.095238095238"
                    Point3="28.8809523809537,23.095238095238" />
                  <mssgle:LineSegment
                    End="42.2619047619071,23.095238095238" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Log File catalog\short log file load.Paths[Multicast Output 3]"
          TopLeft="1000.14285714286,337.476190476191">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-447.5,83.952380952381"
              Start="0,0"
              End="-447.5,76.452380952381">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.2437343358396" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.2437343358396"
                    Point2="0,34.2437343358396"
                    Point3="-4,34.2437343358396" />
                  <mssgle:LineSegment
                    End="-443.5,34.2437343358396" />
                  <mssgle:CubicBezierSegment
                    Point1="-443.5,34.2437343358396"
                    Point2="-447.5,34.2437343358396"
                    Point3="-447.5,38.2437343358396" />
                  <mssgle:LineSegment
                    End="-447.5,76.452380952381" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Log File catalog\short log file load\conversion errors">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Log File catalog\short log file load\file dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Log File catalog\short log file load\date dimenstion">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Log File catalog\short log file load\host dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Log File catalog\short log file load\request dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Log File catalog\short log file load\client dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Log File catalog\short log file load\time dimension">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>